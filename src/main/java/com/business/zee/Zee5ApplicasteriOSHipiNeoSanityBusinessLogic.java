package com.business.zee;

import java.time.Duration;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.testng.Reporter;

import java.awt.AWTException;	
import java.awt.Robot;	
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.awt.Robot;
import com.deviceDetails.DeviceDetails;
import com.driverInstance.DriverInstance;

import com.driverInstance.Drivertools;
import com.emailReport.GmailInbox;
import com.excel.Time_ExcelUpdate;
import com.extent.ExtentReporter;
import com.propertyfilereader.PropertyFileReader;

import com.utility.LoggingUtils;
import com.utility.Utilities;
import com.zee5.iOSHipiPages.IOSHiPiNeoDiscoverPage;
import com.zee5.iOSHipiPages.IOSHiPiNeoShopPage;
import com.zee5.iOSHipiPages.IOSHipiCreateVideoPage;
import com.zee5.iOSHipiPages.IOSHipiNeoHashTagPage;
import com.zee5.iOSHipiPages.IOSHipiNeoHomePage;
import com.zee5.iOSHipiPages.IOSHipiNeoProfilePage;
import com.zee5.iOSHipiPages.IOSHipiNeoSettingsPage;
import com.zee5.iOSHipiPages.IOSHipiSoundPage;

import io.appium.java_client.TouchAction;
import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.touch.WaitOptions;
import io.appium.java_client.touch.offset.PointOption;

@SuppressWarnings("static-access")
public class Zee5ApplicasteriOSHipiNeoSanityBusinessLogic extends Utilities {

	public Date date;
	
	
	Drivertools tools;

	@SuppressWarnings("unused")
	private static final String Expectedresult = null;

	public static String iosModel;
	public static String iosVersion;

	public Zee5ApplicasteriOSHipiNeoSanityBusinessLogic(String Application) {
		new DriverInstance(Application);
		init();

	}

	private int timeout;

	/** Retry Count */
	private int retryCount;
	ExtentReporter extent = new ExtentReporter();

	/** The Constant logger. */
	// final static Logger logger = Logger.getLogger("rootLogger");
	static LoggingUtils logger = new LoggingUtils();

	@SuppressWarnings("rawtypes")
	public TouchAction touchAction;

	/** The iOS driver. */
	public IOSDriver<WebElement> iOSDriver;

	@Override
	public int getTimeout() {
		return timeout;
	}

	public String deeplink1 = "https://www.hipi.co.in/video/181cdc66-3e33-4f2f-a415-50f906780907?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link";

	public String deeplink2 = "https://www.hipi.co.in/video/86c26435-ab50-4ab9-8da8-d05d825b1175?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link";

	public String deeplink3 = "https://www.hipi.co.in/video/5f05e4a6-ce9d-41d5-81f8-0fda0b071678?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link";

	public String deeplink4 = "https://www.hipi.co.in/video/8de4f29a-1ff5-4280-bb93-307b45c2d183?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link";

	public String deeplink5 = "https://www.hipi.co.in/video/9cf602b0-3e41-4769-a945-fbbbef6f6f43?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link";

	public String HashTagLinkdeeplink7="https://www.hipi.co.in/video/d7ff56d8-cd89-42a2-aeab-fce5c64a49ce?utm_source=ios&utm_medium=My_Profile&utm_campaign=hipi_shared_link";
	
	//// *[@id='Plain Text, Check out this video I enjoyed watching on
	//// Hipi\nhttps://www.hipi.co.in/video/5f05e4a6-ce9d-41d5-81f8-0fda0b071678?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link']

	public String FilterAndEffect = "https://www.hipi.co.in/video/c94cc35f-ee39-46f1-9110-7d43bac2afa2?utm_source=ios&utm_medium=Feed&utm_campaign=hipi_shared_link";

	public String soundlink = "https://z5.app/OXSuMziY";

	public String Hashtaglink = "https://z5.app/1L5A3AiQ";
	
	//Comments deeplink
	public String Commentsdeeplink6="https://www.hipi.co.in/video/8a0afef7-8923-4dc4-910d-27eb74af15ed?utm_source=ios&utm_medium=Feed&utm";

	Robot robo;
	

	String pUserType = getParameterFromXML("userType");

	/** Array of App */
	static ArrayList<String> AppMyProfile = new ArrayList<String>();
	static HashSet<String> contentsInWatchList = new HashSet<String>();
	static HashSet<String> contentsInReminders = new HashSet<String>();
	static ArrayList<String> AppSubscription = new ArrayList<String>();
	static ArrayList<String> AppTransaction = new ArrayList<String>();

	@Override
	public void setTimeout(int timeout) {
		this.timeout = timeout;
	}

	@Override
	public int getRetryCount() {
		return retryCount;
	}

	@Override
	public void setRetryCount(int retryCount) {
		this.retryCount = retryCount;
	}

	GmailInbox gmail = new GmailInbox();

	String SVODEpisode = getParameterFromXML("SVODEpisode");

	String profileID = null;
	String profileText = null;

	String ProfileFirstName = null;
	String ProfileLastName = null;
	String DefinedHandleName = null;

	String NotificationUsername = null;
	String NotificationPassword;

	String fun = null;

	String effectName = null;
	int CommentTitleCount1;

	public void init() {
		if (Reporter.getCurrentTestResult().getTestContext().getCurrentXmlTest().getSuite().getName()
				.equals("iOSWeb")) {
			System.out.println("Platform : iOS Web");
			iosModel = (String) getDriver().getCapabilities().getCapability("device.model");
			System.out.println(iosModel + "--- Model Name ");
			iosVersion = (String) getDriver().getCapabilities().getCapability("device.version");
			System.out.println(iosVersion + "--- Version ");
		} else if (Reporter.getCurrentTestResult().getTestContext().getCurrentXmlTest().getSuite().getName()
				.equals("HIPI_iOS")) {
			iosModel = (String) getDriver().getCapabilities().getCapability("device.model");
			System.out.println(iosModel + "--- Model Name ");
			iosVersion = (String) getDriver().getCapabilities().getCapability("device.version");
			System.out.println(iosVersion + "--- Version ");
		} else if (Reporter.getCurrentTestResult().getTestContext().getCurrentXmlTest().getSuite().getName()
				.equals("Web")) {
			System.out.println("Platform : Web");
		}
		PropertyFileReader handler = new PropertyFileReader("properties/Execution.properties");
		setTimeout(Integer.parseInt(handler.getproperty("TIMEOUT")));
		setRetryCount(Integer.parseInt(handler.getproperty("RETRY_COUNT")));
		// logger.info("Loaded the following properties" + " TimeOut :" +
		// getTimeout() + " RetryCount :" + getRetryCount());
	}

	public void devicedetails() throws IOException {
		HeaderChildNode("Device Details");

		iosModel = (String) getDriver().getCapabilities().getCapability("device.model");

		iosVersion = (String) getDriver().getCapabilities().getCapability("device.version");

		extent.extentLogger("", "Model Name :" + iosModel);
		extent.extentLogger("", "Version :" + iosVersion);
	}

	/**
	 * Function to Relaunch the driver
	 */
	public void relaunch(String method, String uninstall) throws Exception {
		HeaderChildNode("Relaunch the app");
		logger.info("Relaunching the application");
		extent.extentLogger("Relaunch", "Relaunching the application");
		waitTime(10000);
		if (uninstall.equalsIgnoreCase("yes")) {
			try {
				getDriver().removeApp("com.zee5.hipi", null);
				System.out.println("App uninstalled");
			} catch (Exception e) {
				// System.out.println("Not uninstalled");
			}
		}

		getDriver().quit();

		new Zee5ApplicasteriOSHipiNeoSanityBusinessLogic("no");// testflight

		if (method.equalsIgnoreCase("appstore") || method.equalsIgnoreCase("testflight")) {
			installiOSHipiApp(getParameterFromXML("InstallBuild"), uninstall, getParameterFromXML("RequiredBuild"),
					getParameterFromXML("BuildVersion"), getParameterFromXML("release"));
			if (uninstall.equalsIgnoreCase("Yes")) {
				logger.info("Successfull Installed");
			}

		}

	}

	/**
	 * Function to quit the driver
	 */
	@SuppressWarnings("unused")
	public void tearDown() {
		getDriver().quit();

		String pUserType = getParameterFromXML("userType");
		String RegisteredEmail = getParameterFromXML("RegisteredEmail");
		String RegisteredEmailPassword = getParameterFromXML("RegisteredEmailPassword");
		String UnRegisteredMobile = getParameterFromXML("UnRegisteredMobile");
		String RegisteredMobile = getParameterFromXML("RegisteredMobile");
		String RegisteredMobilePassword = getParameterFromXML("RegisteredMobilePassword");
		String PromoCode = getParameterFromXML("PromoCode");
		String NonsubscribedUserName = getParameterFromXML("NonsubscribedUserName");
		String NonsubscribedPassword = getParameterFromXML("NonsubscribedPassword");
		String SubscribedUserName = getParameterFromXML("SubscribedUserName");
		String SubscribedPassword = getParameterFromXML("SubscribedPassword");
		String FirstName = getParameterFromXML("FirstName");
		String LastName = getParameterFromXML("LastName");

	}

	@SuppressWarnings("rawtypes")
	public void tapOnPointWithAxis(int x, int y, int times) throws IOException {
		// Shop button =discoverX+165,DiscoverY+35
		for (int i = 1; i <= times; i++) {
			TouchAction act = new TouchAction(getDriver());
			act.press(PointOption.point(x, y)).perform().release();
			logger.info("Tapped on point given X axis as " + x + " and Y axis as " + y + "for " + i + " times");
			extent.extentLogger("",
					"Tapped on point given X axis as " + x + " and Y axis as " + y + "for " + i + " times");
		}

	}

	// Retrieve the Mobile Device Name
	String getOEMName = DeviceDetails.OEM;

	public void installiOSHipiApp(String installMethod, String uninstall, String Required, String Version,
			String release) {
		HeaderChildNode("Install HiPi iOS app from " + installMethod);
		if (installMethod.equalsIgnoreCase("testflight")) {

			try {

				Thread.sleep(10000);
				if (uninstall.equalsIgnoreCase("Yes")) {
					buildVersion(Required, Version, release);

				}

			} catch (Exception e) {

			}
		} else if (installMethod.equalsIgnoreCase("appstore")) {
			logger.info("Install app from appstore");
			try {

				Thread.sleep(5000);
				click(IOSHipiNeoHomePage.objiosSearchTabBtn, "Search Tab Button");
				waitTime(1500);
				click(IOSHipiNeoHomePage.objiosSearchBar, "Search TextField");
				waitTime(4500);
				type(IOSHipiNeoHomePage.objiosSearchBar, "Hipi" + "\n", "Search Text Field");
				Thread.sleep(10000);
				if (uninstall.equalsIgnoreCase("Yes")) {
					click(IOSHipiNeoHomePage.objiosAppStoreHipiReDownloadBtn, "hipi App Re-Download Button");
					;
					waitTime(5000);
					if (verifyElementExist(IOSHipiNeoHomePage.objiosAccPopUp, "Account Pop Up")) {
						waitTime(3000);
						click(IOSHipiNeoHomePage.objiosInstallBtnInAccPopUp, "Install in Account Pop Up");
						waitTime(3000);

					}

				}
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosAppStoreOpenBtn, 1000, "Open App Button");
				click(IOSHipiNeoHomePage.objiosAppStoreOpenBtn, "Open App Button");
				waitTime(5500);
				Zee5AppDismissAppPermissionsPopups();

			} catch (Exception e) {

			}
		}

	}

	public void LinkGenerate(String shoplink) throws Exception {
		for (int i = 1; i <= 4; i++) {
			if (!verifyElementExist(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link")) {

				type(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp, shoplink, "To field");
				waitTime(5000);
				click(IOSHipiNeoHomePage.objiosSendBtnInMessageApp, "Send btn");

			} else if (shoplink.equalsIgnoreCase(deeplink1) | shoplink.equalsIgnoreCase(deeplink2)
					| shoplink.equalsIgnoreCase(deeplink3) | shoplink.equalsIgnoreCase(deeplink4)
					| shoplink.equalsIgnoreCase(deeplink5)) {
				click(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link");
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open")) {
					click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
					waitTime(4000);

				}

				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, 20, "Shop button");
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
				break;
			} else {
				click(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link");
				waitTime(5000);
				if (verifyElementExist(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open")) {
					click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
					waitTime(4000);

				}
				break;
			}

		}
	}

	public void DeepLinkURLForShopButton(String Relaunch, String name, String linkName) throws Exception {
		getDriver().quit();
		waitTime(3000);
		new Zee5ApplicasteriOSHipiNeoSanityBusinessLogic("Message");
		waitTime(3000);
		if (Relaunch.equalsIgnoreCase("Yes")) {

			if (verifyElementExist(IOSHipiNeoHomePage.objiosShopMsgInMessageApp, "shop msg")) {
				// ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar,"Shop
				// button");
				waitTime(3000);
				PartialSwipe_ios("Down", 2);
				waitTime(3000);
				ScrollToMessageiOS_Up(IOSHipiNeoHomePage.objiosShopMsgInMessageApp, "shop msg");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosShopMsgInMessageApp, "shop msg");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link");
				waitTime(8000);
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
				if (!verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home")) {

					click(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link");
					waitTime(5000);
					if (verifyElementExist(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open")) {
						click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
						waitTime(4000);

					}
				}
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

			} else {
				click(IOSHipiNeoHomePage.objiosComposeBtnInMessageApp, "Compose Message");
				waitTime(2000);
				if (!verifyElementExist(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, "To field")) {
					click(IOSHipiNeoHomePage.objiosComposeBtnInMessageApp, "Compose Message");
					waitTime(2000);
				}
				click(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, "To field");
				waitTime(2000);
				type(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, "shop", "To field");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp, "Body Text Field");
				waitTime(3000);
				LinkGenerate(deeplink1);
			}

		} else {

			if (!verifyElementExist(IOSHipiNeoHomePage.objiosComposeBtnInMessageApp, "Compose Message")) {
				click(IOSHipiNeoHomePage.objiosMessagebackBtn, "Back button");
				waitTime(3000);

			}
			PartialSwipe_ios("Down", 2);
			waitTime(3000);
			ScrollToMessageiOS_Up(IOSHipiNeoHomePage.objiosNameInMsgWindow(name), name);
			waitTime(3000);
			if (verifyElementDisplayed(IOSHipiNeoHomePage.objiosNameInMsgWindow(name))) {
				click(IOSHipiNeoHomePage.objiosNameInMsgWindow(name), name);
				waitTime(4000);
				click(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link");

				waitTime(8000);
			
				if (verifyElementExist(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open")) {
					click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
					waitTime(4000);

				}

				if (!verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home")) {

					click(IOSHipiNeoHomePage.objiosDeepLinkURLInMessageApp, "Link");
					waitTime(8000);
				}
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

				waitTime(3000);
				if ((name.equalsIgnoreCase("shop1")) | (name.equalsIgnoreCase("shop2"))
						| (name.equalsIgnoreCase("shop3")) | (name.equalsIgnoreCase("shop4"))
						| (name.equalsIgnoreCase("shop5"))) {

					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled_Shop");
				}
				
				if (verifyElementExist(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open")) {
					click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
					waitTime(4000);

				}

			} else {
				click(IOSHipiNeoHomePage.objiosComposeBtnInMessageApp, "Compose Message");
				waitTime(2000);
				if (!verifyElementExist(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, "To field")) {
					click(IOSHipiNeoHomePage.objiosComposeBtnInMessageApp, "Compose Message");
					waitTime(2000);
				}
				click(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, "To field");
				waitTime(2000);
				type(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, name, "To field");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp, "Body Text Field");
				waitTime(3000);
				LinkGenerate(linkName);

			}

		}

	}

	public void CreatorDeeplinkMsgInvoke() throws Exception {
		DeepLinkURLForShopButton("No", "shop", deeplink5);
	}

	public void buildVersion(String Required, String Version, String release) throws Exception {
		if (Required.equalsIgnoreCase("Latest")) {
			if (checkElementDisplayed(IOSHipiNeoHomePage.objiosInstallButton, "Install app")) {
				click(IOSHipiNeoHomePage.objiosInstallButton, "Install app");
				Thread.sleep(15000);
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosOpenButton, 1000, "Open Button");
				click(IOSHipiNeoHomePage.objiosOpenButton, "Open app");
				Zee5AppDismissAppPermissionsPopups();
			}
		} else {
			click(IOSHipiNeoHomePage.objiosHipiInTestFlight, "Hipi");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiosPreviousBuildsInTestFlight, "Previous builds");
			waitTime(1500);
			click(IOSHipiNeoHomePage.objiosPreviousBuildsInTestFlight, "Previous builds");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiosVersionIntestFlight(Version), Version);
			waitTime(1500);
			click(IOSHipiNeoHomePage.objiosVersionIntestFlight(Version), Version);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosRealeseIntestFlight(release), release);
			waitTime(1500);
//			if(verifyElementExist(IOSHipiNeoHomePage.objiosOlderVersionPopUp, "Older Version")) {
//				
//				click(IOSHipiNeoHomePage.objiosInstallBtnOnOlderVersionPopUp, "Install");
//				waitTime(2000);
//				
//			}

			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosOpenBtnIntestFlight(release), 100, "Open Button");
			click(IOSHipiNeoHomePage.objiosOpenBtnIntestFlight(release), "Open Button");
			waitTime(3000);
			Zee5AppDismissAppPermissionsPopups();
		}

	}

	public void LoginAndNivigateToHipi(String loginMethod) throws Exception {
		extent.HeaderChildNode("Login Functionality");
		String pUserType = getParameterFromXML("userType");

		extent.extentLogger("Login Type", "Login Type : " + pUserType);

		switch (loginMethod) {
		case "Guest":
			extent.HeaderChildNode("Guest User");
			extent.extentLogger("Accessing the application as Guest user", "Accessing the application as Guest user");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(8000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiiosLoginPopUp, 10, "Login in to Hipi");
			if (verifyElementExist(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi")) {
				logger.info(" UserType: Guest user");
				extent.extentLogger("", " UserType: Guest user");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close");
				waitTime(2000);

			} else {
				Logout();
				logger.info(" Logged out Successfully now UserType: Guest user");
				extent.extentLogger("", " Logged out Successfully now UserType: Guest user");
			}

			break;

		case "NonSubscribedUser":
			// navigateToIntroScreen_DisplaylangScreen();
			extent.HeaderChildNode(" log in as NonSubscribed User using email");

			// click on Profile icon
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 15, "Profile button")) {
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
					Logout();
					waitTime(3000);
					verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
				}

				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");

				String Username = getParameterFromXML("NonsubscribedUserName");
				String Password = getParameterFromXML("NonsubscribedPassword");
				waitTime(2000);

				hideKeyboard();
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiOSEmailIdField, "Email field");
				waitTime(2000);
				hideKeyboard();

				type(IOSHipiNeoHomePage.objiOSEmailIdField, Username, "Email Field");
				waitTime(2000);
				hideKeyboard();

				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
				waitTime(2000);
				hideKeyboard();

				type(IOSHipiNeoHomePage.objiosPasswordField, Password, "Password field");
				waitTime(2000);
				hideKeyboard();
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");

				if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiiosLoginToastMsg, 15, "Loggeg-In Successfully")) {
					logger.info("Logged-In Successfully toast msg");
					extent.extentLoggerPass("", "Logged-In Successfully toast msg");
				} else {
					logger.error("Logged-In Successfully toast msg is not displayed");
					extent.extentLoggerFail("", "Loggeg-In Successfully toast msg is not displayed");
				}

				waitTime(5000);
				if (verifyElementExist(IOSHipiNeoProfilePage.objiosSavePasswordPopUp, "Save password pop up")) {
					click(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now CTA");
					waitTime(2000);
				}
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 30, "Home Button");
				// click on feed button
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

				break;
			} else {
				logger.info("Profile button is not displayed");
				extent.extentLoggerFail("", "Profile button is not displayed");
			}
		}
	}

	public void Login() throws InterruptedException, Exception {

		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 15, "Profile button")) {
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
				Logout();
				waitTime(3000);
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
			}

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");

			String Username = getParameterFromXML("NonsubscribedUserName");
			String Password = getParameterFromXML("NonsubscribedPassword");
			waitTime(2000);

			hideKeyboard();
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSEmailIdField, "Email field");
			waitTime(2000);
			hideKeyboard();

			type(IOSHipiNeoHomePage.objiOSEmailIdField, Username, "Email Field");
			waitTime(2000);
			hideKeyboard();

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
			waitTime(2000);
			hideKeyboard();

			type(IOSHipiNeoHomePage.objiosPasswordField, Password, "Password field");
			waitTime(2000);
			hideKeyboard();
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");

			waitTime(10000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSavePasswordPopUp, "Save password pop up")) {
				click(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now CTA");
				waitTime(2000);
			}
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 100, "Home Button");
			// click on feed button
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Logout() throws Exception {

		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 20, "Home Icon")) {
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Version of the app");
			waitTime(2000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
			waitTime(2000);

			verifyElementExist(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Are u sure for logout");
			waitTime(2000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutConfirmBtn, "logout Confirm button");
			waitTime(800);
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiiosLogOutToastMsg, 15, "Logged-Out Successfully")) {
				logger.info("Logged-Out Successfully toast msg");
				extent.extentLoggerPass("", "Logged-Out Successfully toast msg");
			} else {
				logger.error("Logged-Out Successfully toast msg is not displayed");
				extent.extentLoggerFail("", "Logged-Out Successfully toast msg is not displayed");
			}
			waitTime(2000);

		}
	}

	public void DeleteDraftVideos() throws Exception {
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page")) {
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);

			for (;;) {

				if (verifyElementExist(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video")) {

					click(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Video");
					waitTime(3000);
					tapiOS_Middlepoint(1);
					if (verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete option")) {
						click(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete button");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosDeleteButtonYes, "Yes button");
						waitTime(2000);
						if (!verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage,
								"Drafts videos in profile page")) {
							waitTime(2000);
							extent.extentLoggerFail("", "User not able to delete the Drafts");
							click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "back btn from draft video");
							waitTime(2000);
							click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "back btn from draft table");
							waitTime(2000);
							click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home btn");
							break;

						}

					}
				} else {
					click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "back btn from draft table");
					waitTime(2000);
					PartialSwipeiOS("DOWN", 2);
					waitTime(2000);
					click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home btn");
					break;
				}

			}

		} else {
			logger.info("No Draft videos");
		}

	}
	
	

	public void Zee5AppDismissAppPermissionsPopups() throws Exception {
		extent.HeaderChildNode("Dismiss App Permissions Popups");
		waitTime(6000);
		waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosTrackActivityPermissionPopup, 850, "Pop ups");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosTrackActivityPermissionPopup,
				"Track Activity Permission Popup")) {
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosAskAppNotToTrackButton,
					"Ask App Not To Track button");
			waitTime(3000);
		}

		waitTime(1000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosNotificationsPopup,
				"'hipi' Would like to Send Notfication Pop Up")) {
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosDontAllowButton, "Dont Allow button");
			waitTime(3000);
		}
		waitTime(4000);
//		DeepLinkURLForShopButton("yes", "no", "no");
//		waitTime(4000);
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosSwipeForNxtVideo, 50, "Hand Gesture")) {
			PartialSwipe("UP", 1);
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
		if(waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSShoppingthelookLookBtn, 20,
				"Shopping the Look Pop up")) {
		click(IOSHipiNeoHomePage.objiOSAlrightGotitBtn, "Alright Got it Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSOkCoolBtn, "OK Cool");
		waitTime(4000);
		}

		saveVideoPopup();

	}

	public void saveVideoPopup() throws Exception {
		for (int i = 1; i <= 10; i++) {
			tapiOS_Middlepoint(1);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSsave_video, 15, "Save video pop up");
			click(IOSHipiNeoHomePage.objiOSsave_video, "Save video");
			if (verifyElementExist(IOSHipiNeoHomePage.objiosNotificationAllowAccesssToPhotosPopup, "Save access")) {
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpOKButton, "OK")) {
					click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpOKButton, "OK");
					waitTime(10000);
				}
				if (verifyElementExist(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpAllowButton,
						"Allow Access to All Photos")) {
					click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpAllowButton, "Allow Access to All Photos");
					waitTime(10000);
				}

				break;
			} else {
				tapiOSAtCenterOfScrreen(1);
				waitTime(3000);
				Swipe("UP", 1);

			}

		}

	}

	public void saveVideoPopUp() throws Exception {
		tapiOS_Middlepoint(1);
		click(IOSHipiNeoHomePage.objiOSsave_video, "Save video");
		waitTime(2500);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpOKButton, "OK")) {
			click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpOKButton, "OK");
		}
		if (verifyElementExist(IOSHipiNeoHomePage.objiosNotificationAllowAccesssToPhotosPopup, "Save access")) {
			waitTime(1000);
			click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpAllowButton, "Allow Access to All Photos");
		}
	}

	public void navigateToAnyShoppableVideoInDiscoverPage(int index) throws Exception {
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(3500);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(index), "Shoppable video");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(index), "Shoppable video");
		waitTime(3000);

	}

	public void AppLaunchModule_T002_p0() throws Exception {

		extent.HeaderChildNode("T002_Verify user is able to tap on HiPi widget to launch the app");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSFeedScreen, "Feed Screen After launching app");
		waitTime(5000);
		Toolbar("open");
		waitTime(3000);
		if ((!verifyElementDisplayed(IOSHipiNeoHomePage.objiOSWifiOff))
				&& (!verifyElementDisplayed(IOSHipiNeoHomePage.objiOSWifiOnButNotConnected))) {
			logger.info("Wifi is On and connected ");
			extent.extentLogger("", "Wifi is On and connected ");

			logger.info(
					"User is able to sucessfully launch the HiPi application when internet is turned On,Expected Behaviour");
			extent.extentLoggerPass("",
					"User is able to sucessfully launch the HiPi application when internet is turned On,Expected Behaviour");

		} else {
			logger.info("User is not able to sucessfully launch the HiPi application when internet is turned On");
			extent.extentLoggerFail("",
					"User is not able to sucessfully launch the HiPi application when internet is turned On");

		}

		Toolbar("close");
		waitTime(3000);
	}

	public void AppLaunchModule_T004_p2() throws Exception {
		extent.HeaderChildNode(
				"T004Check if user is able to launches the HiPi application when internet is turned off");
		waitTime(5000);
		Toolbar("open");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSWifiIsOn, "Wifi off button");
		Toolbar("close");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSNetworkError, "Network error");

		if (verifyElementDisplayed(IOSHipiNeoHomePage.objiOSNetworkError)) {
			screencapture();
			logger.info(
					"User got network error message when he launches HiPi application without internet,expected behaviour");
			extent.extentLoggerPass("",
					"User got network error message when he launches HiPi application without internet,expected behaviour");
		} else {
			logger.info("user not able to see network error message");
			extent.extentLoggerFail("", "user not able to see network error message");
		}
		waitTime(3000);
		Toolbar("open");
		waitTime(4000);

		click(IOSHipiNeoHomePage.objiOSWifiOff, "Wifi On button");
		waitTime(5000);
		Toolbar("close");
	}

	@SuppressWarnings("rawtypes")
	public void Toolbar(String method) throws IOException {
		iosModel = (String) getDriver().getCapabilities().getCapability("device.model");
		System.out.println(iosModel);
		try {
			if (iosModel.equalsIgnoreCase("iPhone 11")) {
				extent.extentLogger("", " Opening tool bar");
				System.out.println(" Opening tool bar");
				TouchAction touchAction = new TouchAction(getDriver());
				Dimension size = getDriver().manage().window().getSize();

				int starty = (int) (size.height * 0.90);
				int endy = (int) (size.height * 0.01);
				int startx = (int) (size.width * 0.9);
				if (method.equalsIgnoreCase("open")) {
					touchAction.press(PointOption.point(startx, endy))
							.waitAction(WaitOptions.waitOptions(Duration.ofMillis(2000)))
							.moveTo(PointOption.point(startx, starty)).release().perform();
					System.out.println("toolbar opened");
				}
				if (method.equalsIgnoreCase("close")) {
					touchAction.press(PointOption.point(startx, starty))
							.waitAction(WaitOptions.waitOptions(Duration.ofMillis(2000)))
							.moveTo(PointOption.point(startx, endy)).release().perform();
					System.out.println("toolbar closed");
				}
			} else {
				extent.extentLogger("", " Opening tool bar");
				System.out.println(" Opening tool bar");
				TouchAction touchAction = new TouchAction(getDriver());
				Dimension size = getDriver().manage().window().getSize();

				int starty = (int) (size.height * 1);
				int endy = (int) (size.height * 0.01);
				int startx = (int) (size.width * 0.4);
				if (method.equalsIgnoreCase("open")) {
					touchAction.press(PointOption.point(startx, starty))
							.waitAction(WaitOptions.waitOptions(Duration.ofMillis(2000)))
							.moveTo(PointOption.point(startx, endy)).release().perform();
					System.out.println("toolbar opened");
				}
				if (method.equalsIgnoreCase("close")) {
					int startY = (int) (size.height * 0.8);
					int endY = (int) (size.height * 0.2);
					int startX = (int) (size.width * 0.4);
					touchAction.press(PointOption.point(startX, endY))
							.waitAction(WaitOptions.waitOptions(Duration.ofMillis(2000)))
							.moveTo(PointOption.point(startX, startY)).release().perform();
					System.out.println("toolbar closed");
				}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	/**
	 * Method to scroll to element-UP
	 */
	public void ScrollToElementiOS_Up(By Locator, String validationText) throws Exception {
		// Swipe("DOWN", 2);
		for (int i = 1; i <= 40; i++) {

			if (verifyElementExist(Locator, validationText) == true) {

				String text = getText(Locator);

				logger.info("Scrolled till " + text);
				extent.extentLogger("Scroll", "Scrolled till " + text);
				screencapture();
				break;
			}
			waitTime(2000);
			PartialSwipe("UP", 1);
		}
	}
	

	/**
	 * Method to scroll to Message-UP
	 */
	public void ScrollToMessageiOS_Up(By Locator, String validationText) throws Exception {
		// Swipe("DOWN", 2);
		for (int i = 1; i <= 4; i++) {

			if (verifyElementExist(Locator, validationText) == true) {

				String text = getText(Locator);

				logger.info("Scrolled till " + text);
				extent.extentLogger("Scroll", "Scrolled till " + text);
				screencapture();
				break;
			}
			waitTime(2000);
			PartialCommentsSwipeiOS("UP", 1);
		}
	}

	public void ScrollToRailiOS_Up(By Locator, String validationText) throws Exception {
		// Swipe("DOWN", 2);
		for (int i = 1; i <= 40; i++) {

			if (verifyElementExist(Locator, validationText) == true) {

				String text = getText(Locator);

				logger.info("Scrolled till " + text);
				extent.extentLogger("Scroll", "Scrolled till " + text);
				screencapture();
				break;
			}
			waitTime(2000);
			PartialSwipe_ios("UP", 1);
		}
	}

	/**
	 * Method to scroll to element-UP
	 */
	public void ScrollToElementiOS_Down(By Locator, String validationText) throws Exception {

		for (int i = 1; i <= 40; i++) {
			if (verifyElementExist(Locator, validationText) == true) {

				String text = getText(Locator);

				logger.info("Scrolled till " + text);
				extent.extentLogger("Scroll", "Scrolled till " + text);
				screencapture();
				break;
			}
			waitTime(2000);
			PartialSwipe("DOWN", 1);
		}
	}

	public void FeedScreen_T005(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T005_Guest User - Check if user is able to view 'Feed' screen");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSFeedScreen, "Feed Screen")) {
				logger.info("User able to see the 'Feed' screen,Expected Behaviour");
				extent.extentLoggerPass("", "User able to see the 'Feed' screen,Expected Behaviour");
			} else {
				logger.info("User not able to see the 'Feed' screen");
				extent.extentLoggerFail("", "User not able to see the 'Feed' screen");
			}
		}
	}

	public void FeedScreen_GT006(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			waitTime(2000);
			extent.HeaderChildNode(
					"T006_Guest User - Check if  'For You' and 'Following' tabs are displayed at top of the screen in Feed section");

			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen")) {
				logger.info("User able to see the 'Following' tab in Feed Screen,Expected Behaviour");
				extent.extentLoggerPass("", "User able to see the 'Following' tab in Feed Screen,Expected Behaviour");
			} else {
				logger.info("User not able to see the Following tab in Feed Screen");
				extent.extentLoggerFail("", "User not able to see the Following tab in Feed Screen");
			}
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen")) {
				logger.info("User able to see the 'For You' tab in Feed Screen,Expected Behaviour");
				extent.extentLoggerPass("", "User able to see the 'For You' tab in Feed Screen,Expected Behaviour");
			} else {
				logger.info("User not able to see the For You tab in Feed Screen");
				extent.extentLoggerFail("", "User not able to see the For You tab in Feed Screen");
			}
		}

	}

	public void FeedScreen_NT019(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T019_Logged in User - Check if  'For You' and 'Following' tabs are displayed at top of the screen in 'Feed' section");
			System.out.println("T019_Logged in User - Check if  'For You' and 'Following' tabs are displayed at top of the screen in 'Feed' section");
			
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen")) {
				logger.info("User able to see the 'Following' tab in Feed Screen,Expected Behaviour");
				extent.extentLoggerPass("", "User able to see the 'Following' tab in Feed Screen,Expected Behaviour");
			} else {
				logger.info("User not able to see the Following tab in Feed Screen");
				extent.extentLoggerFail("", "User not able to see the Following tab in Feed Screen");
			}
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen")) {
				logger.info("User able to see the 'For You' tab in Feed Screen,Expected Behaviour");
				extent.extentLoggerPass("", "User able to see the 'For You' tab in Feed Screen,Expected Behaviour");
			} else {
				logger.info("User not able to see the For You tab in Feed Screen");
				extent.extentLoggerFail("", "User not able to see the For You tab in Feed Screen");
			}
		}

	}

	public void FeedScreen_T007_p1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			waitTime(3000);
			extent.HeaderChildNode(
					"T007_Guest User - Check the options are present at bottom of the screen in 'Feed' section");

			waitTime(5000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSBelowTabBarInFeedScreen, "Tab Bar Below Feed Screen")) {
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button in below Tab Bar");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar,
						" Discover button in below Tab Bar");
				waitTime(2000);
                ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button in below Tab Bar");
				waitTime(2000);

				verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button in below Tab Bar");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar,
						"Profile button in below Tab Bar");
				waitTime(2000);
				logger.info(
						"User able to see the options are present at bottom of the screen in 'Feed' section,Expected Behaviour");
				extent.extentLoggerPass("",
						"User able to see the options are present at bottom of the screen in 'Feed' section,Expected Behaviour");

			} else {
				logger.info(
						"User is not able to see the options are present at bottom of the screen in 'Feed' section");
				extent.extentLoggerFail("",
						"User is not able to see the options are present at bottom of the screen in 'Feed' section");
			}

		}

	}

	public void FeedScreen__T020_p2(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T020_Logged in User - Check the options are present at bottom of the screen in 'Feed' section");

			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSBelowTabBarInFeedScreen, "Tab Bar Below Feed Screen")) {
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button in below Tab Bar");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar,
						" Discover button in below Tab Bar");
				waitTime(2000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button in below Tab Bar");
				waitTime(2000);

				verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button in below Tab Bar");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar,
						"Profile button in below Tab Bar");
				waitTime(2000);
				logger.info(
						"User able to see the options are present at bottom of the screen in 'Feed' section,Expected Behaviour");
				extent.extentLoggerPass("",
						"User able to see the options are present at bottom of the screen in 'Feed' section,Expected Behaviour");

			} else {
				logger.info(
						"User is not able to see the options are present at bottom of the screen in 'Feed' section");
				extent.extentLoggerFail("",
						"User is not able to see the options are present at bottom of the screen in 'Feed' section");
			}
		}

	}

	public void FeedScreen_T009(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T009_Guest User - Check if video is playing by default in 'For You' tab ");
			System.out.println("T009_Guest User - Check if video is playing by default in 'For You' tab ");
			
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Play button")) {
				logger.info(
						"User able to see the video is played by default in 'For You' tab in 'Feed' section,Expected Behaviour");
				extent.extentLoggerPass("",
						"User able to see the video is played by default in 'For You' tab in 'Feed' section,Expected Behaviour");

			} else {
				logger.info(
						"User is not able to see the video is played by default in 'For You' tab in 'Feed' section");
				extent.extentLoggerFail("",
						"User is not able to see the video is played by default in 'For You' tab in 'Feed' section");

			}
		}

	}

	public void FeedScreen_T025(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T025_Logged in User - Check if user is able to verify the video is playing by default in 'For You' tab ");

			// click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Play button")) {
				logger.info(
						"User able to see the video is played by default in 'For You' tab in 'Feed' section,Expected Behaviour");
				extent.extentLoggerPass("",
						"User able to see the video is played by default in 'For You' tab in 'Feed' section,Expected Behaviour");

			} else {
				logger.info(
						"User is not able to see the video is played by default in 'For You' tab in 'Feed' section");
				extent.extentLoggerFail("",
						"User is not able to see the video is played by default in 'For You' tab in 'Feed' section");

			}
		}

	}

	public void FeedScreen_GT011(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T011_Guest User - Check if user is able to refresh the list on contents in 'For You' tab of HiPi");
			System.out.println("T011_Guest User - Check if user is able to refresh the list on contents in 'For You' tab of HiPi");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2000);
			// ScrollToElementiOS_Down(IOSHipiNeoHomePage.objiiosRefresh,"Refresh list");
			for (int i = 0; i <= 50; i++) {
				PartialSwipeiOS("DOWN", 1);
				if (verifyElementExist(IOSHipiNeoHomePage.objiiosRefresh, "Refresh list") == true) {
					logger.info("User is able to refresh the list on contents in 'For You' tab of HiPi Feed");
					extent.extentLoggerPass("",
							"User is able to refresh the list on contents in 'For You' tab of HiPi Feed");
					break;
				}

			}

		}

	}

	public void FeedScreen_NT023(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T023_Logged in User - Check if user is able to refresh the list on contents in 'For You' tab of HiPi");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2000);
			// ScrollToElementiOS_Down(IOSHipiNeoHomePage.objiiosRefresh,"Refresh list");
			for (int i = 0; i <= 50; i++) {
				PartialSwipeiOS("DOWN", 1);
				if (verifyElementExist(IOSHipiNeoHomePage.objiiosRefresh, "Refresh list") == true) {
					logger.info("User is able to refresh the list on contents in 'For You' tab of HiPi Feed");
					extent.extentLoggerPass("",
							"User is able to refresh the list on contents in 'For You' tab of HiPi Feed");
					break;
				}

			}
		}

	}

	public void FeedScreen_T012(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T012_Guest User - Check if user is able to pause and play the video in 'For You' tab");
			System.out.println("T012_Guest User - Check if user is able to pause and play the video in 'For You' tab");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			screencapture();
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				logger.info("user able to  pause the video in 'For You' tab ");
				extent.extentLoggerPass("", "user able to  pause the video in 'For You' tab");
			} else {
				logger.info("user not  able to  pause the video in 'For You' tab ");
				extent.extentLoggerFail("", "user not  able to  pause the video in 'For You' tab ");
			}
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, " pause button");
			waitTime(3000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				logger.info("user able to  play the video in 'For You' tab ");
				extent.extentLoggerPass("", "user able to  play the video in 'For You' tab");
			} else {
				logger.info("user not  able to  play the video in 'For You' tab ");
				extent.extentLoggerFail("", "user not  able to  play the video in 'For You' tab ");
			}
		}

	}

	public void FeedScreen_T026(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
            System.out.println();
			extent.HeaderChildNode(
					"T026Logged in User - Check if user is able to pause and play the video in 'For You' tab");
			System.out.println("T026Logged in User - Check if user is able to pause and play the video in 'For You' tab");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(3000);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			
			waitTime(4000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(5000);
			screencapture();
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				logger.info("user able to  pause the video in 'For You' tab ");
				extent.extentLoggerPass("", "user able to  pause the video in 'For You' tab");
			} else {
				logger.info("user not  able to  pause the video in 'For You' tab ");
				extent.extentLoggerFail("", "user not  able to  pause the video in 'For You' tab ");
			}
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, " pause button");
			waitTime(3000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				logger.info("user able to  play the video in 'For You' tab ");
				extent.extentLoggerPass("", "user able to  play the video in 'For You' tab");
			} else {
				logger.info("user not  able to  play the video in 'For You' tab ");
				extent.extentLoggerFail("", "user not  able to  play the video in 'For You' tab ");
			}
          NavigateToHomPage();
		}

	}

	public void FeedScreen_T013_T027_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T013_Guest User -  Check the UI of the 'For You' tab in 'Feed' screen");
		} else {
			extent.HeaderChildNode("T027_Logged in User -  Check the UI of the 'For You' tab in 'Feed' screen");

		}
		deleteProductsInSavedMoments();
		waitTime(2000);
		deleteFollowingInFollowingScreen();
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Button");

		verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");

		verifyElementPresent(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment button");

		verifyElementPresent(IOSHipiNeoHomePage.objiOSShareBtn, "Share button");
		waitTime(2500);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2500);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");

		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn, "Heart button");

		verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User name");
		String username = getDriver().findElement(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen).getText();
		logger.info("The username is : " + username);
		extent.extentLogger("", "The username is : " + username);
		waitTime(2000);

		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "Hash Tag");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "Hash Tag");

		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music tag");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music tag");
		String Music = getDriver().findElement(IOSHipiNeoHomePage.objiOSMusicInFeedScreen).getText();
		logger.info("The username is : " + Music);
		extent.extentLogger("", "The username is : " + Music);
		waitTime(2000);

		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSBelowTabBarInFeedScreen, "Tab Bar Below Feed Screen")) {
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button in below Tab Bar");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar,
					" Discover button in below Tab Bar");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button in below Tab Bar");
			waitTime(2000);

			verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button in below Tab Bar");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button in below Tab Bar");
			waitTime(2000);
			logger.info(
					"User able to see the options are present at bottom of the screen in 'Feed' section,Expected Behaviour");
			extent.extentLoggerPass("",
					"User able to see the options are present at bottom of the screen in 'Feed' section,Expected Behaviour");

		} else {
			logger.info("User is not able to see the options are present at bottom of the screen in 'Feed' section");
			extent.extentLoggerFail("",
					"User is not able to see the options are present at bottom of the screen in 'Feed' section");
		}

	}

	public void FeedScreen_T029(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T029_Logged in User - Check if user is able to pause the played by default video by tapping on it");

			PopupOfCameraAndMicrophoneWithCreator(userType);
			waitTime(4000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			screencapture();
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				logger.info(
						"Default played video is paused with a paused icon displayed over the video,Expected Behaviour");
				extent.extentLoggerPass("",
						"Default played video is paused with a paused icon displayed over the video,Expected Behaviour");
			} else {
				logger.info("Default played video is not paused with a paused icon displayed over the video");
				extent.extentLoggerFail("",
						"Default played video is not paused with a paused icon displayed over the video");
			}
			waitTime(3000);
		}
	}

	public void FeedScreen_T030(String userType) throws Exception {

		if (userType.equals("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T030_Logged in User - Check if user is able to resume a paused video by tapping on it");
			System.out.println("T030_Logged in User - Check if user is able to resume a paused video by tapping on it");
			
			for (int i = 0; i <= 4; i++) {
				if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
					tapiOSAtCenterOfScrreen(1);
					waitTime(21000);
				} else {
					break;

				}

			}
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, " pause button");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				logger.info(
						"Video paused should resume and the paused icon should disappear over the video,video starts playing,Expected Behaviour");
				extent.extentLoggerPass("",
						"Video paused should resume and the paused icon should disappear over the video,video starts playing,Expected Behaviour");
			} else {
				logger.info("user not  able to resume the video");
				extent.extentLoggerFail("", "user not  able to resume the video");
			}
		}

	}

	// T034
	public void FeedScreen_T034(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T034_Logged in User - Check the list of actions present on long press popup of a video");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			waitTime(4000);
			tapiOS_Middlepoint(1);
			waitTime(3000);

			if (verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video pause")) {
				verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveVideoPopUp, "Save Video PopUp");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSAddToFavouritesPopUp, "Add To Favourites PopUp");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSReportPopUp, "Report PopUp");
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSNotinterestedPopUp, "Not interested PopUp");
				waitTime(2000);
			}

			click(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Play button");
			waitTime(3000);
		}
	}

	// T038
	public void FeedScreen_T038(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T038_Logged in User - Check if 'Profile details' screen is displayed when tapped on 'name' of a video description");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(3000);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			String Username = getDriver().findElement(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen).getText();
			logger.info("UserName present in Feed screen as : " + Username);
			extent.extentLogger("", "UserName present in Feed screen as : " + Username);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "Username");
			waitTime(4000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOSUserNameInProfileDetailsPage,
					"Username in Profile Details page")) {
				logger.info(
						"'Profile details' screen is displayed when tapped on 'name' of a video description,Expected Behaviour");
				extent.extentLoggerPass("",
						"'Profile details' screen is displayed when tapped on 'name' of a video description,Expected Behaviour");
			} else {
				logger.info("'Profile details' screen is not displayed when tapped on 'name' of a video description.");
				extent.extentLoggerFail("",
						"'Profile details' screen is not displayed when tapped on 'name' of a video description.");

			}
			waitTime(2000);
			String UsernameInProfileDetailsPage = getDriver()
					.findElement(IOSHipiNeoProfilePage.objiOSUserNameInProfileDetailsPage).getText();
			logger.info("UserName present in Profile Details Page as : " + UsernameInProfileDetailsPage);
			extent.extentLogger("", "UserName present in Profile Details Page as : " + UsernameInProfileDetailsPage);
			waitTime(3000);

			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button");

		}
	}

	// T041
	public void FeedScreen_HashTag_T041(String userType) throws Exception {
		if (!userType.equals("Guest")) {

			extent.HeaderChildNode(
					"T041_Logged in User - Check if user is able to view hastag in the description on played/paused video");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			waitTime(2500);
			tapiOSAtCenterOfScrreen(1);
			waitTime(2500);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Video paused")) {
				verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
				String HashTag = getDriver().findElement(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen).getText();
				logger.info("HashTag on Screen present as : " + HashTag);
				extent.extentLoggerPass("", "HashTag on Screen present as : " + HashTag);
			} else {
				logger.info("HashTag on Screen is not present ");
				extent.extentLoggerFail("", "HashTag on Screen is not present ");
			}
			waitTime(2500);
			click(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Play button");
			waitTime(4500);

		}

	}

	// T042
	public void FeedScreen_HashTag_T042(String userType) throws Exception {
		if (!userType.equals("Guest")) {

			extent.HeaderChildNode(
					"T042_Logged in User - Check if user is able to view Hastag detail page by tapping on Hashtag in the description on played/paused video");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			waitTime(2500);

			verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			String HashTag = getDriver().findElement(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen).getText();
			logger.info("HashTag on Screen present as : " + HashTag);
			extent.extentLoggerPass("", "HashTag on Screen present as : " + HashTag);
			waitTime(2500);
			click(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			waitTime(2500);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag details page")) {
				logger.info("User able to navigate to Hashtag details page,Expected Behaviour");
				extent.extentLoggerPass("", "User able to navigate to Hashtag details page,Expected Behaviour");
			} else {
				logger.info("User  not able to navigate to Hashtag details page.");
				extent.extentLoggerFail("", "User not able to navigate to Hashtag details page.");

			}
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button");

		}
	}

	public void wifi(String method) throws Exception {
		if (method.equalsIgnoreCase("On")) {
			extent.extentLogger("", "Turning On wifi");
			Toolbar("Open");
			waitTime(5500);
			click(IOSHipiNeoHomePage.objiOSWifiOff, "Wifi On");
			waitTime(4500);
			Toolbar("close");

		} else {
			extent.extentLogger("", "Turning  wifi Off");
			Toolbar("Open");
			waitTime(5500);
			click(IOSHipiNeoHomePage.objiOSWifiIsOn, "Wifi off");
			waitTime(4500);
			Toolbar("close");

		}
	}

	// T043
	public void FeedScreen_HashTag_T043(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T043_Logged in User - Check if user is able to view 'Network Error' when he taps on Hashtag without internet");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			String HashTag = getDriver().findElement(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen).getText();
			logger.info("HashTag on Screen present as : " + HashTag);
			extent.extentLoggerPass("", "HashTag on Screen present as : " + HashTag);
			waitTime(2500);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "#hashtag");
			

			if (waitForElementDisplayediOS(IOSHipiNeoHashTagPage.objiOSNetworkErrorInHashTagPage,10,"Network error messege")) {
				waitTime(2500);
				verifyElementPresent(IOSHipiNeoHashTagPage.objiOSNetworkErrorSymbolInHashTagPage,
						"Network error Symbol");
				logger.info(
						"User able to get network error message when he taps on Hashtag without internet,Expected Behaviour");
				extent.extentLoggerPass("",
						"User  able to get network error message when he taps on Hashtag without internet,Expected Behaviour");
			} else {
				logger.info("User not able to get network error message when he taps on Hashtag without internet.");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Hashtag without internet.");

			}
			waitTime(3500);
			wifi("On");
			waitTime(2500);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button");

		}

	}

	/*
	 * public void FeedScreen_Sound_T045(String userType) throws Exception { if
	 * (!userType.equals("Guest")) { extent.
	 * HeaderChildNode("T045_Logged in User - Check if user is able to view sound on played/paused video"
	 * ); click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
	 * waitTime(2500); verifyElementPresent(IOSHipiNeoHomePage.
	 * objiOSMusicInFeedScreen,"Sound used for video"); String
	 * sound=getDriver().findElement(IOSHipiNeoHomePage.objiOSMusicInFeedScreen).
	 * getText();
	 * 
	 * extent.extentLogger("", "The name the sound used is : " + sound);
	 * logger.info("The name the sound used is : " + sound);
	 * 
	 * } }
	 */
	public void FeedScreen_Sound_T046(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T046_Logged in User - Check if user is able to view Sound detail page by tapping on Sound in the description on played/paused video");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			String sound = getDriver().findElement(IOSHipiNeoHomePage.objiOSMusicInFeedScreen).getText();

			extent.extentLogger("", "The name the sound used is : " + sound);
			logger.info("The name the sound used is : " + sound);
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			waitTime(2500);
			if (verifyElementPresent(IOSHipiSoundPage.iosUseThisSound, "Use this Sound button")) {
				logger.info(
						"user is able to view Sound detail page by tapping on Sound in the description on played/paused video");
				extent.extentLoggerPass("",
						"user is able to view Sound detail page by tapping on Sound in the description on played/paused video");
			} else {
				logger.info(
						"user is not able to view Sound detail page by tapping on Sound in the description on played/paused video");
				extent.extentLoggerFail("",
						"user is not able to view Sound detail page by tapping on Sound in the description on played/paused video");

			}
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiSoundPage.objiOSBackButtonFromSounddetailsPage,
					"Back Button in sound details page");
			waitTime(2500);

		}
	}

	public void FeedScreen_Sound_T047(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T047_Logged in user - Check if user is able is redirected to 'Feed' screen on tapping on \"<-\" in Sound Detail Screen");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			String sound = getDriver().findElement(IOSHipiNeoHomePage.objiOSMusicInFeedScreen).getText();

			extent.extentLogger("", "The name the sound used is : " + sound);
			logger.info("The name the sound used is : " + sound);
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			waitTime(2500);
			verifyElementPresent(IOSHipiSoundPage.iosUseThisSound, "Use this Sound button");
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiSoundPage.objiOSBackButtonFromSounddetailsPage,
					"Back Button in sound details page");
			waitTime(2500);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button In Feed Screen")) {
				logger.info("User is redirected to 'Feed' screen on tapping on app 'back' in Sound Detail Screen");
				extent.extentLoggerPass("",
						"User is redirected to 'Feed' screen on tapping on app 'back' in Sound Detail Screen");
			} else {
				logger.info("User is not  redirected to 'Feed' screen on tapping on app 'back' in Sound Detail Screen");
				extent.extentLoggerFail("",
						"User is not  redirected to 'Feed' screen on tapping on app 'back' in Sound Detail Screen");
			}

		}
	}

	public void FeedScreen_Sound_T048(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T048_Logged in User - Check if user is able to view 'Network Error ' when he taps on Sound without internet");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			String sound = getDriver().findElement(IOSHipiNeoHomePage.objiOSMusicInFeedScreen).getText();

			extent.extentLogger("", "The name the sound used is : " + sound);
			logger.info("The name the sound used is : " + sound);

			wifi("Off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			
			if (waitForElementDisplayediOS(IOSHipiNeoHashTagPage.objiOSNetworkErrorInHashTagPage,10,"Network error messege")) {
				waitTime(2500);
				verifyElementPresent(IOSHipiNeoHashTagPage.objiOSNetworkErrorSymbolInHashTagPage,
						"Network error Symbol");
				logger.info(
						"User able to get network error message when he taps on Hashtag without internet,Expected Behaviour");
				extent.extentLoggerPass("",
						"User  able to get network error message when he taps on Hashtag without internet,Expected Behaviour");
			} else {
				logger.info("User not able to get network error message when he taps on Hashtag without internet.");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Hashtag without internet.");

			}
			waitTime(2500);
			wifi("On");
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiSoundPage.objiOSBackButtonFromSounddetailsPage,
					"Back Button in sound details page");
			waitTime(2500);

		}
	}

	public void FeedScreen_Sound_T049(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T049_Logged in User - Check if user is able to Create a video with 'original sound'");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			String sound = getDriver().findElement(IOSHipiNeoHomePage.objiOSMusicInFeedScreen).getText();

			extent.extentLogger("", "The name the sound used is : " + sound);
			logger.info("The name the sound used is : " + sound);
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiSoundPage.iosUseThisSound, "Use this Sound button");
			waitTime(2500);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 50, "Next button");
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button");
			waitTime(2500);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 50,
					"Add description to your video");

			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "video upload", "Description");
			waitTime(2500);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiiosKeyboardDoneBtn, "Done button on Keyboard")) {
				click(IOSHipiNeoProfilePage.objiiosKeyboardDoneBtn, "Done button on Keyboard");
				waitTime(3500);
			} else {
				hideKeyboard();
				waitTime(2500);
			}

			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitTime(2500);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 50, "For You button");

		}
	}

	public void FeedScreen_Profile_T052(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T052_Logged in User - Check if user is able to navigate to user profile page by tapping on profile icon");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
			waitTime(2500);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOSeditprofileButtonFromProfileDetailsPage,
					"edit profile") && (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots Menu"))) {
				logger.info("User able to navigate to profile page");
				extent.extentLoggerPass("", "User able to navigate to profile page");

			} else {
				logger.info("User not able to navigate to profile page");
				extent.extentLoggerFail("", "User not able to navigate to profile page");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2500);

		}
	}

	public void FeedScreen_Profile_T053(String userType) throws Exception {
		if (!userType.equals("Guest")) {
			extent.HeaderChildNode("T053_Logged in User - Check the UI of User Profile Page");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots button for setting");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSFollowersLabelInProfileDetailsPage, "Followers Section");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSFollowingLabelInProfileDetailsPage, "Following Section");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSLikesLabelInProfileDetailsPage, "Like Section");
			waitTime(2500);

		}

	}

	// ===============================priority
	// po=========================================================
	// T059

	public void FeedScreen_ForYou_Save_Video_T059_T109(String userType) throws Exception {
		System.out.println();
		if (userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T059_Guest User - Check if user is able to perform 'Save Video' action by tapping on it");
			System.out.println("T059_Guest User - Check if user is able to perform 'Save Video' action by tapping on it");
		} else {
			extent.HeaderChildNode(
					"T109_Logged in User - Check if user is able to perform 'Save Video' action by tapping on it");
			System.out.println("T109_Logged in User - Check if user is able to perform 'Save Video' action by tapping on it");
		}
		click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		waitTime(2500);

		for (int i = 0; i <= 10; i++) {
			tapiOS_Middlepoint(1);
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSsave_video, "Save_video button");

			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSVideo_saved, 10, "Video Saved")) {
				logger.info("User able to save the video");
				extent.extentLoggerPass("", "User able to save the video");

				break;
			} else {
				waitTime(1000);
				tapiOSAtCenterOfScrreen(1);
				waitTime(1000);
				Swipe("UP", 1);
				waitTime(1000);
			}
		}

		// verifyElementExist(IOSHipiNeoHomePage.objiOSCreatordisabled,"The creator
		// disabled download of this video")

	}

	public void FeedScreen_ForYou_Share_Video_T080(String userType) throws Exception {
		if (userType.equals("Guest")) {
			extent.HeaderChildNode("T080_Guest User -  Check if user is able to see the 'Share' icon 'For You' screen");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShareBtn, "Share")) {
				logger.info("Share button is present in For you screen");
				extent.extentLoggerPass("", "Share button is present in For you screen");
			} else {
				logger.info("Share button is not present in For you screen");
				extent.extentLoggerFail("", "Share button is not present in For you screen");
			}

		}
	}

	public void FeedScreen_User_Profile_T088(String userType) throws Exception {
		if (userType.equals("Guest")) {
			extent.HeaderChildNode(
					"T088_Guest User - Check the login pop-up is displayed by tapping on Profile Tab on the app");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login pop up")) {
				logger.info("login pop-up is displayed by tapping on Profile Tab on the app");
				extent.extentLoggerPass("", "login pop-up is displayed by tapping on Profile Tab on the app");
			} else {
				logger.info("login pop-up is not displayed by tapping on Profile Tab on the app");
				extent.extentLoggerFail("", "login pop-up is not displayed by tapping on Profile Tab on the app");
			}
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close profile pop up Button");
		}
	}

	public void FeedScreen_ForYou_Not_Interested_T105(String userType) throws Exception {
		if (userType.equals("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T105_Logged in User - Check if user is able to perform 'Not Interested' action by tapping on it");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSNotinterestedPopUp, "Not Interested");

			if (waitForElementDisplayed(IOSHipiNeoHomePage.objiOSHipiNoLongerAppear, 20)) {
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("", "Toast message is displayed");
			} else {
				logger.info("Toast message is not displayed");
				extent.extentLoggerFail("", "Toast message is not displayed");
			}

		}
	}

	public void FeedScreen_Shoppable_video_T167(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T167_Guest User -Verify Shoppable video For You section");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info("shoppale video can appear on the For You section for " + userType);

				extent.extentLoggerPass("", "shoppale video can appear on the For You section for " + userType);
			} else {
				logger.info("shoppale video not appeared on the For You section for " + userType);

				extent.extentLoggerFail("", "shoppale video not appeared on the For You section for " + userType);
			}
		}

	}

	public void FeedScreen_Shoppable_video_T163(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T163_Guest User -Verify Shoppable video For You section");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info("shoppale video can appear on the For You section for " + userType);

				extent.extentLoggerPass("", "shoppale video can appear on the For You section for " + userType);
			} else {
				logger.info("shoppale video not appeared on the For You section for " + userType);

				extent.extentLoggerFail("", "shoppale video not appeared on the For You section for " + userType);
			}
		}

	}

	public void FeedScreen_Shoppable_video_T162(String userType) throws Exception {

		extent.HeaderChildNode("T162_Verify that video is shopable");

		click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		waitTime(1000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);

		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
			logger.info("shoppale video can appear on the For You section for " + userType);

			extent.extentLoggerPass("", "shoppale video can appear on the For You section for " + userType);
		} else {
			logger.info("shoppale video not appeared on the For You section for " + userType);

			extent.extentLoggerFail("", "shoppale video not appeared on the For You section for " + userType);
		}

	}

	public void FeedScreen_Shoppable_video_Following_T168(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T168_Logged In User - Verify Shoppable video Following section");
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Section");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info("shoppale video can appears on the For You section for " + userType);

				extent.extentLoggerPass("", "shoppale video can appears on the For You section for " + userType);
			} else {
				logger.info("shoppale video not appeared on the For You section for " + userType);

				extent.extentLoggerFail("", "shoppale video not appeared on the For You section for " + userType);
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Section");
		}
	}

	public void FeedScreen_Shoppable_video_Following_T164(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T164_Guest User -Verify To see videos on following section guest user has to login");
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Section");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosFollowBtnOnUserCardsInFoolowingTab,
					"Follow button on cards in following Section")) {
				logger.info("User able to see Follow button on cards in following Section ,Expected behavior");
				extent.extentLoggerPass("",
						"User able to see Follow button on cards in following Section ,Expected behavior");
			} else {
				logger.info("User not able to see Follow button on cards in following Section");
				extent.extentLoggerFail("", "User not able to see Follow button on cards in following Section");
			}

			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Section");
		}
	}

	public void FeedScreen_Shoppable_video_T165_T169_T171_T172(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T165_T171_172_Guest User -Verify that shopable videos are present on the feed");
		} else {
			extent.HeaderChildNode("T169_Logged In User -Verify that shopable videos are present on the feed");
		}

		click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		waitTime(1000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);

			verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
			logger.info("The shopable video is present  on the feed along with SHOP button and its functionality");

			extent.extentLoggerPass("",
					"The shopable video is present  on the feed along with SHOP button and its functionality");
		} else {
			logger.info("The shopable video is not present  on the feed along with SHOP button and its functionality");

			extent.extentLoggerFail("",
					"The shopable video is not present  on the feed along with SHOP button and its functionality");
		}

		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		waitTime(3000);

	}

	public void FeedScreen_Shoppable_video_T165(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T165_Guest User -Verify that shopable videos are present on the feed");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info("The shopable video is present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerPass("",
						"The shopable video is present  on the feed along with SHOP button and its functionality");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	public void FeedScreen_Shoppable_video_T169(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T169_Guest User -Verify that shopable videos are present on the feed");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info("The shopable video is present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerPass("",
						"The shopable video is present  on the feed along with SHOP button and its functionality");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	public void FeedScreen_Shoppable_video_T171(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T171_Guest User -Verify that shopable videos are present on the feed");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info("The shopable video is present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerPass("",
						"The shopable video is present  on the feed along with SHOP button and its functionality");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	public void FeedScreen_Shoppable_video_T172(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T172_Guest User -Verify that shopable videos are present on the feed");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info("The shopable video is present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerPass("",
						"The shopable video is present  on the feed along with SHOP button and its functionality");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	public void FeedScreen_Shoppable_video_T166(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T166_Logged In User - Verify shoppale video can appear on the For You and following section for Logged In user");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info("shoppale video can appear on the For You section for " + userType);

				extent.extentLoggerPass("", "shoppale video can appear on the For You section for " + userType);
			} else {
				logger.info("shoppale video not appeared on the For You section for " + userType);

				extent.extentLoggerFail("", "shoppale video not appeared on the For You section for " + userType);
			}

			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Section");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info("shoppale video can appear on the Following section for " + userType);

				extent.extentLoggerPass("", "shoppale video can appear on the Following section for " + userType);
			} else {
				logger.info("shoppale video not appeared on the Following section for " + userType);

				extent.extentLoggerFail("", "shoppale video not appeared on the Following section for " + userType);
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void FeedScreen_Shopbutton_video_T173(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T173_Guest User-Verify for shop button should display only while user watching shoppable videos.");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);

			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info(userType
						+ " User is able to click on shop button and Shop details bottom up sheet is opened once shop button is clicked.");

				extent.extentLoggerPass("", userType
						+ " User is able to click on shop button and Shop details bottom up sheet is opened once shop button is clicked.");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
		}
	}

	public void FeedScreen_Shopbutton_video_T174(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T174_Guest User -Verify for shop button should NOT display when user is watching Non-shoppable videos.");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			for (int i = 0; i <= 50; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button")) {
					waitTime(2000);
					PartialSwipe("UP", 1);
				} else {
					logger.info(userType
							+ " User is able to see shop button NOT displayed when user is watching Non-shoppable videos.");

					extent.extentLoggerPass("", userType
							+ " User is able to see shop button NOT displayed when user is watching Non-shoppable videos.");
					break;
				}
			}

		}

	}

	public void FeedScreen_Shopbutton_video_T177(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T177_Guest User -Verify for SHOP button click and redirection");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info(userType
						+ " User is able to click on shop button and Shop details bottom up sheet is opened once shop button is clicked.");

				extent.extentLoggerPass("", userType
						+ " User is able to click on shop button and Shop details bottom up sheet is opened once shop button is clicked.");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}

	}

	public void FeedScreen_Shopbutton_video_T175_T176(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T175_Guest User-Verify user should be able to see 'Shop' button when they coming from any other tabs (Discover/Me) and watching shoppable video.");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info(
						"user able to see 'Shop' button when they coming from any other tabs (Discover/Me) and watch shoppable video");

				extent.extentLoggerPass("",
						"user able to see 'Shop' button when they coming from any other tabs (Discover/Me) and watch shoppable video");
			} else {
				logger.info("User not able to see shop button when they coming from other tabs");

				extent.extentLoggerFail("", "User not able to see shop button when they coming from other tabs");
			}

			waitTime(3000);
			extent.HeaderChildNode(
					"T176_Guest User-Verify Shop button should not Visible when user in other tab like Discover/Creator/Me");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover");
			waitTime(3000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info("Shop button is not Visible when user in other tab like Discover/Creator/Me");

				extent.extentLoggerPass("",
						"Shop button is not Visible when user in other tab like Discover/Creator/Me");
			} else {
				logger.info("Shop button is visible when user in other tab like Discover/Creator/Me");

				extent.extentLoggerFail("", "Shop button is visible when user in other tab like Discover/Creator/Me");
			}

			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

		}

	}

	public void FeedScreen_SaveLook_T180(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T180_Guest User- Verify for SAVE LOOK button on the shopable video");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			deleteProductsInSavedMoments();
			waitTime(2000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHeartBtn, "Heart button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn, "Heart button")) {
				waitTime(2000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
				waitTime(2000);
				logger.info(
						"Discover The Look button button is displayed for shopable video. The Discover The Look button  with heart icon is there on screen");

				extent.extentLoggerPass("",
						"Discover The Look button is displayed for shopable video. The Discover The Look button with heart icon is there on screen");
			} else {
				logger.info("Discover The Look button and heart button is not present in Feed Screen");
				extent.extentLoggerFail("", "Discover The Look button and heart button is not present in Feed Screen");
			}

		}
	}

	public void FeedScreen_Shop_T251(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T251_Logged In user-Validate the shop  details page");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop Page")) {
				verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In This Video Section");
				String TotalProductsInthisVideoTab = getText(
						IOSHiPiNeoShopPage.objiosTotalNosBesideInThisVideoTabShopPage);
				int products = Integer.parseInt(TotalProductsInthisVideoTab);

				logger.info("Total products present in In This Video Tab  are: " + products);
				extent.extentLogger("", "Total products present in In This Video Tab are: " + products);
				waitTime(2000);
				verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "Saved Moments");
				String TotalProducts = getText(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage);
				int products1 = Integer.parseInt(TotalProducts);

				logger.info("Total products present in saved moments tab are: " + products1);
				extent.extentLogger("", "Total products present in saved moments tab are: " + products1);

				waitTime(2000);
				CloseTheShopBar();
				waitTime(2000);

			}

		}

	}

	public void FeedScreen_Shop_T257(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T257_Logged In User- Verify two sections of Shop Page are: IN THIS VIDEO and SAVED MOMENTS");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop Page")) {
				verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In This Video Section");
				String TotalProductsInthisVideoTab = getText(
						IOSHiPiNeoShopPage.objiosTotalNosBesideInThisVideoTabShopPage);
				int products = Integer.parseInt(TotalProductsInthisVideoTab);

				logger.info("Total products present in In This Video Tab  are: " + products);
				extent.extentLogger("", "Total products present in In This Video Tab are: " + products);
				waitTime(3000);
				verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "Saved Moments");
				String TotalProducts = getText(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage);
				int products1 = Integer.parseInt(TotalProducts);

				logger.info("Total products present in saved moments tab are: " + products1);
				extent.extentLogger("", "Total products present in saved moments tab are: " + products1);
				// Shop Page contains two sectios IN THIS VIDEO and SAVED MOMENTS with list of
				// products
				logger.info("Shop Page contains two sectios IN THIS VIDEO and SAVED MOMENTS with list of products");
				extent.extentLogger("",
						"Shop Page contains two sectios IN THIS VIDEO and SAVED MOMENTS with list of products");

				waitTime(2000);
				CloseTheShopBar();
				waitTime(2000);

			}

		}

	}

	public void FeedScreen_T392(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T392_Logged in User - Check that shoppable video under discover page video tab");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Buttonn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "SearchField");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "typed Himanshi khurana");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Videos"), "Videos");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1), "Shoppable Icon")) {
				logger.info("Shoppable videos  displayes over users search result page");
				extent.extentLoggerPass("", "Shoppable videos  displayes over users search result page");
			} else {
				logger.info("Shoppable videos is not displayes over users search result page");
				extent.extentLoggerFail("", "Shoppable videos is not displayes over users search result page");
			}
			BackFromTrendingRailShoppableVideo();

		}
	}

	public void FeedScreen_Shoppable_video_Following_T395(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
            System.out.println();
			extent.HeaderChildNode(
					"T395_Guest User -Verify To see videos on following section guest user has to login");
			System.out.println("T395_Guest User -Verify To see videos on following section guest user has to login");
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Section");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHipiLoginBtnInFollwingSection, 20, "Follow an account to see their latest videos here.");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiLoginBtnInFollwingSection,
					"Follow an account to see their latest videos here.")) {

				click(IOSHipiNeoHomePage.objiOSHipiFollowBtnInFollwingSection, "Follow btn on cards");
				waitTime(3000);
			}

			if (verifyElementPresent(IOSHipiNeoHomePage.objiosCloseIconPoup, "Login pop up")) {
				click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close btn");
				waitTime(3000);
				logger.info("To see videos on following section guest user has to login,Expected behavior");
				extent.extentLoggerPass("",
						"To see videos on following section guest user has to login,Expected behavior");
			} else {
				logger.info(" guest user not able to see login in following section");
				extent.extentLoggerFail("", " guest user not able to see login in following section");
			}

			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Section");
		}
	}

	public void FeedScreen_Following_T401(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T401_Logged in User - Check if user is able to refresh the list on contents in 'Following' tab of HiPi");
			follow();
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following button");
			waitTime(2000);
			// ScrollToElementiOS_Down(IOSHipiNeoHomePage.objiiosRefresh,"Refresh list");
			for (int i = 0; i <= 50; i++) {
				PartialSwipeiOS("DOWN", 1);
				if (verifyElementExist(IOSHipiNeoHomePage.objiiosRefresh, "Refresh list") == true) {
					logger.info("User is able to refresh the list on contents in 'Following' tab of HiPi Feed");
					extent.extentLoggerPass("",
							"User is able to refresh the list on contents in 'Following' tab of HiPi Feed");
					break;
				}

			}

		}
	}

	public void FeedScreen_Following_T403(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T403_Logged in User - Check if user is able to verify the video is playing in 'Following' tab ");

			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following button");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "Play button")) {
				logger.info(
						"User able to see the video is played by default in 'Following' tab in 'Feed' section,Expected Behaviour");
				extent.extentLoggerPass("",
						"User able to see the video is played by default in 'Following' tab in 'Feed' section,Expected Behaviour");

			} else {
				logger.info(
						"User is not able to see the video is played by default in 'Following' tab in 'Feed' section");
				extent.extentLoggerFail("",
						"User is not able to see the video is played by default in 'Following' tab in 'Feed' section");

			}

			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void Discover_T1308(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1308_Guest  User - Verify for Search field click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow")) {
				logger.info(
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
				extentLoggerPass("",
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
			} else {
				logger.info(
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
				extentLoggerFail("",
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
			}
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button")) {
				logger.info("User able to tap on search field");
				extentLoggerPass("", "User able to tap on search field");
			} else {
				logger.info("User not able to tap on search field");
				extentLoggerFail("", "User not able to tap on search field");
			}
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	public void Discover_T1318(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1318_Logged In User - Verify for Search field click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow")) {
				logger.info(
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
				extentLoggerPass("",
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
			} else {
				logger.info(
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
				extentLoggerFail("",
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
			}
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button")) {
				logger.info("User able to tap on search field");
				extentLoggerPass("", "User able to tap on search field");
			} else {
				logger.info("User not able to tap on search field");
				extentLoggerFail("", "User not able to tap on search field");
			}
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	public void Discover_T1330(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1330_Guest User- Verify if user able to click on the other tabs from the displayed results");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("USERS"), "Users");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("VIDEOS"), "Users");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("SOUNDS"), "Sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	public void Discover_T1337(String userType) throws Exception {// p2
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1337_Logged_In_User- Verify if user able to click on the other tabs from the displayed results");
			System.out.println();
			System.out.println(
					"T1337_Logged_In_User- Verify if user able to click on the other tabs from the displayed results");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Text");
			
			waitTime(3000);
//			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
//			waitTime(3000);
			keyboardaction("Enter");
			waitTime(5000);
			if(verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button")) {
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
				waitTime(3000);
			}
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("USERS"), "Users");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("USERS"), "Users");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("VIDEOS"), "VIDEOS");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("VIDEOS"), "VIDEOS");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("SOUNDS"), "Sounds");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("SOUNDS"), "Sounds");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	// public void Discover_T1583(String userType) throws Exception {
	// if (userType.equalsIgnoreCase("Guest")) {
	// extent.HeaderChildNode(
	// "Guest User- Verify the Save Look CTA and it click & Navigation on shoppable
	// video");
	// click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
	// waitTime(2000);
	// click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
	// waitTime(2000);
	// ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosTrendingHipiRail,
	// "Trending on Hipi");
	// waitTime(2000);
	// click(IOSHiPiNeoDiscoverPage.objiosTrendingHipiRail, "Trending on Hipi
	// Rail");
	// waitTime(3000);
	// verifyElementExist(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1),
	// "Shoppable video");
	// waitTime(2000);
	// click(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1), "Shoppable video");
	// waitTime(2000);
	// String username =
	// getDriver().findElement(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen)
	// .getText();
	// String[] userName = username.split("@");
	// String UN = userName[1];
	// System.out.println(UN);
	// extent.extentLogger("", "Username :" +
	// getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen));
	//
	// waitTime(2000);
	// click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
	// waitTime(3000);
	// verifyElementExist(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved red
	// Heart button");
	// waitTime(2000);
	// click(IOSHipiNeoHomePage.objiosBackArrowButtonFromFeed, "Back Arrow button");
	// waitTime(2000);
	// click(IOSHipiNeoHashTagPage.objiOSbackButtonFromHashtagPageInHashTagPage,
	// "Back Arrow from hash tag page");
	// waitTime(2000);
	// click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home");
	// waitTime(2000);
	// ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "shop
	// button");
	// waitTime(2000);
	// click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "shop button");
	// waitTime(2000);
	// click(IOSHipiNeoHashTagPage.objiOSSavedMomentsInHashTagPage, "Saved
	// Moments");
	// waitTime(2000);
	//
	// }
	//
	// }

	public void Discover_T1596_T1600(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			System.out.println("T1596_Guest User- Verify the Saved CTA and it click & Navigation on shoppable video");
			
			extent.HeaderChildNode(
					"T1596_Guest User- Verify the Saved CTA and it click & Navigation on shoppable video");
		} else {
			extent.HeaderChildNode(
					"T1600_Logged In User- Verify the Saved CTA and it click & Navigation on shoppable video");
			System.out.println();
			System.out.println("T1600_Logged In User- Verify the Saved CTA and it click & Navigation on shoppable video");
			
		}
		deleteProductsInSavedMoments();
		waitTime(2000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(4000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look button");
		waitTime(2000);
		//verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
				"Product Image after clicking on Saved")) {
			logger.info("Upon tapping saved CTA the product images of playing video displayed");
			extent.extentLoggerPass("", "Upon tapping saved CTA the product images of playing video displayed");
		} else {
			logger.info("Upon tapping saved CTA the product images of playing video is not displayed");
			extent.extentLoggerFail("", "Upon tapping saved CTA the product images of playing video is not displayed");
		}
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

	}

	public void Discover_T1597_T1601(String userType) throws Exception {
		// 1602
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1597_Guest User- Verify the product thumnail image and it click & Navigation on the shoppable video");
		} else {
			extent.HeaderChildNode(
					"T1601_Logged In User- Verify the product thumnail image and it click & Navigation on the shoppable video");
		}
		deleteProductsInSavedMoments();
		waitTime(3500);
		navigateToTrendingRailShoppableVideo(1);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look Button");
		waitTime(2000);

		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images")) {

			List<WebElement> totalimg = getDriver()
					.findElements(IOSHipiNeoHomePage.objiOSHipiTotalShoppableImagesfeedSection);
			int list = totalimg.size();
			logger.info("Total Images found : " + list);
			extent.extentLogger("", "Total Images found : " + list);
			extent.extentLoggerPass("",
					"Every shoppable videos is displaying product images of playing video at bottom side");
		} else {
			logger.info("Every shoppable videos is not displaying product images of playing video at bottom side");
			extent.extentLoggerFail("",
					"Every shoppable videos is not displaying product images of playing video at bottom side");
		}

		click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "First product");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop Page")) {
			verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In This Video Section");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "Saved Moments");
			String TotalProducts = getText(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage);
			int products = Integer.parseInt(TotalProducts);

			logger.info("Total products present in saved moments tab are " + products);
			extent.extentLogger("", "Total products present in saved moments tab are " + products);

			waitTime(2000);
			CloseTheShopBar();
			waitTime(2000);

		}
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

	}

	public void navigateToTrendingRailShoppableVideo(int index) throws Exception {
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(3500);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");

		waitTime(2000);
		Swipe("Down", 1);
		waitTime(2000);
		ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.objiosTrendingHipiRail, "Trending on Hipi");
		// PartialSwipe_ios("UP", 1);
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosTrendingHipiRail, "Trending on Hipi Rail");
		waitTime(3000);
		ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(index), "Shoppable icon");
		waitTime(2000);
		verifyElementExist(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(index), "Shoppable video");
		waitTime(2000);
		PartialCommentsSwipe("Up", 1);
		waitTime(1000);
		click(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(index), "Shoppable video");
		waitTime(2000);
//		if (ios) {
//			
//		}
	}

	public void BackFromTrendingRailShoppableVideo() throws Exception {

		if (verifyElementExist(IOSHipiNeoHomePage.objiosBackArrowButtonFromFeed, "Back Arrow button")) {
			click(IOSHipiNeoHomePage.objiosBackArrowButtonFromFeed, "Back Arrow button");
			waitTime(2000);
		}

		if (verifyElementExist(IOSHipiNeoHashTagPage.objiOSbackButtonFromHashtagPageInHashTagPage,
				"Back Arrow from hash tag page")) {
			click(IOSHipiNeoHashTagPage.objiOSbackButtonFromHashtagPageInHashTagPage, "Back Arrow from hash tag page");
			waitTime(2000);
		}
		for (int i = 0; i <= 5; i++) {

			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back button")) {
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back button");
				waitTime(2000);
			} else {
				break;
			}
		}
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	public void CloseTheShopBar() throws Exception {
		WebElement shopPullbar = getDriver().findElement(IOSHiPiNeoShopPage.objiosPullBarInShopPage);

		Dimension size = getDriver().manage().window().getSize();
		int startx = size.width / 2;
		int starty = (int) (size.height * 1);
		SwipeAnElementiOS(shopPullbar, startx, starty);
		waitTime(4000);
		if(verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop pull bar")) {
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar,"Discover");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "shop");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		waitTime(2000);
		}
		
	}

	public void deleteProductsInSavedMoments() throws Exception {
		extent.extentLogger("", "Deleting Products in Saved Moments");
		logger.info("Deleting Products in Saved Moments");
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		waitTime(2000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled_Shop");
		waitTime(4000);

		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page pop up")) {
			waitForElementDisplayediOS(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, 20, "Saved Moments");
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			// verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage,
			// "Saved Moments");
			waitTime(2000);
			String totalProducts = getDriver()
					.findElement(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage).getText();
			logger.info("the total number of products in Saved Moments are : " + totalProducts);
			
			int count = 0;
			for (int i=1;i<=Integer.parseInt(totalProducts);i++) {

				if (verifyElementDisplayed(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage)) {

					waitTime(2000);

					click(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
							"Deleted Product no :" + count++);
					waitTime(2000);
				} else {
					logger.info("No products found in Saved Moments");
					CloseTheShopBar();
					waitTime(2000);
					break;
				}

			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);

		}
	}

	public void Discover_T1598_1602(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1602_Logged In User- Verify the shop page navigation from shoppable video");
		} else {
			extent.HeaderChildNode("T1598_Guest User- Verify the shop page navigation from shoppable video");
		}

		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
				"Product images at bottom")) {
			waitTime(2000);
			deleteproductsInTrendingSaved();
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product Image");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop page");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1),
					"Product is saved in Saved Moments tab")) {
				logger.info("upon tapping on product image from video bottom side it navigates to shop page ");
				extent.extentLoggerPass("",
						"upon tapping on product image from video bottom side it navigates to shop page ");
			} else {
				logger.info("upon tapping on product image from video bottom side it does not navigate to shop page ");
				extent.extentLoggerFail("",
						"upon tapping on product image from video bottom side it does not navigate to shop page ");
			}

		}
		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	public void deleteproductsInTrendingSaved() throws Exception {
		if (verifyElementExist(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, "Saved")) {
			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page pop up")) {
				waitTime(2000);
				verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
				waitTime(3000);
				String totalProducts = getDriver()
						.findElement(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage).getText();
				logger.info("the total number of products in Saved Moments are : " + totalProducts);
				int count = 0;
				for (;;) {

					if (verifyElementDisplayed(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage)) {

						waitTime(2000);

						click(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
								"Deleted Product no :" + count++);
						waitTime(2000);
					} else {
						logger.info("No products found in Saved Moments");
						break;
					}

				}

				CloseTheShopBar();
				waitTime(5000);

			}

		} else {
			logger.info("Saved icon not present");
			extent.extentLogger("", "Saved icon not present");
		}
	}

	public void Discover_T1595_T1599(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			System.out.println("T1599_Logged In User- Verify the Save Look CTA and it click & Navigation on shoppable video");
			
			extent.HeaderChildNode(
					"T1599_Logged In User- Verify the Save Look CTA and it click & Navigation on shoppable video");
		} else {
			System.out.println();
			System.out.println("T1595_Guest User- Verify the Save Look CTA and it click & Navigation on shoppable video");
			
			extent.HeaderChildNode(
					"T1595_Guest User- Verify the Save Look CTA and it click & Navigation on shoppable video");
		}

		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(0),
				"Product images at bottom")) {
			waitTime(2000);
			deleteproductsInTrendingSaved();
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product Image");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop page");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1),
					"Product is saved in Saved Moments tab")) {
				logger.info("upon tapping on product image from video bottom side it navigates to shop page ");
				extent.extentLoggerPass("",
						"upon tapping on product image from video bottom side it navigates to shop page ");
			} else {
				logger.info("upon tapping on product image from video bottom side it does not navigate to shop page ");
				extent.extentLoggerFail("",
						"upon tapping on product image from video bottom side it does not navigate to shop page ");
			}

		}
		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	public void Discover_T1587_T1600_T1604_T1583(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1600_Guest User- Verify the Save Look CTA and it click & Navigation on shoppable video");
		} else {
			extent.HeaderChildNode(
					"T1587_Logged In User- Verify the Save Look CTA and it click & Navigation on shoppable video");
		}
		deleteProductsInSavedMoments();

		waitTime(2000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1), "Product in Saved Moments tab")) {
			logger.info("upon tapping Save Look the product gets saved to shop page of playing video ");
			extent.extentLoggerPass("", "upon tapping Save Look the product gets saved to shop page of playing video ");
		} else {
			logger.info("upon tapping Save Look the product is not saved to shop page of playing video ");
			extent.extentLoggerFail("",
					"upon tapping Save Look the product is not saved to shop page of playing video ");
		}

		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	public void Login_Continue_VerifyFBsiteInHiPi_T838(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T838_Check if user navigate to Facebook site in app browser of Hipi app when doesn’t have Facebook app in his mobile ");
			System.out.println("T838_Check if user navigate to Facebook site in app browser of Hipi app when doesn’t have Facebook app in his mobile ");
			
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosContnueWithFB, "Continue with Facebook CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosfacebookAllowPopUp, "FB Pop up")) {
				click(IOSHipiNeoProfilePage.objiosFBallowPopUpContinueCTA, "Continue CTA on FB Pop up");
				waitTime(4000);
			}

			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosfacebookSiteInHipi, "FaceBook in HiPi Browser")) {
				logger.info("User able to navigate to Facebook site in app browser of Hipi app");
				extent.extentLoggerPass("", "User able to navigate to Facebook site in app browser of Hipi app");
			} else {
				logger.info("User not able to navigate to Facebook site in app browser of Hipi app");
				extent.extentLoggerFail("", "User not able to navigate to Facebook site in app browser of Hipi app");
			}

			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosfacebookSiteCancelCTAInHipi, "Cancel button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close button");
			waitTime(2000);

		}
	}

	public void Login_Continue_FBLogin_T840(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T840_Check if user is able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
			System.out.println("T840_Check if user is able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
			
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosContnueWithFB, "Continue with Facebook CTA");
			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosfacebookAllowPopUp, "FB Pop up")) {
				click(IOSHipiNeoProfilePage.objiosFBallowPopUpContinueCTA, "Continue CTA on FB Pop up");
				waitTime(4000);
				if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiiosOpenThisPageFBPopUp, 30,
						"Open this page pop up FB")) {
					click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
					waitTime(4000);

				}
				waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosfacebookSiteInHipiContinueCTA, 50,
						"Facebook site continue CTA");

				click(IOSHipiNeoProfilePage.objiosfacebookSiteInHipiContinueCTA, "Facebook site continue CTA");

			}
			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosLoggedinSuccessfullyCTA, 50,
					"Logged in Successfully toast message")) {
				logger.info(
						"User able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
				extent.extentLoggerPass("",
						"User able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
				extent.extentLoggerPass("", "User able to redirect to HiPi once login with Facebook");

			} else {
				logger.info(
						"User not able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
				extent.extentLoggerFail("",
						"User not able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
				extent.extentLoggerFail("", "User not able to redirect to HiPi once login with Facebook");
			}
			waitTime(4000);
			Logout();

			// objiosfacebookSiteInHipiContinueCTA
		}
	}

	public void Discover_T1306(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1306_Guest User: Verify if user able to see search field in the top of the discover page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			Dimension size = getDriver().manage().window().getSize();
			System.out.println(size);
			int w = (int) (size.height * 0.2);
			logger.info("Screen 20% height " + w);
			extentLogger("", "Screen 20% height " + w);
			WebElement searchbox = getDriver().findElement(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			int p = searchbox.getLocation().getY();
			logger.info("Y location of search box " + p);
			extentLogger("", "Y location of search box" + p);
			String expectedtext = "Search";
			String actualresult = searchbox.getText();
			System.out.println(actualresult);
			if ((p < w) && (expectedtext.equalsIgnoreCase(actualresult))) {
				logger.info("Search field is displayed on the top of the page.");
				extent.extentLoggerPass("", "Search field is displayed on the top of the page.");
			} else {
				logger.info("Search field is not display on the top of the page.");
				extent.extentLoggerPass("", "Search field is not display on the top of the page.");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	public void Discover_T1316(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1316_Logged In User: Verify if user able to see search field in the top of the discover page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			Dimension size = getDriver().manage().window().getSize();
			System.out.println(size);
			int w = (int) (size.height * 0.2);
			logger.info("Screen 20% height " + w);
			extentLogger("", "Screen 20% height " + w);
			WebElement searchbox = getDriver().findElement(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			int p = searchbox.getLocation().getY();
			logger.info("Y location of search box " + p);
			extentLogger("", "Y location of search box" + p);
			String expectedtext = "Search";
			String actualresult = searchbox.getText();
			System.out.println(actualresult);
			if ((p < w) && (expectedtext.equalsIgnoreCase(actualresult))) {
				logger.info("Search field is displayed on the top of the page.");
				extent.extentLoggerPass("", "Search field is displayed on the top of the page.");
			} else {
				logger.info("Search field is not display on the top of the page.");
				extent.extentLoggerPass("", "Search field is not display on the top of the page.");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	public void Discover_T1309_T1310(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1309_T1310_Logged In User: Verify for discover option click");

			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(4000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage,
					"Search Icon of discover page")) {
				logger.info("Logged User able to tap on discover option and on tap it is navigating to Discover page");
				extentLoggerPass("",
						"Logged User able to tap on discover option and on tap it is navigating to Discover page");
			} else {
				logger.info(
						"Logged User not able to tap on discover option and on tap it is not navigating to Discover page");
				extentLoggerFail("",
						"Logged not User able to tap on discover option and on tap it is not navigating to Discover page");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	// ====================================================================================Kiran========================================================================

	// k===============================================Profile=P0==================================================

	public void Profile1_T999(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T999-Check whether login /signup popup displays when user taps on profile tab");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiiosLoginPopUp, "PopUp");
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "close button");
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	// k===============================================Profile=P0==================================================

	public void Profile_T1002(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1002_Logged in user - Check if  tapping 'back' button user is redirected back to Profile Screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEditProfileInEditePage, " Edit Page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, " Profile Page");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}

	}

	// k===============================================Profile=P0==================================================

	public void Profile_T1591_T1608(String userType) throws Exception {

		extent.HeaderChildNode(
				"T1591_Guest User- Verify the Save Look CTA and it click & Navigation on shoppable video");

		deleteProductsInSavedMoments();
		waitTime(2000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1), "Product in Saved Moments tab")) {
			logger.info("upon tapping Save Look the product gets saved to shop page of playing video ");
			extent.extentLoggerPass("", "upon tapping Save Look the product gets saved to shop page of playing video ");
		} else {
			logger.info("upon tapping Save Look the product is not saved to shop page of playing video ");
			extent.extentLoggerFail("",
					"upon tapping Save Look the product is not saved to shop page of playing video ");
		}

		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	// k===============================================Profile=P0==================================================

	public void Profile_Shoppable_T1593_T1610(String userType) throws Exception {

		extent.HeaderChildNode(
				"T1593_ Verify the product thumnail image and it click & Navigation on the shoppable video");

		deleteProductsInSavedMoments();
		waitTime(3500);
		navigateToTrendingRailShoppableVideo(1);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images");
		waitTime(2000);

		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images")) {

			List<WebElement> totalimg = getDriver()
					.findElements(IOSHipiNeoHomePage.objiOSHipiTotalShoppableImagesfeedSection);
			int list = totalimg.size();
			logger.info("Total Images found : " + list);
			extent.extentLogger("", "Total Images found : " + list);
			extent.extentLoggerPass("",
					"Every shoppable videos is displaying product images of playing video at bottom side");
		} else {
			logger.info("Every shoppable videos is not displaying product images of playing video at bottom side");
			extent.extentLoggerFail("",
					"Every shoppable videos is not displaying product images of playing video at bottom side");
		}
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

	}

	// k===============================================Profile=P0==================================================

	public void Profile_Shoppable_T1594_T1611(String userType) throws Exception {

		extent.HeaderChildNode("T1594- Verify the shop page navigation from shoppable video");

		deleteProductsInSavedMoments();
		waitTime(3000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
				"Product images at bottom")) {
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product Image");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop page");

			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1), "Product in Saved Moments tab")) {
				logger.info("upon tapping Save Look the product gets saved to shop page ");
				extent.extentLoggerPass("",
						"upon tapping Save Look the product gets saved to shop page of playing video ");
			} else {
				logger.info("upon tapping Save Look the product is not saved to shop page of playing video ");
				extent.extentLoggerFail("",
						"upon tapping Save Look the product is not saved to shop page of playing video ");
			}

		}
		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	// k===============================================Profile=P0==================================================

	public void Profile_Shoppable_Video_T1592_T1609(String userType) throws Exception {

		extent.HeaderChildNode("T1592_Verify the Saved CTA and it click & Navigation on shoppable video");

		deleteProductsInSavedMoments();
		waitTime(2000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(4000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
				"Product Image after clicking on Saved")) {
			logger.info("Upon tapping saved CTA the product images of playing video displayed");
			extent.extentLoggerPass("", "Upon tapping saved CTA the product images of playing video displayed");
		} else {
			logger.info("Upon tapping saved CTA the product images of playing video is not displayed");
			extent.extentLoggerFail("", "Upon tapping saved CTA the product images of playing video is not displayed");
		}
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

	}

	// k
	// 06/12/21===============================================Profile=P0==================================================

	public void Profile_T1048(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1048_Logged in user - Check if on tapping 'Edit Profile' user is directed to Edit Profile Screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosChangePhotoInEditPage, "ChangePhoto")) {
				logger.info("Edit Profile Screen is displayed ");
				extent.extentLoggerPass("", "Edit Profile Screen is displayed ");
			} else {
				logger.info("Edit Profile Screen is not displayed ");
				extent.extentLoggerFail("", "Edit Profile Screen is not displayed ");

			}
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);

		}
	}

	// 06/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1178(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1178_Logged in user - Check user is able to see invite friends icon ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPersonAddInEditPage, "Person Add icon");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosInviteFriendsInEditPage, "Invite Friends");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 06/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1177(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1177_Logged in user - Check user is able to see Bio on profile screen ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBioDescriptionInEditscreen, "Bio");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 07/12/21
	// k===============================================Profile=P0==================================================
	public void Profile_T1049(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1049_Logged in user- Check layout of 'Edit Profile Screen'");
			createBioDiscription();
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEditProfileInEditePage, "Edit Profile Title");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.nameUsernameDescription("Name"), "Name");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.nameUsernameDescription("Username"), "User Name");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBioDescriptionInEditscreen, "Bio");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 07/12/21
	// k===============================================Profile=P0==================================================

	public void createBioDiscription() throws Exception {
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.usernameBioArrowMark("Bio"), "Bio");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "Close Button")) {
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "close Button");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "aaaaaa g", "Text");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);

		} else {
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "aaaaaa g", "Text");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);

		}

	}

	public void Profile_T1054(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1054_Logged in user - Check if user is able to update name");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.nameArrowMark("Name"), "Name");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "Close Button")) {
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "close Button");
				waitTime(3000);
				type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "abcdef g", "Text");
				waitTime(3000);
				String Expectedresult = getText(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen);
				click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
				waitTime(3000);
				String Actualresult = getText(IOSHipiNeoProfilePage.nameUsernameDescription("Name"));
				if (Actualresult.equalsIgnoreCase(Expectedresult)) {
					logger.info("User able to update name");
					extent.extentLoggerPass("", "User able to update name");
				} else {
					logger.info("User not able to update name");
					extent.extentLoggerFail("", "User not able to update name");
				}

			} else {
				type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "abcdef g", "Text");
				click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
				waitTime(3000);
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 07/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1064(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1064_User should enter the  charaters in Bio screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.usernameBioArrowMark("Bio"), "Bio");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "Close Button")) {
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "close Button");
				waitTime(3000);
				type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "abcdef g", "Text");
				waitTime(3000);
				String Expectedresult = getText(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen);
				click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
				waitTime(3000);
				String Actualresult = getText(IOSHipiNeoProfilePage.objiosBioDescriptionInEditscreen);
				if (Actualresult.equalsIgnoreCase(Expectedresult)) {
					logger.info("User able to enter the charaters in Bio screen");
					extent.extentLoggerPass("", "User able to enter the charaters in Bio screen");
				} else {
					logger.info("User not able to enter the charaters in Bio screen");
					extent.extentLoggerFail("", "User not able to enter the charaters in Bio screen");
				}

			} else {
				type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "abcdef g", "Text");
				click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
				waitTime(3000);
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);

		}
	}

	// 08/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1080(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1080_User should enter the  charaters in Bio screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots Menu")) {
				logger.info("User able re-direct  to profile screen");
				extent.extentLoggerPass("", "User able re-direct  to profile screen");
			} else {
				logger.info("User is not able re-direct  to profile screen");
				extent.extentLoggerFail("", "User is not able re-direct  to profile screen");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 08/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1086(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1086_Logged in user - Check user is able  unfollow the following user by tapping on following cta");
			deleteFollowingInFollowingScreen();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Icon");
			waitTime(3000);
			String FirstUser = getText(IOSHipiNeoHomePage.objiOSUserNameInForYouScreen);
			logger.info("The First user name before clicking on Following button in following list is : " + FirstUser);
			extent.extentLogger("",
					"The First user name before clicking on Following button in following list is : " + FirstUser);
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);

			click(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen, "Following button");
			waitTime(3000);
			String FirstUser1 = getText(IOSHipiNeoProfilePage.objiosFollowingBtnSUserName);
			logger.info("The username after clicking on Following button in following list is : " + FirstUser1);
			extent.extentLogger("",
					"The username after clicking on Following button in following list is : " + FirstUser1);
			if (FirstUser.equals(FirstUser1)) {
				logger.info("User can,t unfollow the following users by tapping on following cta");
				extent.extentLoggerFail("", "User can,t unfollow the following users by tapping on following cta");
			} else {
				logger.info("User is able to unfollow the following users by tapping on following cta");
				extent.extentLoggerPass("", "User is able to unfollow the following users by tapping on following cta");
			}
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back arrow")) {
				click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back arrow");
				waitTime(2000);
			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);

		}
	}

	public void deleteFollowingInFollowingScreen() throws Exception {
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen, "Following button")) {
			for (;;) {
				if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen, "Following button")) {
					click(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen, "Following button");
					waitTime(3000);
					PartialSwipe("DOWN", 1);
				} else {
					logger.info("There is 0 Following");
					extent.extentLogger("", "There is 0 Following");
					break;
				}
			}
		} else {
			logger.info("Deleted all Following");
			extent.extentLogger("", "Deleted all Following");
		}
		click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		waitTime(3000);
	}

	// 08/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1085(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1085_Logged in user -  Check following cta is provided to verify user is been followed");

			follow();

			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen, "Following button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowingUsersNameDetailsInFollowingcreen, "User Name");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowingUsersIdDetailsInFollowingcreen, "User Id");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 08/12/21
	// k===============================================Profile=P0==================================================

	public void Profile_T1077(String userType) throws Exception {

		// dbt //ToSendFollowingRequest();
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1077_Logged in user  - Check if follow cta is provided to enable the user to follow the followers and on Tapping Follow ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"),
					"Followers Button")) {
				click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
				waitTime(3000);
			}
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Follower"),
					"Follower Button")) {
				click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Follower"), "Follower Button");
				waitTime(3000);
			}

			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow button")
					|| verifyElementExist(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen,
							"Following button")) {
				logger.info("user able to follow the follower");
				extent.extentLoggerPass("", "user able to follow the follower");
			} else {
				logger.info("user not able to follow the follower");
				extent.extentLoggerFail("", "user not able to follow the follower");
			}
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen, "User Name");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowUsersIdDetailsInFollowerScreen, "User Id");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	public void ToSendFollowingRequest() throws Exception {
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots Icon");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosLogOutButtonInSettingsPage, "Log out Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosPopUpLogOutButtonInSettingsPage, "Log out Popup");
		waitTime(3000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "muthukumaranm704@gmail.com", "user name");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "muthukumar900", "user password");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "login Button");
		waitTime(6000);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Dicover Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "name");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "sindhuf0869e76", "name");
		waitTime(3000);
		String Actualtext = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "search Button");
		waitTime(5000);
		String Expectedtext = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInSearch);
		if (Actualtext.equalsIgnoreCase(Expectedtext)) {
			click(IOSHiPiNeoDiscoverPage.objiosUserNameInSearch, "user Name");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow Button")) {
				click(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back Button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots Icon");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosLogOutButtonInSettingsPage, "Log out Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosPopUpLogOutButtonInSettingsPage, "Log out Popup");
				waitTime(3000);
				verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
				waitTime(3000);
			} else {
				click(IOSHipiNeoProfilePage.objiosFollowingBlackBtnInFollowerScreen, "Following Back Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back Button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots Icon");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosLogOutButtonInSettingsPage, "Log out Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosPopUpLogOutButtonInSettingsPage, "Log out Popup");
				waitTime(3000);
				verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
				waitTime(3000);
			}
		} else {
			logger.info("User Name is not same as searched text");
		}

	}

	// ============================================================KIRAN=====================================================================

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T781(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T781_Check if user is able to see the Select country region screen after tapping on +91 in Log in screen");
			System.out.println("T781_Check if user is able to see the Select country region screen after tapping on +91 in Log in screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			if ((verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen"))
					|| (verifyElementPresent(IOSHipiNeoProfilePage.objiosAlbaniaPhoneNumberTextField,
							"Select country region screen"))
					|| (verifyElementPresent(IOSHipiNeoProfilePage.objiosAlgeriaPhoneNumberTextField,
							"Select country region screen"))) {
				logger.info("Select country region screen is displayed when user taps on +91 in login screen");
				extent.extentLoggerPass("",
						"Select country region screen is displayed when user taps on +91 in login screen");

			} else {
				logger.info("Select country region screen is Not displayed when user taps on +91 in login screen");
				extent.extentLoggerFail("",
						"Select country region screen is Not displayed when user taps on +91 in login screen");
			}

			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T782(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T782_Check if user is able to close the Select country region screen by tapping on cross icon");
			System.out.println("T782_Check if user is able to close the Select country region screen by tapping on cross icon");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close");
			waitTime(3000);
			if ((verifyElementExist(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen"))
					|| (verifyElementExist(IOSHipiNeoProfilePage.objiosAlbaniaPhoneNumberTextField,
							"Select country region screen"))
					|| (verifyElementExist(IOSHipiNeoProfilePage.objiosAlgeriaPhoneNumberTextField,
							"Select country region screen"))) {
				logger.info("User  Not able to close the Select country region screen by tapping on cross icon");
				extent.extentLoggerFail("",
						"User  Not able to close the Select country region screen by tapping on cross icon");

			} else {
				logger.info("User  able to close the Select country region screen by tapping on cross icon");
				extent.extentLoggerPass("",
						"User  able to close the Select country region screen by tapping on cross icon");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// k===============================================Login/Signup
	// screen==================================================
	public void LoginSignupScreen_T787(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T787_Check if user is able to enter the Phone Number in Phone Number field in Login screen");
			System.out.println("T787_Check if user is able to enter the Phone Number in Phone Number field in Login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "1111111111", "Phone Number Type");
			waitTime(3000);
			String AfterEdit = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			if (AfterEdit.contentEquals("1111111111")) {
				logger.info("User  able to Enter the Phone Number");
				extent.extentLoggerPass("", "User able to Enter the Phone Number");

			} else {

				logger.info("User not able to Enter the Phone Number");
				extent.extentLoggerFail("", "User not able to Enter the Phone Number");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// k===============================================Login/Signup
	// screen==================================================
	public void LoginSignupScreen_T788(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T788_Check if user is able to remove the entered phone number by tapping on cross icon in login screen");
			System.out.println("T788_Check if user is able to remove the entered phone number by tapping on cross icon in login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "1111111111", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Clear Text");
			String AfterEdit = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			if (AfterEdit.equals("1111111111")) {
				logger.info("User not able to clear the Phone Number");
				extent.extentLoggerFail("", "User not able to clear the Phone Number");
			} else {
				logger.info("User  able to clear the Phone Number");
				extent.extentLoggerPass("", "User  able to clear the Phone Number");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// k===============================================Login/Signup
	// screen==================================================
	public void LoginSignupScreen_T789(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T789_Check if user is able to enter the Password in Password field in Phone Login screen");
			System.out.println("T789_Check if user is able to enter the Password in Password field in Phone Login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "1111111111", "Password");
			waitTime(3000);
			String BeforeEdit = getText(IOSHipiNeoProfilePage.objiosLoginPassWordTextField);
			waitTime(3000);
			if (BeforeEdit.contains("••••••••••")) {
				logger.info("User able to enter the Password");
				extent.extentLoggerPass("", "User able to enter the Password");
			} else {
				logger.info("User not able to enter the Password");
				extent.extentLoggerFail("", "User not able to enter the Password");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T790(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T790_Check if user is able to remove the entered Password by tapping on cross icon in login screen");
			System.out.println("T790_Check if user is able to remove the entered Password by tapping on cross icon in login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "1111111111", "Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordClearTextField, "Clear Text");
			waitTime(3000);
			String AfterEdit = getText(IOSHipiNeoProfilePage.objiosLoginPassWordTextField);
			System.out.println(AfterEdit);
			if (AfterEdit.equals("••••••••••")) {
				logger.info("User not able to clear the Password");
				extent.extentLoggerFail("", "User not able to clear the Password");
			} else {
				logger.info("User  able to clear the Password");
				extent.extentLoggerPass("", "User  able to clear the Password");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	

	public void LoginSignupScreen_T791(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T791_Check if user is able to login to the application when user enter valid details in Phone tab");
			System.out.println("T791_Check if user is able to login to the application when user enter valid details in Phone tab");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957406", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "123456", "Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "Login button");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dot menu")) {
				logger.info("User able to login");
				extent.extentLoggerPass("", "User able to login");
			} else {
				logger.info("User is not able to login");
				extent.extentLoggerFail("", "User is not able to login");
			}
			Logout();
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T793(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T793_Check if user navigate to forgot Password Reset Screen after tapping the Forgot password? in Phone tab screen");
			System.out.println("T793_Check if user navigate to forgot Password Reset Screen after tapping the Forgot password? in Phone tab screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957406", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T802(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T802_Check if user is able to see the Login with OTP in Login with Phone number screen");
			System.out.println("T802_Check if user is able to see the Login with OTP in Login with Phone number screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	

	public void LoginSignupScreen_T803(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T803_Check if user is able to navigate to login with OTP screen after tapping on Login with OTP in Login screen");
			System.out.println("T803_Check if user is able to navigate to login with OTP screen after tapping on Login with OTP in Login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginWithPasswordLinkInLogInPage,
					"Log in With Password Link");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T824(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T824_Check if user is able to enter the Email Address in Email Address field in Login screen");
			System.out.println("T824_Check if user is able to enter the Email Address in Email Address field in Login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Address Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "hipiios5@mailnesia.com", "Email");
			waitTime(3000);
			String BeforeEdit = getText(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage);
			if (BeforeEdit.equalsIgnoreCase("hipiios5@mailnesia.com")) {
				logger.info("User  able to enter the Email");
				extent.extentLoggerPass("", "User  able to enter the Email");
			} else {
				logger.info("User not able to enter the Email");
				extent.extentLoggerFail("", "User not able to enter the Email");

			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T826(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T826_Check if user is able to enter the Password in Password field in Email screen");
			System.out.println("T826_Check if user is able to enter the Password in Password field in Email screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "123456", "Password");
			waitTime(3000);
			String BeforeEdit = getText(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage);
			if (BeforeEdit.equalsIgnoreCase("••••••")) {
				logger.info("User  able to enter the Password");
				extent.extentLoggerPass("", "User  able to enter the Password");
			} else {
				logger.info("User not able to enter the Password");
				extent.extentLoggerFail("", "User not able to enter the Password");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T828(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T828_Check if user is able to login to the application when user enter valid details in Email tab");
			System.out.println("T828_Check if user is able to login to the application when user enter valid details in Email tab");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Address Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "hipiios5@mailnesia.com", "Email");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "123456", "Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLogInButtonInLogInPage, "Login Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dot menu")) {
				logger.info("User able to login");
				extent.extentLoggerPass("", "User able to login");
			} else {
				logger.info("User is not able to login");
				extent.extentLoggerFail("", "User is not able to login");
			}
			Logout();
		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T837(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T837_Check if user is able to see the Continue with Facebook CTA in login to Hipi Popup ");
			System.out.println("T837_Check if user is able to see the Continue with Facebook CTA in login to Hipi Popup ");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosContinueWithFacebookButtonInLoginInToHiPIPopUp,
					"Continue With Facebook Button");
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "CloseBtn");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T850(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T850_Check if user is able to see the Continue with Google CTA in login to Hipi Popup");
			System.out.println("T850_Check if user is able to see the Continue with Google CTA in login to Hipi Popup");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosContinueWithGoogleButtonInLoginInToHiPIPopUp,
					"Continue With Google Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "CloseBtn");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// k===============================================Login/Signup
	// screen==================================================

	public void LoginSignupScreen_T980(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T980_Check if user is navigate to login page of Facebook by tapping on Continue with Facebbok CTA in Sign up for HiPi pop-up ");
			System.out.println("T980_Check if user is navigate to login page of Facebook by tapping on Continue with Facebbok CTA in Sign up for HiPi pop-up ");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosContinueWithFacebookButtonInLoginInToHiPIPopUp,
					"Continue With Facebook Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFBallowPopUpContinueCTA, "Continue Button in popup");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFacebookTextInFacebookPage, "Facebook Page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosfacebookSiteCancelCTAInHipi, "cancel");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "CloseBtn");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(3000);
		}
	}

	// k=============================================== Creator P0
	// ==================================================
	public void Creator_T500(String userType) throws Exception {

		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T500_Guest User - User is not allowed to create a video");
			System.out.println("T500_Guest User - User is not allowed to create a video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiiosLoginPopUp, 50, "Login in to Hipi");
			verifyElementPresent(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Log in PopUp");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	// k=============================================== Creator
	// ==================================================
	public void Creator_T504(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T504_Logged in user  - Check if user is able to create video");
			System.out.println("T504_Logged in user  - Check if user is able to create video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "RecordButton");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Video_Speed_T517(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T517_Logged in user- On tapping 'Video Speed' Icon system displays 'Video Speed bar' with options [0.3x,0.5x,1x,1.5x,2x]");
			System.out.println("T517_Logged in user- On tapping 'Video Speed' Icon system displays 'Video Speed bar' with options [0.3x,0.5x,1x,1.5x,2x]");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			// pop ups--2
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSpeedSeletedCTAInRecordScreen, "Speed rail")) {

				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed0_3x, "0.3x Speed");
				waitTime(2000);
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed0_5x, "0.5x Speed");
				waitTime(2000);
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_1x, "1x Speed");
				waitTime(2000);
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed1_5x, "1.5x Speed");
				waitTime(2000);
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_2x, "2x Speed");
				waitTime(2000);

			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Video_Beauty_T523(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T523_Logged in user -Check by default beauty mode is Enable");
			System.out.println("T523_Logged in user -Check by default beauty mode is Enable");
			
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);

			if (!verifyIsElementDisplayed(IOSHipiCreateVideoPage.objiosBeautyModeSelected, "Seleted Beauty mode")) {
				logger.info("Beauty mode is not enable by default,Expected Behaviour");
				extent.extentLoggerPass("", "Beauty mode is not enable by default,Expected Behaviour");
			} else {
				logger.info("Beauty mode is enable by default");
				extent.extentLoggerFail("", "Beauty mode is enable by default");
			}

			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Sound_T566(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T566_Logged in user - Check user is able to add a music");
			System.out.println("T566_Logged in user - Check user is able to add a music");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");

			waitTime(2000);
			System.out.println(Searched);
			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(2000);
			String added = getText(IOSHipiCreateVideoPage.objiosSoundTitleInRecordScreen).trim();
			waitTime(2000);
			System.out.println(added);
			if (Searched.equalsIgnoreCase(added)) {
				logger.info("User able to add a music");
				extent.extentLoggerPass("", "User able to add a music");
			} else {
				logger.info("User not able to add a music");
				extent.extentLoggerFail("", "User not able to add a music");
			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	public void Creator_Sound_T586(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T586_Logged in user - Check if user is able to add the music after recording");
			System.out.println("T586_Logged in user - Check if user is able to add the music after recording");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(2000);
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 35,
					"Next button after recording")) {
				click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
				waitTime(4000);
				click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
				waitTime(2000);
				String Searched = "Chandigarh Mein";
				type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
				waitTime(2000);

				click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"),
						"First item in searched list");
				waitTime(6000);
				click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
				waitTime(3000);
				String added = getText(IOSHipiCreateVideoPage.objiosSoundTitleInRecordScreen).trim();
				waitTime(2000);
				if (Searched.equalsIgnoreCase(added)) {
					logger.info("User able to add a music");
					extent.extentLoggerPass("", "User able to add a music");
				} else {
					logger.info("User not able to add a music");
					extent.extentLoggerFail("", "User not able to add a music");
				}

			}

			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discard Edit");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discard Edit");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Effects_T687(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T687_Logged in user - By tapping on 'Effect' Icon user is navigated to Effect screen");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects CTA");
			waitTime(4000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosEffectsScreenInRecording, "Effect screen")) {
				logger.info("User navigated to Effects screen on tapping 'Effects' Icon");
				extent.extentLoggerPass("", "User navigated to Effects screen on tapping 'Effects' Icon");
			} else {
				logger.info("User is not navigated to Effects screen on tapping 'Effects' Icon");
				extent.extentLoggerFail("", "User is not navigated to Effects screen on tapping 'Effects' Icon");
			}

			tapiOSAtCenterOfScrreen(1);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, 20, "close Button");
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close Button");
			waitTime(2000);
		}
	}

	public void Creator_T690(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T690_Logged in user - By tapping on 'Effect' Icon user is navigated to Effect screen");
			System.out.println("T690_Logged in user - By tapping on 'Effect' Icon user is navigated to Effect screen");
			click(IOSHipiNeoHomePage.objiosBackArrowButtonFromFeed, "Back button");
			waitTime(4000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen,
					"Effect CTA in Recording Screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objEffectInTrending, "Effect In Trending");
			waitTime(3000);
			tapiOSAtCenterOfScrreen(1);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen,
					"cross icon in Recording Screen");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	public void Creator_T531(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T531_Logged in user - Check if on tapping 'Add Music' Icon user is navigated to Add Music screen");
			System.out.println("T531_Logged in user - Check if on tapping 'Add Music' Icon user is navigated to Add Music screen");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds In Record Screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage,
					"Sounds Songs List In Create Video Page");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objSoundsSongspageBackButton,
					"Sounds Songs page Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen,
					"cross icon in Recording Screen");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Creator_T514(String userType) throws Exception {// po
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T514_Logged in user - Check if user is able to flip camera and flash light is disabled in selfie mode on device supporting Front camera");
			System.out.println("T514_Logged in user - Check if user is able to flip camera and flash light is disabled in selfie mode on device supporting Front camera");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Buton");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.SelfieCameraSelected, "Front camera selfie mode On")) {
				// verifyElementPresentAndClick(IOSHipiCreateVideoPage.FlashLightDisabled,
				// "Flash Light In Create video is disabled");
				verifyElementPresent(IOSHipiCreateVideoPage.FlashLightDisabled,
						"Flash Light In Create video is disabled");
				waitTime(3000);
			}
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen,
					"cross icon in Recording Screen");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Creator_T679(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T679_Logged in user -  Check if another user is able to Download video");
			System.out.println("T679_Logged in user -  Check if another user is able to Download video");
			
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");
			waitTime(3000);
//			tapiOS_Middlepoint(1);
//			waitTime(3000);
//			verifyElementPresentAndClick(IOSHipiNeoHomePage.objSaveVideo,"Save Video");
//			waitTime(5000);
			for (int i = 1; i <= 10; i++) {
				tapiOS_Middlepoint(1);
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSsave_video, 15, "Save video pop up");
				click(IOSHipiNeoHomePage.objiOSsave_video, "Save video");
				if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objSavedVideo, 15, "Saved Video")) {

					logger.info("Saved video pop up displayed");
					extent.extentLogger("", "Saved video pop up displayed");
					waitTime(2000);

					break;
				} else {
					tapiOSAtCenterOfScrreen(1);
					waitTime(3000);
					Swipe("UP", 1);

				}

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

//===============================================creator P0 end================================================	
	public void BackToFeedScreenFromVideoPostScreen() throws Exception {

		waitTime(2000);
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Post screen")) {
			click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Post screen");
			waitTime(3000);
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Edit screen")) {
			click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Edit screen");
			waitTime(4000);
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
				"Discard edits in discard pop up")) {
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits in discard pop up");
			waitTime(3000);
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Record screen")) {
			click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Record screen");
			waitTime(4000);
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
				"Discard edits in discard pop up")) {
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits in discard pop up");
			waitTime(3000);
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Cross icon")) {
			click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Cross icon");
			waitTime(3000);
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
				"Discard edits in discard pop up")) {
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits in discard pop up");
			waitTime(3000);
		}

		if (verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home btn")) {
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home btn");
			waitTime(3000);
		}

	}

	// ====================================creator
	// P1--start-----------------s-------23-12-2021===============================
	public void Creator_T505(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T505_Logged in User - Check if user is not prompted to provide permission before creating a video ");
			System.out.println(
					"T505_Logged in User - Check if user is not prompted to provide permission before creating a video ");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button")) {
				logger.info(
						"System should not promt to provide needed permission to use device hardware microphone, Camera and storage");
				extent.extentLoggerPass("",
						"System should not promt to provide needed permission to use device hardware microphone, Camera and storage");
			} else {
				logger.info(
						"System should promt to provide needed permission to use device hardware microphone, Camera and storage");
				extent.extentLoggerFail("",
						"System should promt to provide needed permission to use device hardware microphone, Camera and storage");
			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T572(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T572_Logged  in user - Check if user recently search text is listed in suggestion with a [cross] option ");
			System.out.println(
					"T572_Logged  in user - Check if user recently search text is listed in suggestion with a [cross] option ");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "hindi", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objsearchedmusicInCreateVideo,
					"searched Music In Create Video");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	
	public void Creator_T574(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T574_Logged in user- Check if user is able to preview a music and then pause");
			System.out.println("T574_Logged in user- Check if user is able to preview a music and then pause");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			PartialCommentsSwipeiOS("UP", 2);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInCreateVideo, "Play Music");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlayMusicInCreateVideo, "Play Music");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPauseMusicInCreateVideo, "Pause Music");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlayMusicInCreateVideo, "Play Music");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongspageBackButton, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T685_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T685_Logged in user - Check if user is able to view the Cover photo of video created");
			System.out.println("T685_Logged in user - Check if user is able to view the Cover photo of video created");
			waitTime(4000);

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");
			if (verifyElementPresent(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post Button")) {
				logger.info("User is directed to Video Posting Screen");
				extent.extentLoggerPass("Creator", "User is directed to Video Posting Screen");
			} else {
				logger.info("User is not directed to Video Posting Screen");
				extent.extentLoggerFail("Creator", "User is not directed to Video Posting Screen");
			}
			if (verifyElementPresent(IOSHipiCreateVideoPage.objCoverPhotoInViedoCreatedScreen, "Cover photo")) {
				logger.info("User is able to view the Cover photo of video created");
				extent.extentLoggerPass("Creator", "User is able to view the Cover photo of video created");
			} else {
				logger.info("User is not able to view the Cover photo of video created");
				extent.extentLoggerFail("Creator", "User is not able to view the Cover photo of video created");
			}

			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T682_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T682_Logged in user - Check if user is able to save video as draft for upload");
			System.out.println("T682_Logged in user - Check if user is able to save video as draft for upload");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Iocn");
			waitTime(2000);
			DeleteDraftVideos();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft Button");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 100, "For You");
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSaveAsDraftTostMessage, " Save As Draft Tost Message");
			waitTime(3000);
			OpenRecentlyCreateddraftVideo();
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, 20, "Drafts videos in profile page");
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video")) {
				logger.info("User is able to save video as draft for upload");
				extent.extentLoggerPass("Creator", "User is able to save video as draft for upload");
			} else {
				logger.info("User is not able to save video as draft for upload");
				extent.extentLoggerFail("Creator", "User is not able to save video as draft for upload");
			}
			NavigateToHomPage();
		}
	}

	public void Creator_T684_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T684_Logged in user- Check whether 'Save as Draft' CTA is available on 'Post HiPiT' screen.");
			System.out.println(
					"T684_Logged in user- Check whether 'Save as Draft' CTA is available on 'Post HiPiT' screen.");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft Button")) {
				logger.info("Save as draft CTA is visible in post screen");
				extent.extentLoggerPass("Creator", "Save as draft CTA is visible in post screen");
			} else {
				logger.info("Save as draft CTA is not visible in post screen");
				extent.extentLoggerFail("Creator", "Save as draft CTA is not visible in post screen");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

// last  expected should be clarified..
	public void Creator_T680_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T680_Logged in user- Check if user is able to set privacy setting to allow[disable] Download");
			System.out.println(
					"T680_Logged in user- Check if user is able to set privacy setting to allow[disable] Download");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objSaveToDeviceEnableToggleButtonInPostPage,
					"Save To Device Toggle Button")) {
				logger.info("By default Save to device is enabled");
				extent.extentLoggerPass("Creator", "By default Save to device is enabled");
			} else {
				logger.info("By default Save to device is not enabled");
				extent.extentLoggerFail("Creator", "By default Save to device is not enabled");
			}
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objSaveToDeviceEnableToggleButtonInPostPage,
					"Save To Device Toggle Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objSaveToDeviceDisableToggleButtonInPostPage,
					"Save To Device Toggle Button is Disable")) {
				logger.info("when User tap on Save To Device Toggle Button Save To Device Toggle Button is Disable");
				extent.extentLoggerPass("Creator",
						"when User tap on Save To Device Toggle Button Save To Device Toggle Button is Disable");
			} else {
				logger.info(
						"when User tap on Save To Device Toggle Button Save To Device Toggle Button is not  Disable");
				extent.extentLoggerFail("Creator",
						"when User tap on Save To Device Toggle Button Save To Device Toggle Button is not  Disable");
			}
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objSaveToDeviceDisableToggleButtonInPostPage,
					"Save To Device Toggle Button is Disable");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T678_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T678_Logged in user  - Check if user is able to set privacy setting to allow[enable] Save to device");
			System.out.println(
					"T678_Logged in user  - Check if user is able to set privacy setting to allow[enable] Save to device");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objSaveToDeviceEnableToggleButtonInPostPage,
					"Save To Device Toggle Button")) {
				logger.info("By default Save to device is enabled");
				extent.extentLoggerPass("Creator", "By default Save to device is enabled");
			} else {
				logger.info("By default Save to device is not enabled");
				extent.extentLoggerFail("Creator", "By default Save to device is not enabled");
			}
			BackToFeedScreenFromVideoPostScreen();
		}

	}

	public void Creator_T676_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T676_Logged in user - Check if user is able to set privacy setting to allow[disable] Share");
			System.out.println(
					"T676_Logged in user - Check if user is able to set privacy setting to allow[disable] Share");
			
			waitTime(4000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objSaveToDeviceEnableToggleButtonInPostPage,
					"Allow Sharing Toggle Button")) {
				logger.info("By default Allow Sharing is enabled");
				extent.extentLoggerPass("Creator", "By default Allow Sharing is enabled");
			} else {
				logger.info("By default Allow Sharing is not enabled");
				extent.extentLoggerFail("Creator", "By default Allow Sharing is not enabled");
			}
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objSaveToDeviceEnableToggleButtonInPostPage,
					"Allow Sharing Toggle Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objSaveToDeviceDisableToggleButtonInPostPage,
					"Allow Sharing Toggle Button is Disable")) {
				logger.info("when User tap on Allow Sharing Toggle Button Allow Sharing Toggle Button is Disable");
				extent.extentLoggerPass("Creator",
						"when User tap on Allow Sharing Toggle Button Allow Sharing Toggle Button is Disable");
			} else {
				logger.info("when User tap on Allow Sharing Toggle Button Allow Sharing Toggle Button is not  Disable");
				extent.extentLoggerFail("Creator",
						"when User tap on Allow Sharing Toggle Button Allow Sharing Toggle Button is not  Disable");
			}
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objSaveToDeviceDisableToggleButtonInPostPage,
					"Allow Sharing Toggle Button is Disable");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T674_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T674_Logged in user  - Check if user is able to set privacy setting to allow[enable] Share");
			System.out.println(
					"T674_Logged in user  - Check if user is able to set privacy setting to allow[enable] Share");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objSaveToDeviceEnableToggleButtonInPostPage,
					"Allow Sharing Toggle Button")) {
				logger.info("By default Allow Sharing is enabled");
				extent.extentLoggerPass("Creator", "By default Allow Sharing is enabled");
			} else {
				logger.info("By default Allow Sharing is not enabled");
				extent.extentLoggerFail("Creator", "By default Allow Sharing is not enabled");
			}
			BackToFeedScreenFromVideoPostScreen();
		}

	}

	public void Creator_T659_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T659_Logged in user  - Check if user is able to tag single person while upload");
			System.out.println("T659_Logged in user  - Check if user is able to tag single person while upload");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objDescriptionBoxInPostPage, 500, "Description Box");
			click(IOSHipiCreateVideoPage.objDescriptionBoxInPostPage, "Description Box");
			waitTime(3000);

			type(IOSHipiCreateVideoPage.objDescriptionBoxInPostPage, "@DheerajDhoopar", "Description Box");
			waitTime(3000);
			String A = getAttributValue("value",IOSHipiCreateVideoPage.objDescriptionBoxInPostPage);
			extent.extentLogger("", "initially typed text : " + A);
			System.out.println(A);
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objFirstUserInInviteFriendsScreenInPostPage,
					"Follower from Invite Friend Screen");
			waitTime(3000);
			String B =getAttributValue("value",IOSHipiCreateVideoPage.objDescriptionBoxInPostPage);
			extent.extentLogger("", "After choosing 1 st suggestion : " + B);
			System.out.println(B);
			if (B.contains(A)) {
				logger.info("user is able to tag single person while upload");
				extent.extentLoggerPass("Creator", "user is able to tag single person while upload");
			} else {
				logger.info("user is not able to tag single person while upload");
				extent.extentLoggerFail("Creator", "user is not able to tag single person while upload");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T668(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T668_Logged in user - Check if user is able to set privacy setting to allow/[disable] comments");
			System.out.println(
					"T668_Logged in user - Check if user is able to set privacy setting to allow/[disable] comments");
			
			waitTime(4000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			click(IOSHipiCreateVideoPage.PostScreenEnabledToggleButtons("Allow_comments"), "Allow Comments Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.PostScreenDisabledToggleButtons("Allow_comments"),
					"Allow Comments toggle Button")) {
				logger.info("User able to turn off the  allow comment by tapping on toggle button ");
				extent.extentLoggerPass("", "User able to turn off the  allow comment by tapping on toggle button ");
			} else {
				logger.info("User not able to turn off the  allow comment by tapping on toggle button ");
				extent.extentLoggerFail("",
						"User not able to turn off the  allow comment by tapping on toggle button ");
			}
			waitTime(3000);
			click(IOSHipiCreateVideoPage.PostScreenDisabledToggleButtons("Allow_comments"),
					"Allow Comments toggle Button");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

//23/12/21//  k===============================================Creator=P1==================================================	

	public void Creator_T666(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T666_Logged in user  - Check if user is able to set privacy setting to allow[enable] comments");
			System.out.println(
					"T666_Logged in user  - Check if user is able to set privacy setting to allow[enable] comments");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementExist(IOSHipiCreateVideoPage.PostScreenEnabledToggleButtons("Allow_comments"),"Allow Comments Button")) {
				logger.info("User  default Allow Comments is enabled");
				extent.extentLoggerPass("", "User  default Allow Comments is enabled");
			} else {
				logger.info("User default Allow Comments is not enabled");
				extent.extentLoggerFail("", "User default Allow Comments is not enabled");
			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

//23/12/21//  k===============================================Creator=P1==================================================	

	public void Creator_T664(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T664_Logged in user - Check if user is able to set visibilty mode to Friends");
			System.out.println("T664_Logged in user - Check if user is able to set visibilty mode to Friends");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			click(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoButtonInPostScreen, "Who Can View This Video Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Friends"), "Friends option");
			waitTime(3000);
			String expectedoption = getText(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Friends"));
			waitTime(3000);
			String actualoption = getText(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoSelectedOptionInPostScreen);
			waitTime(3000);
			if (expectedoption.equalsIgnoreCase(actualoption)) {
				logger.info("user is able to set visibilty mode to Friends");
				extent.extentLoggerPass("", "user is able to set visibilty mode to Friends");
			} else {
				logger.info("user is not able to set visibilty mode to Friends");
				extent.extentLoggerFail("", "user is not able to set visibilty mode to Friends");
			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}
	// 23/12/21//
	// k===============================================Creator=P1==================================================

	public void Creator_T662(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T662_Logged in user - Check if user is able to set visibilty mode to Private");
			System.out.println("T662_Logged in user - Check if user is able to set visibilty mode to Private");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			String expectedoption = getText(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoSelectedOptionInPostScreen);
			waitTime(5000);
			click(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoButtonInPostScreen, "Who Can View This Video Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Private"), "Private option");
			waitTime(3000);
			String actualoption = getText(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoSelectedOptionInPostScreen);
			waitTime(3000);
			if (expectedoption.equalsIgnoreCase(actualoption)) {
				logger.info("user is not able to set visibilty mode to private");
				extent.extentLoggerFail("", "user is not able to set visibilty mode to private");
			} else {
				logger.info("user is able to set visibilty mode to private");
				extent.extentLoggerPass("", "user is able to set visibilty mode to private");
			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}
	// 23/12/21//
	// k===============================================Creator=P1==================================================

	public void Creator_T565(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T565_Logged in user - Check user is able to preview a music and then pause");
			System.out.println("T565_Logged in user - Check user is able to preview a music and then pause");

			waitTime(4000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sound Title");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceHolderInSearchScreen, "Search Place Holder");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Hindi", "Hindi");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSuggestedRecordsInSearchScreen, "Suggested Record");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosRecoredInSearchScreen, "Suggested 1st Record");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft, 50, "Trim screen");

			
//			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Play Pause Button");
//			waitTime(3000);
//			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Play Pause Button");
//			waitTime(2000);
		
			String timeBeforetrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time Before trim : " + timeBeforetrim);
			extent.extentLogger("", "the time Before trim : " + timeBeforetrim);

			WebElement ele = findElement(IOSHipiCreateVideoPage.objTrimLeftThumb);
			String y = getAttributValue("y", IOSHipiCreateVideoPage.objTrimLeftThumb);
			int Y = Integer.parseInt(y);
			SwipeAnElementiOS(ele, 400, Y);
			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeAftertrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time After trim : " + timeAftertrim);
			extent.extentLogger("", "the time After trim : " + timeAftertrim);
			waitTime(2000);
			
			if (!timeBeforetrim.equals(timeAftertrim)) {
				logger.info("User able to preview a music and then pause");
				extent.extentLoggerPass("", "User able to preview a music and then pause");

			} else {
				logger.info("User not able to preview a music and then pause");
				extent.extentLoggerFail("", "User not able to preview a music and then pause");
			}
			click(IOSHipiSoundPage.objiOSCrossIconInPreviewSoundTab, "Cross icon");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T649(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T649_Logged in user_ Check user is able to see the Volume");
			System.out.println("T649_Logged in user_ Check user is able to see the Volume");
			
			System.out.println("T649_Logged in user_ Check user is able to see the Volume");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 30,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "volume in edit screen");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T646(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T646_Logged in user - Check user is able to add Filter on the video");
			System.out.println("T646_Logged in user - Check user is able to add Filter on the video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Tick button")) {
				click(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Tick button");
				waitTime(3000);
			}

			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 250,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.filtersTypes("Filter"), "Filter In Create Video");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T647(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T647_Logged in user - Check user is able to add Filter on the video");
			System.out.println("T647_Logged in user - Check user is able to add Filter on the video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.filtersTypes("Filter"), "Filter In Create Video");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filter Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNewTrendingInFilterScreen("Trending"), "Trending screen");
			waitTime(3000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T650(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T650_Logged in user - Check user is able to tap on volume ");
			System.out.println("T650_Logged in user - Check user is able to tap on volume ");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "volume in edit screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "Vloume Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosVoulmeAdjustScreenInCreateVideo,
					"volume adjust screen");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T655(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T655_Logged in user - Check if user is able to upload video without description [Since description is optional field]");
			System.out.println(
					"T655_Logged in user - Check if user is able to upload video without description [Since description is optional field]");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "volume in edit screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoPage, 100,"Post Video Page");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video")) {
				click(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video");
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 200,
					"video posted sucessfully")) {
				logger.info("Video posted successfully");
				extent.extentLoggerPass("", "Video posted successfully");
			} else {
				logger.info("Video posted successfully not displayed");
				extent.extentLoggerFail("", "Video posted successfully not displayed");
			}
			}
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T670(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T670_Logged in user - Check if user is able to set privacy setting to allow[enable] Like");
			System.out.println(
					"T670_Logged in user - Check if user is able to set privacy setting to allow[enable] Like");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objAllowLikesEnableInToggleButtonInPostPage,
					"Allow Likes Toggle Button")) {
				logger.info("By default Allow Likes is enabled");
				extent.extentLoggerPass("Creator", "By default Allow Likes is enabled");
			} else {
				logger.info("By default Allow Likes is not enabled");
				extent.extentLoggerFail("Creator", "By default Allow Likes is not enabled");
			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T672(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T672_Logged in user - Check if user is able to set privacy setting to allow[disable] Like");
			System.out.println(
					"T672_Logged in user - Check if user is able to set privacy setting to allow[disable] Like");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objAllowLikesEnableInToggleButtonInPostPage,
					"Allow Likes Toggle Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objAllowLikesDisableInToggleButtonInPostPage,
					"Disable Likes Toggle Button")) {
				logger.info(" Allow Likes is Disabled");
				extent.extentLoggerPass("Creator", "Allow Likes is Disabled");
			} else {
				logger.info("Allow Likes is not Disabled");
				extent.extentLoggerFail("Creator", "Allow Likes is not Disabled");
			}
			if (verifyElementExist(IOSHipiCreateVideoPage.objAllowLikesDisableInToggleButtonInPostPage,
					"Disable Likes Toggle Button")) {
				click(IOSHipiCreateVideoPage.objAllowLikesDisableInToggleButtonInPostPage,
						"Disable Likes Toggle Button");
				waitTime(3000);
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void musicAccessPopUp() throws Exception {
		if (verifyElementExist(IOSHipiSoundPage.objiOSMusicAccessPopUp, "Music access pop up")) {
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSMusicAccessPopUpOKBtn, "OK");
			waitTime(3000);

		}
	}
	

	public void Creator_T599(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T599_Logged in User - Check if user is able to Create a video with existing sound");
			System.out.println("T599_Logged in User - Check if user is able to Create a video with existing sound");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, 20, "Create Icon");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favourite");
			waitTime(3000);
			musicAccessPopUp();
			click(IOSHipiSoundPage.objiOSDiscoverTab, "Discover");
			waitTime(5000);
			PartialCommentsSwipe("UP", 1);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 25, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment box");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "welocme to a new world", "Description of video");
			waitTime(3000);
			String DescribeVideo = findElement(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo)
					.getAttribute("value");
			System.out.println(DescribeVideo);

			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video");
			waitTime(2000);
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 100,
					"video posted sucessfully")) {
				logger.info("Video posted successfully");
				extent.extentLoggerPass("", "Video posted successfully");
			} else {
				logger.info("Video posted successfully not displayed");
				extent.extentLoggerFail("", "Video posted successfully not displayed");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T499(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T499_Guest User - Check if user is able to see the login pop-up is displayed by tapping on "
							+ " icon (Creator icon)");
			System.out.println("T499_Guest User - Check if user is able to see the login pop-up is displayed by tapping on "
							+ " icon (Creator icon)");

			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objLoginToHipiPopUpInCreateButton, "Login To Hipi");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objCloseIconInCreatorPage, "Close Icon");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}

	}

	// ====================================creator
	// P1--end-----------------s-------===============================

	// =================================creator p2
	// start==========================3/1/2022===========================

	public void Creator_T703_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T703_Logged in user - Check user is unable to create a video by adding effect without internet");
			System.out.println("T703_Logged in user - Check user is unable to create a video by adding effect without internet");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects CTA");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosEffectsScreenInRecording, 50, "Effect screen");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosDownloadBtnForEffectsPresent(1), "Download arrow")) {
				click(IOSHipiCreateVideoPage.objiosDownloadBtnForEffectsPresent(1), "Download arrow");
				waitTime(10000);
			}
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosEffectInEffectsScreen(0), "First Effect");
			waitTime(3000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			wifi("Off");
			waitTime(15000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");

			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network error")) {
				logger.info("User is unable to create video without internet by adding effect");
				extent.extentLoggerPass("Creator", "User is unable to create video without internet by adding effect");
			} else {
				logger.info("User is able to create video without internet by adding effect");
				extent.extentLoggerFail("Creator", "User is able to create video without internet by adding effect");

			}
			wifi("On");
			waitTime(10000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T695_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T695_Logged in user -Check whether multiple copies saved in Draft of the same video");
			System.out.println("T695_Logged in user -Check whether multiple copies saved in Draft of the same video");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Iocn");
			waitTime(2000);
			DeleteDraftVideos();

			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Record Buton");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "nnn", "Comment Box");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done Button");
			waitTime(2000);
			String firstTime = getText(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			System.out.println(firstTime);
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 100, "For You");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Iocn");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosBlockOfDraftVideo(1), "Draft video");
			waitTime(3000);
			String SecondTime = getText(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			if (firstTime.contentEquals(SecondTime)) {
				System.out.println("Same Video");
			} else {
				System.out.println("not same video");
			}
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft Button");

			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSaveAsDraftTostMessage, 10,
					"Draft Video Tost Message")) {
				logger.info("User can save same video as many times");
				extent.extentLoggerPass("Creator", "User can save same video as many times");
			} else {
				logger.info("User can not save same video as many times");
				extent.extentLoggerFail("Creator", "User can not save same video as many times");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

	
	public void Creator_T694_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T694_Logged in user  - Check if user is redirected to Video creation screen, when tapped anywhere on above the 'effect section'");
			System.out.println("T694_Logged in user  - Check if user is redirected to Video creation screen, when tapped anywhere on above the 'effect section'");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects CTA");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosEffectsScreenInRecording, "Effect screen");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			if (!verifyElementExist(IOSHipiCreateVideoPage.objiosEffectsScreenInRecording, "Effect screen")) {
				logger.info(
						"User is redirect to Video creation screen, when tapped anywhere on above the effect section");
				extent.extentLoggerPass("Creator",
						"User is redirect to Video creation screen, when tapped anywhere on above the effect section");
			} else {
				logger.info(
						"User is not redirect to Video creation screen, when tapped anywhere on above the effect section");
				extent.extentLoggerFail("Creator",
						"User is not redirect to Video creation screen, when tapped anywhere on above the effect section");
			}

			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

	
	public void Creator_T692_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T692_Logged in user - Check layout of effects screen");
			System.out.println("T692_Logged in user - Check layout of effects screen");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects CTA");
			waitTime(3000);
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosEffectsScreenInRecording, 10,
					"Trending  effects")) {
				logger.info("User is able to see trending effects below the screen");
				extent.extentLoggerPass("Creator", "User is able to see trending effects below the screen");
			} else {
				logger.info("User is not able to see trending effects below the screen");
				extent.extentLoggerFail("Creator", "User is not able to see trending effects below the screen");
			}

			tapiOSAtCenterOfScrreen(1);

			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	
	// =====================================4-1-2022============================================

	public void Creator_T683_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T683_Logged in user - Check if user is able to tag multiple person while upload");
			System.out.println("T683_Logged in user - Check if user is able to tag multiple person while upload");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 50, "Comment Box");
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, " @HipiGOAT @HiPiApp", "Comment Box");
			waitTime(3000);
			String Before = getAttributValue("value",IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			System.out.println(Before);
			click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 10, " posted tost message");
			waitTime(3000);
			OpenRecentlyPostedVideoOrLastCreatedVideo();
			verifyElementExist(IOSHipiNeoHomePage.objiosTagsNameInFeedScreen, "Tags");
			String After = getText(IOSHipiNeoHomePage.objiosTagsNameInFeedScreen);
			System.out.println(After);
			if (Before.contains(After)) {
				logger.info("User is able to  tag multiple person in post screen");
				extent.extentLoggerPass("Creator", "User is able to  tag multiple person in post screen");
			} else {
				logger.info("User is not able to  tag multiple person in post screen");
				extent.extentLoggerFail("Creator", "User is not able to  tag multiple person in post screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	
	
	public void Creator_T620_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T620_Logged in user - Check if user is able to add description with URL to a newly created video, for user created hashtags");
			System.out.println("T620_Logged in user - Check if user is able to add description with URL to a newly created video, for user created hashtags");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 500, "Comment Box");
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "For more info https://www.google.co.in/",
					"Comment Box");
			waitTime(3000);
			String Before = getText(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			System.out.println(Before);
			click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done Button InKeyBoard");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 10,
					" posted tost message")) {
				logger.info("User is able to add description with URL to a newly created video");
				extent.extentLoggerPass("Creator", "User is able to add description with URL to a newly created video");
			} else {
				logger.info("User is not able to add description with URL to a newly created video");
				extent.extentLoggerFail("Creator",
						"User is not able to add description with URL to a newly created video");
			}
			
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	
	public void Creator_T621_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T621_Logged in user - Check if user is able to add a newly Hashtag created to favourite");
			System.out.println("T621_Logged in user - Check if user is able to add a newly Hashtag created to favourite");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Record Buton");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 100, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 100, "Comment Box");
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "#sky", "Comment Box");
			waitTime(3000);
			String Before = getText(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			System.out.println(Before);
			click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done Button InKeyBoard");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 10, " posted tost message");
			waitTime(3000);
			OpenRecentlyPostedVideoOrLastCreatedVideo();
			verifyElementExist(IOSHipiNeoHomePage.objiosTagsNameInFeedScreen, "Tags");
			String After = getText(IOSHipiNeoHomePage.objiosTagsNameInFeedScreen);
			System.out.println(After);
			WebElement A = findElement(By.xpath("IOSHipiNeoHomePage.objiosTagsNameInFeedScreen"));
			int B = A.getLocation().getX();
			int C = A.getLocation().getY();
			tapOnPointWithAxis(B, C, 1);
			waitTime(3000);
			waitForElementDisplayediOS(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, 50, "Add To Favourites");
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites")) {
				logger.info("user is able to add a newly Hashtag created to favourite");
				extent.extentLoggerPass("Creator", "user is able to add a newly Hashtag created to favourite");
			} else {
				logger.info("user is not able to add a newly Hashtag created to favourite");
				extent.extentLoggerFail("Creator", "user is not able to add a newly Hashtag created to favourite");
			}
			click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			waitTime(3000);
			verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

//s----------------------------------------------testcase-------------------------------------------
	public void Creator_T506(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T506_Logged in User - Check if user is prompted to provide permission when we tries to create video after fresh install");
			System.out.println("T506_Logged in User - Check if user is prompted to provide permission when we tries to create video after fresh install");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T507(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T507_Logged in User - Check if user is not prompted with alert when user accepts to grant permission to use device hardware microphone, Camera and storage");
			System.out.println("T507_Logged in User - Check if user is not prompted with alert when user accepts to grant permission to use device hardware microphone, Camera and storage");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T508(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T508_Logged in User - Check if user is prompted with alert when user deny to grant permission to use device hardware microphone, Camera and storage");
			System.out.println("T508_Logged in User - Check if user is prompted with alert when user deny to grant permission to use device hardware microphone, Camera and storage");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(5000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosCameraPopup, "PopUP");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosDontAllowPopup, "dont allow");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosAllowPermission, "Permission PopUP");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosOkPermission, "ok permission");
			
			
		}
	}

	public void Creator_T532(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T532_Logged in uuser  - Check if user is able to search and add music and then verify music is displayed");
			System.out.println("T532_Logged in uuser  - Check if user is able to search and add music and then verify music is displayed");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search box");
			waitTime(5000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Hindi songs", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicRandom, "Random song");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs,20 , "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

/////////////////////////////////31-12-21
	public void Creator_T534_T539_(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T534_T539_Logged in user - Check if on tapping 'Add Timer' Icon system displays 'Add Timer bar' with options[3s,5s,10s]");
			System.out.println("T534_T539_Logged in user - Check if on tapping 'Add Timer' Icon system displays 'Add Timer bar' with options[3s,5s,10s]");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosTimerInCreateVideo, "Timer Icon");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.TimerSeconds("10s"), "Timer");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.TimerSeconds("15s"), "Timer");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.TimerSeconds("20s"), "Timer");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Creator_T540(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T_540_Logged in user  -Check if on tapping 'Filters' Icon user is navigated to Filters screen");
			System.out.println("T_540_Logged in user  -Check if on tapping 'Filters' Icon user is navigated to Filters screen");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filter Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosFilterScreen, "Filter Screen")) {
				logger.info(" User is navigate to Filters screen");
				extent.extentLoggerPass("", " User is navigate to Filters screen");
			} else {
				logger.info(" User is not navigate to Filters screen");

				extent.extentLoggerFail("", " User is not navigate to Filters screen");
			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Creator_T542(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T_542_Logged in user - Check is user is navigated to Video edit screen once the sheduled video creation time is lapsed");
			System.out.println("T_542_Logged in user - Check is user is navigated to Video edit screen once the sheduled video creation time is lapsed");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objios15secondsInCreateVideo, "15 seconds timer");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 50, "Next button");
			verifyElementPresent(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button");
			waitTime(2500);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discard Edit");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discard Edit");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	public void Creator_T551(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T551_Logged in user - Check if recorded clip is deleted when clicked on Discard edits [Recording completed]");
			System.out.println("T551_Logged in user - Check if recorded clip is deleted when clicked on Discard edits [Recording completed]");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 1000,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objDiscardYourEditsPopUpText, " Discard Your Edits");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

///////////////////////////////////////////////1-1-2022/////////////////////////////////////////
	public void Creator_T558(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T558_Logged in User - Check if on tapping 'Upload' Icon user is navigated to Select video screen]");
			System.out.println("T558_Logged in User - Check if on tapping 'Upload' Icon user is navigated to Select video screen]");
			
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objUploadinRecordingScreen, "upload videos");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objiosVideoUpoloadpoup, "video upload");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok popup");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objiosAllowAcessPhotos, "Allow Acess videos");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosAllowAcessToYourPhotos,
					"Allow Acess to your phone");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objiosSelectVideo, "select video page");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "back button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void Creator_T567(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T567_Logged in user - Check if user selected sound is played while recording");
			System.out.println("T567_Logged in user - Check if user selected sound is played while recording");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Hindi songs", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicRandom, "Random song");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 100, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			String SelectedSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			System.out.println(SelectedSong);
			extent.extentLogger("", "the selected song is " +SelectedSong);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T594(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T594_Logged in user - While Changing volume- Check if on tapping back from mobile keyboard, user remains on Video Edit Screen");
			System.out.println("T594_Logged in user - While Changing volume- Check if on tapping back from mobile keyboard, user remains on Video Edit Screen");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 2);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "volume in edit screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosCheckVolumeInVideoEditScreen, "check the vlume");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objDiscardYourEditsPopUpText, " Discard Your Edits");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosKeepYourEdits, "keep your edits");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Creator_T595(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T595_Logged in user - Check if Microphone icon is 'enabled' when video is created with original sound");
			System.out.println("T595_Logged in user - Check if Microphone icon is 'enabled' when video is created with original sound");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 2);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "volume in edit screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosMicrophoneEnabled, "Microphone Enabled");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosCheckVolumeInVideoEditScreen, "check the vlume");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objDiscardYourEditsPopUpText, " Discard Your Edits");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosKeepYourEdits, "keep your edits");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Creator_T568(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T568_Logged in user - Check if user selected sound can be remove till the time he has not recorded anything.");
			System.out.println("T568_Logged in user - Check if user selected sound can be remove till the time he has not recorded anything.");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(5000);
			Swipe("UP", 1);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosCrossIconInSelectedMusic,
					"cross icon in selected music");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosCrossIconInSelectedMusic,
					"cross icon in selected music")) {
				logger.info("User selected sound is not be removed till the time he has not recorded anything.");
				extent.extentLoggerFail("",
						"User selected sound is not  be removed till the time he has not recorded anything.");
			} else {
				logger.info("User selected sound is removed till the time he has not recorded anything.");
				extent.extentLoggerPass("",
						"User selected sound is removed till the time he has not recorded anything.");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Creator_T560(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T560_Logged in User - Check the uploaded video is available in user profile");
			System.out.println("T560_Logged in User - Check the uploaded video is available in user profile");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			click(IOSHipiNeoHomePage.objiOSsave_video, "Save video");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objSavedVideo, 20, "Saved Video");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objUploadinRecordingScreen, "upload videos");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosVideoUpoloadpoup, "video upload");
			waitTime(3000);
			clearField(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok popup");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosAllowAcessPhotos, "Allow Acess videos");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosAllowAcessToYourPhotos,
					"Allow Acess to your phone");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSelectVideo, "select video page");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosFirstVideoSelected, "first video selected");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosEditTheVideo, "Edit the video");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSliderInEditVideo, "Slider In Edit Video");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosCrossIconInEditVideo, "Cross Icon In Edit Video");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Tick Icon In Edit Video");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 100,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit,
					"Next Button in video edit");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, 50, "Post Video");
			waitTime(4000);
			type(IOSHipiCreateVideoPage.objDescriptionInVideoPostPage, "welocme to a new world",
					"Description of video");
			waitTime(3000);
			String DescribeVideo = getText(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			System.out.println(DescribeVideo);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosHastagInPostingScreen, "Hash Tag");
			waitTime(4000);
			type(IOSHipiCreateVideoPage.objiosHastagInPostingScreen, "Trending", "HasTag of video");
			waitTime(3000);
			String HashTag = getText(IOSHipiCreateVideoPage.objiosHastagInPostingScreen);
			System.out.println(HashTag);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video");
			waitTime(2000);
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 100,
					"video posted sucessfully")) {
				logger.info("Video posted successfully");
				extent.extentLoggerPass("", "Video posted successfully");
			} else {
				logger.info("Video posted successfully not displayed");
				extent.extentLoggerFail("", "Video posted successfully not displayed");
			}

			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

////////////////////////////////////////////2-1-22///////S//////////////////////////////////
	public void Creator_T569(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T569_Logged in user - Check if user is prompted with message when user replace already existing music");
			System.out.println("T569_Logged in user - Check if user is prompted with message when user replace already existing music");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Hindi songs", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicRandom, "Random song");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 25, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Song Selected")) {
				logger.info("Song is seletecd in the create video screen");
				extent.extentLoggerPass("", "Song is seletecd in the create video screen");
			} else {
				logger.info("Song is not seletecd in the create video screen");
				extent.extentLoggerFail("", "Song is not seletecd in the create video screen");
			}
			String ExpectedSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			waitTime(3000);
			System.out.println(ExpectedSong);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			verifyElementPresent(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button");
			waitTime(2500);

			click(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 2);
			click(IOSHipiCreateVideoPage.objiosSongTitleInSoundScreen, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 25, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace Song");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosYesTheReplaceTheSong, "Yes Replace Song");
			waitTime(3000);
			String ActualSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			System.out.println(ActualSong);
			if (ExpectedSong.equalsIgnoreCase(ActualSong)) {
				logger.info("User not able to replace the already added song");
				extent.extentLoggerFail("", "User not able to replace the already added song");
			} else {
				logger.info("User is able to replace the already added song");
				extent.extentLoggerPass("", "User is able to replace the already added song");
			}
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void Creator_T571(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T571_Logged in user - Check if user tapping on search text field to enter record other options are displayed");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Hindi songs", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "BAck Arrow");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Place holder");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosCrossIconSearchSongsPage, "cross Icon");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objSoundsSongspageBackButton, "Back Arrow");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "BAck Arrow");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross ICon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void Creator_T590(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T590_Logged in user - Check if trim icon is 'enabled' when video is created with some sound");
			System.out.println("T590_Logged in user - Check if trim icon is 'enabled' when video is created with some sound");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 2);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 25, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objTrimIconinVideoEditScreen, "Trim Icon");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objDiscardYourEditsPopUpText, " Discard Your Edits");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosKeepYourEdits, "keep your edits");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Creator_T589(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T590_Logged in user - Check if trim icon is 'enabled' when video is created with some sound");
			System.out.println("T590_Logged in user - Check if trim icon is 'enabled' when video is created with some sound");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 500,
					"Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objTrimIconinVideoEditScreen, "Trim Icon");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			verifyElementExist(IOSHipiCreateVideoPage.objDiscardYourEditsPopUpText, " Discard Your Edits");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosKeepYourEdits, "keep your edits");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Button in video edit");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}


	public void Creator_T578(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T578_Logged in user - Check if only single audio can be selected while adding a music");
			System.out.println("T578_Logged in user - Check if only single audio can be selected while adding a music");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 2);
			waitTime(5000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 25, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Song Selected");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 2);
			waitTime(5000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 25, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace Song")) {
				logger.info("Only single audio should be selected while adding a music");
				extent.extentLoggerPass("", "Only single audio should be selected while adding a music");
			} else {
				logger.info("single audio is not be selected while adding a music");
				extent.extentLoggerFail("", "single audio is not  be selected while adding a music");
			}

			click(IOSHipiCreateVideoPage.objiosNoInReplaceSong, "Can not select the song");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInEditVideo, "Cross Icon");
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T564(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T564_Logged in user - Check Layout of music screen");
			System.out.println("T564_Logged in user - Check Layout of music screen");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Hindi songs", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "place holder");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objCloseIconInCreatorPage, "Cross Icon");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T576(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T576_Logged in user- Check if user selected sound can be remove till the time he has not recorded anything.");
			System.out.println("T576_Logged in user- Check if user selected sound can be remove till the time he has not recorded anything.");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			Swipe("UP", 1);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Song Selected")) {
				logger.info("Song is seletecd in the create video screen");
				extent.extentLoggerPass("", "Song is seletecd in the create video screen");
			} else {
				logger.info("Song is not seletecd in the create video screen");
				extent.extentLoggerFail("", "Song is not seletecd in the create video screen");
			}
			String ExpectedSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			waitTime(3000);
			System.out.println(ExpectedSong);
			click(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			PartialSwipe_ios("UP", 2);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objios2PlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace Song");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosYesTheReplaceTheSong, "Yes Replace Song");
			waitTime(3000);
			String ActualSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			System.out.println(ActualSong);
			if (ExpectedSong.equalsIgnoreCase(ActualSong)) {
				logger.info("User not able to replace the already added song");
				extent.extentLoggerFail("", "User not able to replace the already added song");
			} else {
				logger.info("User is able to replace the already added song");
				extent.extentLoggerPass("", "User is able to replace the already added song");
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			click(IOSHipiCreateVideoPage.objioscancelthesonginvideoeditscreen, "cancel the song");
			if (verifyElementExist(IOSHipiCreateVideoPage.objioscancelthesonginvideoeditscreen, "cancel the song")) {
				logger.info("User is able to see the music");
				extent.extentLoggerFail("", "User is able to see the music");
			} else {
				logger.info("User is not able to see the music");
				extent.extentLoggerPass("", "User is not able to see the music");
			}
			click(IOSHipiCreateVideoPage.objiosBackButtonInvideoPage, "Back Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	// ---creator--------------p2---------jan-27-----------------------------------------------

	// 31/12/21//
	// k===============================================creator=P2==================================================

	public void Creator_T501(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T501_Logged in user -  Check 'Video Creation Screen' options are present on RIGHT section - Layer");
			System.out.println("T501_Logged in user -  Check 'Video Creation Screen' options are present on RIGHT section - Layer");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			Dimension size = getDriver().manage().window().getSize();
			int width = size.width / 2;
			System.out.println(width);
			WebElement filters = findElement(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"));
			int filtersX = filters.getLocation().getX();
			System.out.println(filtersX);
			if (width < filtersX) {
				logger.info("filters Icon is displayed in Right  section of Video Creation Screen");
				extent.extentLoggerPass("", "filters Icon is displayed in Right  section of Video Creation Screen");
			} else {
				logger.info("filters Icon is not displayed in Right  section of Video Creation Screen");
				extent.extentLoggerFail("", "filters Icon is not displayed in Right  section of Video Creation Screen");
			}
			WebElement speed = findElement(IOSHipiCreateVideoPage.videoCreationScreenIcons("speed"));
			int speedX = speed.getLocation().getX();
			if (width < speedX) {
				logger.info("speed Icon is displayed in Right  section of Video Creation Screen");
				extent.extentLoggerPass("", "speed Icon is displayed in Right  section of Video Creation Screen");
			} else {
				logger.info("speed Icon is not displayed in Right  section of Video Creation Screen");
				extent.extentLoggerFail("", "speed Icon is not displayed in Right  section of Video Creation Screen");
			}
			WebElement magic_wand = findElement(IOSHipiCreateVideoPage.videoCreationScreenIcons("magic_wand"));
			int magic_wandX = magic_wand.getLocation().getX();
			if (width < magic_wandX) {
				logger.info("magic_wand Icon is displayed in Right  section of Video Creation Screen");
				extent.extentLoggerPass("", "magic_wand Icon is displayed in Right  section of Video Creation Screen");
			} else {
				logger.info("magic_wand Icon is not displayed in Right  section of Video Creation Screen");
				extent.extentLoggerFail("",
						"magic_wand Icon is not displayed in Right  section of Video Creation Screen");
			}
			WebElement timer = findElement(IOSHipiCreateVideoPage.videoCreationScreenIcons("timer"));
			int timerX = timer.getLocation().getX();
			if (width < timerX) {
				logger.info("timer Icon is displayed in Right  section of Video Creation Screen");
				extent.extentLoggerPass("", "timer Icon is displayed in Right  section of Video Creation Screen");
			} else {
				logger.info("timer Icon is not displayed in Right  section of Video Creation Screen");
				extent.extentLoggerFail("", "timer Icon is not displayed in Right  section of Video Creation Screen");
			}
			WebElement flash = findElement(IOSHipiCreateVideoPage.videoCreationScreenIcons("flash"));
			int flashX = flash.getLocation().getX();
			if (width < flashX) {
				logger.info("flash Icon is displayed in Right  section of Video Creation Screen");
				extent.extentLoggerPass("", "flash Icon is displayed in Right  section of Video Creation Screen");
			} else {
				logger.info("flash Icon is not displayed in Right  section of Video Creation Screen");
				extent.extentLoggerFail("", "flash Icon is not displayed in Right  section of Video Creation Screen");
			}
			WebElement flip = findElement(IOSHipiCreateVideoPage.videoCreationScreenIcons("flip"));
			int flipX = flip.getLocation().getX();
			if (width < flipX) {
				logger.info("flip Icon is displayed in Right  section of Video Creation Screen");
				extent.extentLoggerPass("", "flip Icon is displayed in Right  section of Video Creation Screen");
			} else {
				logger.info("flip Icon is not displayed in Right  section of Video Creation Screen");
				extent.extentLoggerFail("", "flip Icon is not displayed in Right  section of Video Creation Screen");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 31/12/21//
	// k===============================================creator=P2==================================================

	public void Creator_T503(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T503_Logged in user - Check 'Video Creation Screen' options are present on BOTTOM section - Layer3");
			System.out.println("T503_Logged in user - Check 'Video Creation Screen' options are present on BOTTOM section - Layer3");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			WebElement RecordButton = findElement(IOSHipiCreateVideoPage.iosRecordButon);
			int RecordButtonY = RecordButton.getLocation().getY();
			System.out.println(RecordButtonY);
			WebElement Time_15s = findElement(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn("15s"));
			int Time_15sY = Time_15s.getLocation().getY();
			System.out.println(Time_15sY);
			if (RecordButtonY < Time_15sY) {
				logger.info("15s Creation Time displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerPass("", "15s Creation Time displayed in Bottom section of Video Creation Screen");
			} else {
				logger.info("15s Creation Time not displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerFail("",
						"15s Creation Time not displayed in Bottom section of Video Creation Screen");
			}
			WebElement Time_30s = findElement(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn("30s"));
			int Time_30sY = Time_30s.getLocation().getY();
			System.out.println(Time_30sY);
			if (RecordButtonY < Time_30sY) {
				logger.info("30s Creation Time displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerPass("", "30s Creation Time displayed in Bottom section of Video Creation Screen");
			} else {
				logger.info("30s Creation Time not displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerFail("",
						"30s Creation Time not displayed in Bottom section of Video Creation Screen");
			}
			WebElement Time_45s = findElement(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn("45s"));
			int Time_45sY = Time_45s.getLocation().getY();
			System.out.println(Time_45sY);
			if (RecordButtonY < Time_45sY) {
				logger.info("45s Creation Time displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerPass("", "45s Creation Time displayed in Bottom section of Video Creation Screen");
			} else {
				logger.info("45s Creation Time not displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerFail("",
						"45s Creation Time not displayed in Bottom section of Video Creation Screen");
			}
			WebElement Time_60s = findElement(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn("60s"));
			int Time_60sY = Time_60s.getLocation().getY();
			System.out.println(Time_60sY);
			if (RecordButtonY < Time_60sY) {
				logger.info("60s Creation Time displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerPass("", "60s Creation Time displayed in Bottom section of Video Creation Screen");
			} else {
				logger.info("60s Creation Time not displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerFail("",
						"60s Creation Time not displayed in Bottom section of Video Creation Screen");
			}
			WebElement Time_90s = findElement(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn("90s"));
			int Time_90sY = Time_90s.getLocation().getY();
			System.out.println(Time_90sY);
			if (RecordButtonY < Time_90sY) {
				logger.info("90s Creation Time displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerPass("", "90s Creation Time displayed in Bottom section of Video Creation Screen");
			} else {
				logger.info("90s Creation Time not displayed in Bottom section of Video Creation Screen");
				extent.extentLoggerFail("",
						"90s Creation Time not displayed in Bottom section of Video Creation Screen");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon");
			waitTime(3000);
		}

	}

	// 03/1/21//
	// k===============================================creator=P2==================================================

	public void Creator_T573(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T573_Logged in user - Check for searched record, user is able to see rails just below the search bar");
			System.out.println("T573_Logged in user - Check for searched record, user is able to see rails just below the search bar");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds Icon");
			waitTime(2000);
			WebElement search = findElement(IOSHipiCreateVideoPage.objiosSearchBtnInSounds);
			int searchY = search.getLocation().getY();
			System.out.println(searchY);
			WebElement Rails = findElement(IOSHipiCreateVideoPage.objiosPlayButtonInSoundsScreen);
			int RailsY = Rails.getLocation().getY();
			System.out.println(RailsY);
			if (searchY < RailsY) {
				logger.info("User able to see rails just below the search bar ");
				extent.extentLoggerPass("", "User able to see rails just below the search bar ");
			} else {
				logger.info("User not able to see rails just below the search bar ");
				extent.extentLoggerFail("", "User not able to see rails just below the search bar ");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}
//03/1/21// k===============================================creator=P2==================================================	

	public void Creator_T577(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T577_Logged in user - Check if user is able to view rails and segments");
			System.out.println("T577_Logged in user - Check if user is able to view rails and segments");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds Icon");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 2);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosPlayButtonInSoundsScreen, "Play Button")) {
				logger.info("User able to view  rails and segments");
				extent.extentLoggerPass("", "User able to view  rails and segments");
			} else {
				logger.info("User not able to view  rails and segments");
				extent.extentLoggerFail("", "User not able to view  rails and segments");
			}
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon");
			waitTime(2000);
		}
	}

	// 04/1/21//
	// k===============================================creator=P2==================================================

	public void Creator_T602(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T602_Logged in user - Check layout of filter screen");
			System.out.println("T602_Logged in user - Check layout of filter screen");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "filters Icon");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.filtersTypes("New "), "New tab")) {
				logger.info("Layout of filter screen is displayed");
				extent.extentLoggerPass("", "Layout of filter screen is displayed");
			} else {
				logger.info("Layout of filter screen is not displayed");
				extent.extentLoggerFail("", "Layout of filter screen is not displayed");
			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "Cross Icon");
			waitTime(2000);
		}

	}

	// 04/1/21//
	// k===============================================creator=P2==================================================

	public void Creator_T608(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T608_Logged in user - Check if user is redirected to Video creation screen, when tapped anywhere on (or) above the 'filter section'");
			System.out.println("T608_Logged in user - Check if user is redirected to Video creation screen, when tapped anywhere on (or) above the 'filter section'");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), userType);
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button")) {
				logger.info(
						"User able to redirect to Video creation screen, when tapped anywhere on (or) above the 'filter section'");
				extent.extentLoggerPass("",
						"User able to redirect to Video creation screen, when tapped anywhere on (or) above the 'filter section'");
			} else {
				logger.info(
						"User not able to redirect to Video creation screen, when tapped anywhere on (or) above the 'filter section'");
				extent.extentLoggerFail("",
						"User not able to redirect to Video creation screen, when tapped anywhere on (or) above the 'filter section'");
			}
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "Cross Icon");
			waitTime(2000);
		}

	}

//			public void tapiOS_Middlepoit() {
//				TouchAction Touch = new TouchAction<>(iOSDriver);
//				Dimension size = getDriver().manage().window().getSize();
//				int Height = size.height/2;
//				int Width = size.width/2;
//				Touch.tap(PointOption.point(Height, Width)).perform();
//			}

	// 04/01/21//
	// k===============================================creator=P2==================================================

	public void Creator_T585(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T585_Logged in user - Check layout of Sound Screen");
			System.out.println("T585_Logged in user - Check layout of Sound Screen");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSoundTitleInSoundsScreen, "Sound Title");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search Field");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 2);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlayButtonInSoundsScreen, "Rail");
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "Cross Icon");
			waitTime(2000);
		}
	}

// k===============================================creator=P2  end==================================================		

	// 06/12/2021k=============================================== Creator
	// =P0==================================================
//	public void Creator_T501(String userType) throws Exception {	
//
//		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
//			extent.HeaderChildNode("T501_Logged in user -  Check 'Video Creation Screen' options are present on RIGHT section - Layer");
//			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
//			waitTime(3000);
//			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("timer"), "timer");
//			waitTime(3000);
//			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("magic_wand"), "magic_wand");
//			waitTime(3000);
//			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("speed"), "speed");
//			waitTime(3000);
//			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "filters");
//			waitTime(3000);
//			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("flash"), "flash");
//			waitTime(3000);
//			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("flip"), "flip");
//			waitTime(3000);
//			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close icon");
//			waitTime(3000);
//		}
//	}

	// 06/12/2021k=============================================== Creator
	// =P0==================================================

	public void Creator_T603(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T603_Logged in user - Check if user is able to tap on different filter categories");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			verifyElementPresent(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "filters");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back button");
			waitTime(3000);

		}
	}

//26-03-2022
	public void Creator_T524_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T524_Logged in user - Check if user is able to see beauty mode is disabled  by default ");
			System.out
					.println("T524_Logged in user - Check if user is able to see beauty mode is disabled  by default ");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosBeautyModeCTA, "beauty mode is disabled")) {
				logger.info("user is able to see beauty mode is disabled  by default ");
				extent.extentLoggerPass("", "user is able to see beauty mode is disabled  by default ");
			} else {
				logger.info("user is not able to see beauty mode is disabled  by default ");
				extent.extentLoggerFail("", "user is not able to see beauty mode is disabled  by default ");
			}
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back button");
			waitTime(3000);
		}

	}

	public void Creator_T525_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T525_Logged in user- Check by tapping on beauty mode,user is able to set beauty mode to OFF and overlay disappear");
			System.out.println(
					"T525_Logged in user- Check by tapping on beauty mode,user is able to set beauty mode to OFF and overlay disappear");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosBeautyModeCTA, "beauty mode is disabled")) {
				logger.info("user is able to see beauty mode is disabled  by default ");
				extent.extentLoggerPass("", "user is able to see beauty mode is disabled  by default ");
			} else {
				logger.info("user is not able to see beauty mode is disabled  by default ");
				extent.extentLoggerFail("", "user is not able to see beauty mode is disabled  by default ");
			}
			click(IOSHipiCreateVideoPage.objiosBeautyModeCTA, "beauty mode is disabled");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosBeautyModeSelected, "beauty mode is On")) {
				logger.info("By tapping on beauty mode,user is able to set beauty mode to On");
				extent.extentLoggerPass("", "By tapping on beauty mode,user is able to set beauty mode to On");
			} else {
				logger.info("By tapping on beauty mode,user is not able to set beauty mode to On");
				extent.extentLoggerFail("", "By tapping on beauty mode,user is not able to set beauty mode to On");
			}
			click(IOSHipiCreateVideoPage.objiosBeautyModeSelected, "beauty mode enable");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosBeautyModeCTA, "beauty mode is disabled")) {
				logger.info(" By tapping on beauty mode,user is able to set beauty mode to OFF and overlay disappear");
				extent.extentLoggerPass("",
						" By tapping on beauty mode,user is able to set beauty mode to OFF and overlay disappear");
			} else {
				logger.info(
						" By tapping on beauty mode,user is not able to set beauty mode to OFF and overlay disappear");
				extent.extentLoggerFail("",
						" By tapping on beauty mode,user is not able to set beauty mode to OFF and overlay disappear");
			}
		}

	}

	public void Creator_T526_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T526_Logged in user-Check if the user is able to pause video");
			System.out.println("T526_Logged in user-Check if the user is able to pause video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording started")) {
				logger.info("user is able to start recording by tapping on record button ");
				extent.extentLoggerPass("", "user is able to start recording by tapping on record button ");
			} else {
				logger.info("user is not able to start recording by tapping on record button ");
				extent.extentLoggerFail("", "user is not able to start recording by tapping on record button ");
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosrecordbtnNotSelected, "Recording paused")) {
				logger.info("user is able to stop recording by tapping on record pause button ");
				extent.extentLoggerPass("", "user is able to stop recording by tapping on record pause button ");
			} else {
				logger.info("user is not able to stop recording by tapping on record pause button ");
				extent.extentLoggerFail("", "user is not able to stop recording by tapping on record pause button ");
			}

			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross icon");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits");
			waitTime(3000);

		}

	}

	public void Creator_T527_P1(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T527_Logged in user- Check if the user is able to resume a paused video");
			System.out.println("T527_Logged in user- Check if the user is able to resume a paused video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording started")) {
				logger.info("user is able to start recording by tapping on record button ");
				extent.extentLoggerPass("", "user is able to start recording by tapping on record button ");
			} else {
				logger.info("user is not able to start recording by tapping on record button ");
				extent.extentLoggerFail("", "user is not able to start recording by tapping on record button ");
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosrecordbtnNotSelected, "Recording paused")) {
				logger.info("user is able to stop recording by tapping on record pause button ");
				extent.extentLoggerPass("", "user is able to stop recording by tapping on record pause button ");
			} else {
				logger.info("user is not able to stop recording by tapping on record pause button ");
				extent.extentLoggerFail("", "user is not able to stop recording by tapping on record pause button ");
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording started")) {
				logger.info("User is able to resume a paused video recording and recording should start again.");
				extent.extentLoggerPass("",
						"User is able to resume a paused video recording and recording should start again.");
			} else {
				logger.info("User is not able to resume a paused video recording and recording should start again.");
				extent.extentLoggerFail("",
						"User is not able to resume a paused video recording and recording should start again.");
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}

	}

	public void Creator_T528_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T528_Logged in user-  Check the default video speed is set to 1x");
			System.out.println("T528_Logged in user-  Check the default video speed is set to 1x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed icon in recording screen");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_1x_selected, "1x speed selected")) {
				logger.info("By default video speed is set to 1x");
				extent.extentLoggerPass("", "By default video speed is set to 1x");
			} else {
				logger.info("By default video speed is not set to 1x");
				extent.extentLoggerFail("", "By default video speed is not set to 1x");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross icon");
			waitTime(3000);

		}

	}

	public void Creator_T529_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T529_Logged in user - Check if user is able to end a video and verify the user is navigated to 'Video Edit Screen'");
			System.out.println(
					"T529_Logged in user - Check if user is able to end a video and verify the user is navigated to 'Video Edit Screen'");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, 150, "Finish");
			click(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Finish");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Video edit screen")) {

				logger.info("user is able to end a video and verify the user is navigated to 'Video Edit Screen'");
				extent.extentLoggerPass("",
						"user is able to end a video and verify the user is navigated to 'Video Edit Screen'");
			} else {
				logger.info("user is not able to end a video and verify the user is navigated to 'Video Edit Screen'");
				extent.extentLoggerFail("",
						"user is not able to end a video and verify the user is navigated to 'Video Edit Screen'");
			}
			BackToFeedScreenFromVideoPostScreen();
			waitTime(3000);

		}

	}

	public void Creator_T530_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T530_Logged in user- Check if user is able to view the duration seeking bar and time that is recorded and remaining");
			System.out.println(
					"T530_Logged in user- Check if user is able to view the duration seeking bar and time that is recorded and remaining");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record button");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTotalSeekBarTopofScreen,
					"Seek bar at top while recording");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosOnRecTimeAtBottomofScreen,
					"Recorded time below the record button");

			if (verifyElementExist(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording screen")) {
				click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording screen");
				waitTime(2000);

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T533_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T533_Logged in user- Check if user is able to select other 'Add timer' options to schedule a video based on selected add timer option [3s,5s,10s]");
			System.out.println(
					"T533_Logged in user- Check if user is able to select other 'Add timer' options to schedule a video based on selected add timer option [3s,5s,10s]");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Timer"), "Timer");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtn("15s"), "15s");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtnSelectedTrue("15s"),
					"15s selected");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(3000);

		}
	}

	
	public void Creator_T536_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T536_Logged in user  - Check if user is able to add pre selected [effect, filter, or sound]  before scheduling ADD timer");
			System.out.println(
					"T536_Logged in user  - Check if user is able to add pre selected [effect, filter, or sound]  before scheduling ADD timer");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st Effects");
				waitTime(15000);
				waitForElementDisplayediOS(IOSHipiCreateVideoPage.DownloadedFilterOrEffets(1), 200, "1st filterOrEffect");
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.EffectsSelectedTrue, "Effects selected");
					break;
				}

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st filter");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Filter selected");
					break;
				}

			}

			tapiOSAtCenterOfScrreen(1);

			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Timer"), "Timer");
			waitTime(5000);
			click(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtn("15s"), "15s");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtnSelectedTrue("15s"),
					"15s selected")) {
				logger.info("User is able to add pre selected [effect, filter, or sound] before scheduling ADD timer");
				extent.extentLoggerPass("",
						"User is able to add pre selected [effect, filter, or sound] before scheduling ADD timer");
			}
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(3000);

		}
	}

	
	public void Creator_T537_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T537_Logged in user - check the pre selected features [effect, filter, or sound] are applied on the video");
			System.out.println(
					"T537_Logged in user - check the pre selected features [effect, filter, or sound] are applied on the video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st Effects");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.EffectsSelectedTrue, "Effects selected");
					break;
				}

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st filter");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Filter selected");
					break;
				}

			}

			tapiOSAtCenterOfScrreen(1);

			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosSoundTitleInSoundsScreen, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Timer"), "Timer");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtn("15s"), "15s");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtnSelectedTrue("15s"),
					"15s selected")) {
				logger.info("User is able to add pre selected [effect, filter, or sound] before scheduling ADD timer");
				extent.extentLoggerPass("",
						"User is able to add pre selected [effect, filter, or sound] before scheduling ADD timer");
			}
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 50, "Next in edit screen");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Filter selected");
			tapiOSAtCenterOfScrreen(1);

			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.EffectsSelectedTrue, "Effects selected");
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			String Musicname = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			if (!Musicname.equalsIgnoreCase("sounds")) {
				logger.info("Pre selected features [effect, filter, or sound] should be applied on the video");
				extent.extentLoggerPass("",
						"Pre selected features [effect, filter, or sound] should be applied on the video");
			} else {
				logger.info("");
				extent.extentLoggerFail("",
						"Pre selected features [effect, filter, or sound] should be applied on the video");
			}

			BackToFeedScreenFromVideoPostScreen();

		}
	}
	
	

	public void Creator_T541_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T541_Logged in user - Check defaulted video 'creation time' is set to 15s and highlighted with white underscore ");
			System.out.println(
					"T541_Logged in user - Check defaulted video 'creation time' is set to 15s and highlighted with white underscore ");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInBelowRecordingBtnSelectedTrue("15s"),
					"15s duration")) {
				logger.info("Defaulted video 'creation time' is set to 15s ");
				extent.extentLoggerPass("", "Defaulted video 'creation time' is set to 15s ");
			} else {
				logger.info("Defaulted video 'creation time' is not set to 15s ");
				extent.extentLoggerFail("", "Defaulted video 'creation time' is not set to 15s ");
			}

			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(3000);

		}
	}

	
	public void Creator_T545_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
            System.out.println();
			extent.HeaderChildNode(
					"T545_Logged in User - Check if user is able to select 'Add timer' in multiple clip segment");
			System.out.println(
					"T545_Logged in User - Check if user is able to select 'Add timer' in multiple clip segment");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Timer"), "Timer");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtn("15s"), "15s timer");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtnSelectedTrue("15s"),
					"15s timer selected true");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerCloseIcon, "Timer screen");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosrecordbtnSelected, 20, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Timer"), "Timer");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtn("10s"), "10s timer");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInAboveRecordingBtnSelectedTrue("10s"),
					"10s timer selected true");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerCloseIcon, "Timer screen");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosrecordbtnSelected, 20, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen("2"), "multiple segments")) {
				logger.info("User is  able to add timer in multiple clip segment");
				extent.extentLoggerPass("", "User is  able to add timer in multiple clip segment");
			} else {

				logger.info("User is not able to add timer in multiple clip segment");
				extent.extentLoggerFail("", "User is not able to add timer in multiple clip segment");

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}
	
	

	public void Creator_T546_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T546_Logged in user  - Check if user is able to view the single clip segment on the recording screen");
			System.out.println(
					"T546_Logged in user  - Check if user is able to view the single clip segment on the recording screen");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 25,
					"Next button in edit screen");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
					"Discard edits in discard pop up")) {
				click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
						"Discard edits in discard pop up");
				waitTime(3000);
			}
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosTotalSeekBarTopofScreen, "Single segments")) {
				logger.info("Video of single clip segment is created");
				extent.extentLoggerPass("", "Video of single clip segment is created");
			} else {

				logger.info("Video of single clip segment is not created");
				extent.extentLoggerFail("", "Video of single clip segment is not created");

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	
	public void Creator_T547_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T547_Logged in user  - Check if user is able to view multiple clip segments on the recording screen");
			System.out.println(
					"T547_Logged in user  - Check if user is able to view multiple clip segments on the recording screen");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen("2"), "multiple segments")) {
				logger.info("Video of multiple clip segment is created");
				extent.extentLoggerPass("", "Video of multiple clip segment is created");
			} else {

				logger.info("Video of multiple clip segment is not created");
				extent.extentLoggerFail("", "Video of multiple clip segment is not created");

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T548_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T548_Logged in user  - Check if last recorded clip in a multiple clip segment is not deleted when clicked on 'Keep'");
			System.out.println(
					"T548_Logged in user  - Check if last recorded clip in a multiple clip segment is not deleted when clicked on 'Keep'");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(3000);
			List<WebElement> ele = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments = ele.size();
			extent.extentLogger("", "the total segments of seek bars are " + totalSeekSegments);
			logger.info("the total segments of seek bars are " + totalSeekSegments);
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosClipSegmentDeleteButtonAtBottomofScreen, "Clip Segment Delete Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
					"Discard edits in discard pop up")) {
				click(IOSHipiCreateVideoPage.objKeepButtonInDiscardEditsPopUp, "Keep button in discard pop up");
				waitTime(3000);
			}

			String size = Integer.toString(totalSeekSegments);
			System.out.println(size);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen(size), "multiple segments")) {
				logger.info("last recorded clip in a multiple clip segment is not deleted when clicked on 'Keep'");
				extent.extentLoggerPass("",
						"last recorded clip in a multiple clip segment is not deleted when clicked on 'Keep'");
			} else {

				logger.info("last recorded clip in a multiple clip segment is deleted when clicked on 'Keep'");
				extent.extentLoggerFail("",
						"last recorded clip in a multiple clip segment is deleted when clicked on 'Keep'");

			}
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T549_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T549_Logged in user  - Check if last recorded clip in a multiple clip segment is deleted when clicked on 'Discard Edits'");
			System.out.println(
					"T549_Logged in user  - Check if last recorded clip in a multiple clip segment is deleted when clicked on 'Discard Edits'");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(3000);
			List<WebElement> ele = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments = ele.size();
			extent.extentLogger("", "the total segments of seek bars are " + totalSeekSegments);
			logger.info("the total segments of seek bars are " + totalSeekSegments);
			waitTime(2000);
			String size = Integer.toString(totalSeekSegments);
			System.out.println(size);
			click(IOSHipiCreateVideoPage.objiosClipSegmentDeleteButtonAtBottomofScreen, "Clip Segment Delete Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
					"Discard edits in discard pop up")) {
				click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discard button in discard pop up");
				waitTime(5000);
			}
			List<WebElement> ele1 = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments1 = ele1.size();
			String size1 = Integer.toString(totalSeekSegments1);
			System.out.println(size1);
			if (!verifyElementExist(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen(size), "multiple segments")) {
				logger.info("Latest recorded clip is deleted after user select 'Discard edits'on popup");
				extent.extentLoggerPass("",
						"Latest recorded clip is deleted after user select 'Discard edits'on popup");
			} else {

				logger.info("Latest recorded clip is not deleted after user select 'Discard edits'on popup");
				extent.extentLoggerFail("",
						"Latest recorded clip is not deleted after user select 'Discard edits'on popup");

			}
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T550_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T550_Logged in user  - Check if recorded clip is not deleted when clicked on 'Keep' [Recording completed]");
			System.out.println(
					"T550_Logged in user  - Check if recorded clip is not deleted when clicked on 'Keep' [Recording completed]");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 25,
					"Next button in edit screen");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
					"Discard edits in discard pop up")) {
				click(IOSHipiCreateVideoPage.objKeepButtonInDiscardEditsPopUp, "Keep button in discard pop up");
				waitTime(3000);
			}
			List<WebElement> ele1 = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments1 = ele1.size();

			extent.extentLogger("", "the total segments of seek bars are " + totalSeekSegments1);
			logger.info("the total segments of seek bars are " + totalSeekSegments1);
			waitTime(2000);
			if (!verifyElementExist(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen("2"), "multiple segments")) {
				logger.info("recorded clip is not deleted when clicked on 'Keep' [Recording completed]");
				extent.extentLoggerPass("",
						"recorded clip is not deleted when clicked on 'Keep' [Recording completed]");
			} else {

				logger.info("recorded clip is deleted when clicked on 'Keep' [Recording completed]");
				extent.extentLoggerFail("", "recorded clip is deleted when clicked on 'Keep' [Recording completed]");

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T552_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T552_Logged in user  - Check if recording clip is not deleted when clicked on 'No' [Recording not completed]");
			System.out.println(
					"T552_Logged in user  - Check if recording clip is not deleted when clicked on 'No' [Recording not completed]");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(3000);
			List<WebElement> ele = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments = ele.size();
			extent.extentLogger("", "the total segments of seek bars are " + totalSeekSegments);
			logger.info("the total segments of seek bars are " + totalSeekSegments);
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosClipSegmentDeleteButtonAtBottomofScreen, "Clip Segment Delete Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
					"Discard edits in discard pop up")) {
				click(IOSHipiCreateVideoPage.objKeepButtonInDiscardEditsPopUp, "Keep button in discard pop up");
				waitTime(3000);
			}

			String size = Integer.toString(totalSeekSegments);
			System.out.println(size);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen(size), "multiple segments")) {
				logger.info("Clip is not deleted as user selected 'Keep' on Discard your edits popup.");
				extent.extentLoggerPass("", "Clip is not deleted as user selected 'Keep' on Discard your edits popup.");
			} else {

				logger.info("Clip is deleted as user selected 'Keep' on Discard your edits popup.");
				extent.extentLoggerFail("", "Clip is deleted as user selected 'Keep' on Discard your edits popup.");

			}
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T553_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T553_Logged in user  - Check if recording clip is deleted when clicked on 'Discard Edits' [Recording not completed]");
			System.out.println(
					"T553_Logged in user  - Check if recording clip is deleted when clicked on 'Discard Edits' [Recording not completed]");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "record");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(3000);
			List<WebElement> ele = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments = ele.size();
			extent.extentLogger("", "the total segments of seek bars are " + totalSeekSegments);
			logger.info("the total segments of seek bars are " + totalSeekSegments);
			waitTime(2000);
			String size = Integer.toString(totalSeekSegments);
			System.out.println(size);
			click(IOSHipiCreateVideoPage.objiosClipSegmentDeleteButtonAtBottomofScreen, "Clip Segment Delete Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
					"Discard edits in discard pop up")) {
				click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discard button in discard pop up");
				waitTime(5000);
			}
			List<WebElement> ele1 = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int totalSeekSegments1 = ele1.size();
			String size1 = Integer.toString(totalSeekSegments1);
			System.out.println(size1);
			if (!verifyElementExist(IOSHipiCreateVideoPage.objiosSeekBarTopofScreen(size), "multiple segments")) {
				logger.info("Clip is deleted if user selects  'Discard Edits' on delete popup.");
				extent.extentLoggerPass("", "Clip is deleted if user selects  'Discard Edits' on delete popup.");
			} else {

				logger.info("Clip is not deleted if user selects  'Discard Edits' on delete popup.");
				extent.extentLoggerFail("", "Clip is not deleted if user selects  'Discard Edits' on delete popup.");

			}
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T561_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T561_Logged in user-  Check the default video speed is set to 1x");
			System.out.println("T561_Logged in user-  Check the default video speed is set to 1x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed icon in recording screen");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_1x_selected, "1x speed selected")) {
				logger.info("By default video speed is set to 1x");
				extent.extentLoggerPass("", "By default video speed is set to 1x");
			} else {
				logger.info("By default video speed is not set to 1x");
				extent.extentLoggerFail("", "By default video speed is not set to 1x");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross icon");
			waitTime(3000);
		}
	}

	public void Creator_T563_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T563_Logged in User - Check if user is able to select other video speed options");
			System.out.println("T563_Logged in User - Check if user is able to select other video speed options");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn("90s"), "90s creation time selected");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed icon in recording screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_1x_selected, "1x Selected by default");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed icon in recording screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed icon in recording screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosvideospeed_2x, "2x speed");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record");
			waitTime(2000);
			
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosrecordbtnSelected, "Recording")) {
				logger.info("User recording is resumed as next segment and recording is progressed with new speed");
				extent.extentLoggerPass("",
						"User recording is resumed as next segment and recording is progressed with new speed");
			} else {

				logger.info("User recording is not resumed as next segment and recording is progressed with new speed");
				extent.extentLoggerFail("",
						"User recording is not resumed as next segment and recording is progressed with new speed");
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record");
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T575_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T575_Logged in user- Check if user is able to add a music");
			System.out.println("T575_Logged in user- Check if user is able to add a music");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			String addedSound = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			extent.extentLogger("", "the added music name is :" + addedSound);
			logger.info("the added music name is :" + addedSound);
			if (!addedSound.equalsIgnoreCase("sounds")) {
				logger.info("User able to add a music");
				extent.extentLoggerPass("", "User able to add a music");
			} else {
				logger.info("User not able to add a music");
				extent.extentLoggerFail("", "User not able to add a music");
			}
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "back button");
			waitTime(3000);

		}
	}

	public void Creator_T579_P1(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T579_Logged in user-Check if sound duration is greater than the selected Video duration, the user will be redirected to the Trimming Screen and trim icon is enabled");
			System.out.println(
					"T579_Logged in user-Check if sound duration is greater than the selected Video duration, the user will be redirected to the Trimming Screen and trim icon is enabled");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(6000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objTrimLeftThumb, "Trim icon enabled")) {
				logger.info(
						"User is redirected to the Trimming Screen and trim icon should be enabled when Sound duration is greater than the selected Video duration");
				extent.extentLoggerPass("",
						"User is redirected to the Trimming Screen and trim icon should be enabled when Sound duration is greater than the selected Video duration");

			} else {
				logger.info(
						"User is not redirected to the Trimming Screen and trim icon should be enabled when Sound duration is greater than the selected Video duration");
				extent.extentLoggerFail("",
						"User is not redirected to the Trimming Screen and trim icon should be enabled when Sound duration is greater than the selected Video duration");
			}
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "back button");
			waitTime(3000);
		}
	}

	// SwipeHashtagRail
	public void Creator_T580_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T580_Logged in user - Check if user is able to trim sound from trimming screen and able to apply it on a video");
			System.out.println(
					"T580_Logged in user - Check if user is able to trim sound from trimming screen and able to apply it on a video");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(5000);
			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeBeforetrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time Before trim : " + timeBeforetrim);
			extent.extentLogger("", "the time Before trim : " + timeBeforetrim);

			WebElement ele = findElement(IOSHipiCreateVideoPage.objTrimLeftThumb);
			String y = getAttributValue("y", IOSHipiCreateVideoPage.objTrimLeftThumb);
			int Y = Integer.parseInt(y);
			SwipeAnElementiOS(ele, 400, Y);
			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeAftertrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time After trim : " + timeAftertrim);
			extent.extentLogger("", "the time After trim : " + timeAftertrim);
			if (!timeAftertrim.equals(timeBeforetrim)) {
				logger.info("User able to trim sound from trimming screen and should be able to apply it on video");
				extent.extentLoggerPass("",
						"User able to trim sound from trimming screen and should be able to apply it on video");

			} else {
				logger.info("User not able to trim sound from trimming screen and should be able to apply it on video");
				extent.extentLoggerFail("",
						"User not able to trim sound from trimming screen and should be able to apply it on video");
			}
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "back button");
			waitTime(3000);

		}
	}

	public void Creator_T582_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T582_Logged in user - Check if user is able to view video newly created by music");
			System.out.println("T582_Logged in user - Check if user is able to view video newly created by music");
			
			String soundName = "Chandigarh Mein";
			String[] soundName1 = soundName.split(" ");
			System.out.println(soundName1[0]);
			String ChoosenSoundName = null;
			CreateVideo("Yes", soundName, "No");
			waitTime(2000);
			OpenRecentlyPostedVideoOrLastCreatedVideo();
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound in Posted video")) {

				ChoosenSoundName = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);

			}
			System.out.println(ChoosenSoundName);
			String[] ChoosenSoundName2 = ChoosenSoundName.split(" ");
			System.out.println(ChoosenSoundName2[0]);
			
			if (soundName1[0].equalsIgnoreCase(ChoosenSoundName2[0].trim())) {
				logger.info("user able to view video newly created by music");
				extent.extentLoggerPass("", "user able to view video newly created by music");
			} else {
				logger.info("user not able to view video newly created by music");
				extent.extentLoggerFail("", "user not able to view video newly created by music");
			}
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "back button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
		}
	}

	public void Creator_T591_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T591_Logged in user - Check if user is able to drag the trimmed sound on the video");
			System.out.println("T591_Logged in user - Check if user is able to drag the trimmed sound on the video");

			Creator_Video_TillEditScreen("No", "No", "Yes", "Chandigarh Mein", "Yes", "No");
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Trim"), "Trim icon in Edit screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objTrimMusicInTrimPopUp, "Trim Music");
			waitTime(3000);
//			WebElement ele=findElement(IOSHipiCreateVideoPage.objiosTrim_frame1);
//			int x=ele.getLocation().getX();
//			String y=getAttributValue("y", IOSHipiCreateVideoPage.objiosTrim_frame1);
//			int Y=Integer.parseInt(y);
//			SwipeAnElementiOS(ele,400,Y);
//			waitTime(3000);
//			int newx=ele.getLocation().getX();
//			if(newx==x) {
//				logger.info("");
//				extent.extentLoggerFail("", "");
//			}else {
//				logger.info("");
//				extent.extentLoggerFail("", "");
//				
//			}

			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeBeforetrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time Before trim : " + timeBeforetrim);
			extent.extentLogger("", "the time Before trim : " + timeBeforetrim);

			WebElement ele = findElement(IOSHipiCreateVideoPage.objTrimLeftThumb);
			String y = getAttributValue("y", IOSHipiCreateVideoPage.objTrimLeftThumb);
			int Y = Integer.parseInt(y);
			SwipeAnElementiOS(ele, 500, Y);
			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeAftertrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time After trim : " + timeAftertrim);
			extent.extentLogger("", "the time After trim : " + timeAftertrim);
			if (!timeAftertrim.equals(timeBeforetrim)) {
				logger.info("user is able to drag the trimmed sound on the video");
				extent.extentLoggerPass("", "user is able to drag the trimmed sound on the video");

			} else {
				logger.info("user is not able to drag the trimmed sound on the video");
				extent.extentLoggerFail("", "user is not able to drag the trimmed sound on the video");
			}
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace song?")) {
				click(IOSHipiCreateVideoPage.objiosYesTheReplaceTheSong, "Yes button");
				waitTime(2000);
			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T592_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T592_Logged in user - Check if user is able to play the trimmed sound");
			System.out.println("T592_Logged in user - Check if user is able to play the trimmed sound");

			Creator_Video_TillEditScreen("No", "No", "Yes", "Chandigarh Mein", "Yes", "No");
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Trim"), "Trim icon in Edit screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objTrimMusicInTrimPopUp, "Trim Music");
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeBeforetrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time Before trim : " + timeBeforetrim);
			extent.extentLogger("", "the time Before trim : " + timeBeforetrim);

			WebElement ele = findElement(IOSHipiCreateVideoPage.objTrimLeftThumb);
			String y = getAttributValue("y", IOSHipiCreateVideoPage.objTrimLeftThumb);
			int Y = Integer.parseInt(y);
			SwipeAnElementiOS(ele, 500, Y);
			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeAftertrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time After trim : " + timeAftertrim);
			extent.extentLogger("", "the time After trim : " + timeAftertrim);
			if (!timeAftertrim.equals(timeBeforetrim)) {
				logger.info("user is able to drag the trimmed sound on the video");
				extent.extentLoggerPass("", "user is able to drag the trimmed sound on the video");

			} else {
				logger.info("user is not able to drag the trimmed sound on the video");
				extent.extentLoggerFail("", "user is not able to drag the trimmed sound on the video");
			}
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace song?")) {
				click(IOSHipiCreateVideoPage.objiosYesTheReplaceTheSong, "Yes button");
				logger.info("user is able to play the trimmed sound");
				extent.extentLoggerPass("", "user is able to play the trimmed sound");

			} else {
				logger.info("user is not able to play the trimmed sound");
				extent.extentLoggerFail("", "user is not able to play the trimmed sound");

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	
	
	public void Creator_T593_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T593_Logged in user - Check if user is able to post the video after applying the trimmed sound");
			System.out.println(
					"T593_Logged in user - Check if user is able to post the video after applying the trimmed sound");
			Creator_Video_TillEditScreen("No", "No", "Yes", "Chandigarh Mein", "Yes", "No");
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Trim"), "Trim icon in Edit screen");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objTrimMusicInTrimPopUp, "Trim Music");
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeBeforetrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time Before trim : " + timeBeforetrim);
			extent.extentLogger("", "the time Before trim : " + timeBeforetrim);

			WebElement ele = findElement(IOSHipiCreateVideoPage.objTrimLeftThumb);
			String y = getAttributValue("y", IOSHipiCreateVideoPage.objTrimLeftThumb);
			int Y = Integer.parseInt(y);
			SwipeAnElementiOS(ele, 500, Y);
			click(IOSHipiCreateVideoPage.objiosPlayPauseBtnInVideoEditScreen, "Pause in Trim section");
			waitTime(2000);
			String timeAftertrim = getText(IOSHipiCreateVideoPage.objiosTrimTimerAtLeft);
			logger.info("the time After trim : " + timeAftertrim);
			extent.extentLogger("", "the time After trim : " + timeAftertrim);
			if (!timeAftertrim.equals(timeBeforetrim)) {
				logger.info("user is able to drag the trimmed sound on the video");
				extent.extentLoggerPass("", "user is able to drag the trimmed sound on the video");

			} else {
				logger.info("user is not able to drag the trimmed sound on the video");
				extent.extentLoggerFail("", "user is not able to drag the trimmed sound on the video");
			}
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace song?")) {
				click(IOSHipiCreateVideoPage.objiosYesTheReplaceTheSong, "Yes button");
				logger.info("user is able to play the trimmed sound");
				extent.extentLoggerPass("", "user is able to play the trimmed sound");

			} else {
				logger.info("user is not able to play the trimmed sound");
				extent.extentLoggerFail("", "user is not able to play the trimmed sound");

			}

			waitTime(3000);

			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");

			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, 20, "Post Video");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post");
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 100,
					"video posted sucessfully")) {
				logger.info("Video posted successfully");
				extent.extentLoggerPass("", "Video posted successfully");
			} else {
				logger.info("Video posted successfully not displayed");
				extent.extentLoggerFail("", "Video posted successfully not displayed");
			}

		}

	}
	

	public void Creator_T596_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T596_Logged in user - Check if 'Microphone' icon is 'enabled' when video is created with some added sound but value id 0");
			System.out.println(
					"T596_Logged in user - Check if 'Microphone' icon is 'enabled' when video is created with some added sound but value id 0");
			
			Creator_Video_TillEditScreen("No", "No", "No", "No", "Yes", "No");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("Volume_"), "Volume icon in Edit screen");
			waitTime(3000);
			String volume = getText(IOSHipiCreateVideoPage.objiosVoulme_Percentage_InEditVideoScreen);
			extent.extentLogger("", "The microphone volume persentage is " + volume + "%");
			logger.info("The microphone volume persentage is " + volume + "%");
			click(IOSHipiCreateVideoPage.objiosVoulmeAdjustScreenInCreateVideo, "Tick mark");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	public void Creator_T603_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T603_Logged in user - Check if user is able to tap on different filter categories");
			System.out.println("T603_Logged in user - Check if user is able to tap on different filter categories");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosCategorySelectedgInFilterScreen("New"),
					"New category is selected by default");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosCategoryNotSelectedgInFilterScreen("Trending"), "Trending category");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosCategorySelectedgInFilterScreen("Trending"),
					"Trending category is selected")) {
				logger.info("User is able to tap on different filter categories");
				extent.extentLoggerPass("", "User is able to tap on different filter categories");

			} else {

				logger.info("User is not able to tap on different filter categories");
				extent.extentLoggerFail("", "User is not able to tap on different filter categories");
			}

			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(2000);

		}
	}

	@SuppressWarnings("unused")
	public void Creator_T604_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T604_Logged in user - Check if user is able to download filter, by tapping on download pin present on each filter");
			System.out.println(
					"T604_Logged in user - Check if user is able to download filter, by tapping on download pin present on each filter");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			for (int i = 1; i <= 5; i++) {
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosListOfDownloadedFilters, "Downloaded")) {
					List<WebElement> downlodedfilters = findElements(
							IOSHipiCreateVideoPage.objiosListOfDownloadedFilters);
					int total = downlodedfilters.size();
					extent.extentLogger("", "the total filter downloaded is :" + total);
					logger.info("the total filter downloaded is :" + total);
					if (total == 4) {

						for (int j = 1; j <= 4; j++) {
							WebElement curent = findElement(IOSHipiCreateVideoPage.objiosDownloadedFilters(3));
							int y = curent.getLocation().getY();
							System.out.println(y);
							SwipeRail(IOSHipiCreateVideoPage.objiosDownloadedFilters(3));
							waitTime(2000);

							click(IOSHipiCreateVideoPage.objiosFiltersNotDownloadedUnderAcategory(j), "FIrst filter ");
							waitTime(10000);
							click(IOSHipiCreateVideoPage.objiosDownloadedFilters(j + 1), "downloaded filter ");
							waitTime(2000);
							if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
									"downloaded filter seletion")) {
								extent.extentLoggerPass("",
										"user is able to download filter and able to add the filter to screen");
								logger.info("user is able to download filter and able to add the filter to screen");

							} else {
								extent.extentLoggerFail("",
										"user not able to download filter and able to add the filter to screen");
								logger.info("user not able to download filter and able to add the filter to screen");
							}
							break;
						}

					} else {
						int besidefilter = total + 1;
						System.out.println(besidefilter);
						if (verifyElementExist(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(besidefilter),
								" Filter beside downloaded filter")) {
							click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(besidefilter),
									" Filter beside downloaded filter ");
							waitTime(20000);
							WebElement bfilter = findElement(
									IOSHipiCreateVideoPage.objiosDownloadedFilters(besidefilter));
							tapiOS(bfilter, 1);
							waitTime(2000);
							click(IOSHipiCreateVideoPage.objiosDownloadedFilters(besidefilter),
									"downloaded new filter ");
							waitTime(2000);
							if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
									"downloaded filter seletion")) {
								extent.extentLoggerPass("",
										"user is able to download filter and able to add the filter to screen");
								logger.info("user is able to download filter and able to add the filter to screen");

							} else {
								extent.extentLoggerFail("",
										"user not able to download filter and able to add the filter to screen");
								logger.info("user not able to download filter and able to add the filter to screen");
							}
							break;

						}

					}

				} else {

					click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(1), "FIrst filter ");
					waitTime(10000);
					click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
					waitTime(2000);
					if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "downloaded filter seletion")) {
						extent.extentLoggerPass("",
								"user is able to download filter, by tapping on download pin present on each filter");
						logger.info(
								"user is able to download filter, by tapping on download pin present on each filter");

					} else {
						extent.extentLoggerFail("",
								"user not able to download filter, by tapping on download pin present on each filter");
						logger.info(
								"user not able to download filter, by tapping on download pin present on each filter");
					}

				}
				break;

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(2000);

		}
	}

	@SuppressWarnings("unused")
	public void Creator_T606_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T606_Logged in user - Check if user is able to preview the downloaded filter");
			System.out.println("T606_Logged in user - Check if user is able to preview the downloaded filter");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosNewTrendingInFilterScreen("Trending"), "Trending");
			waitTime(3000);

			for (int i = 1; i <= 5; i++) {
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosListOfDownloadedFilters, "Downloaded")) {
					List<WebElement> downlodedfilters = findElements(
							IOSHipiCreateVideoPage.objiosListOfDownloadedFilters);
					int total = downlodedfilters.size();
					extent.extentLogger("", "the total filter downloaded is :" + total);
					logger.info("the total filter downloaded is :" + total);
					if (total == 4) {

						for (int j = 1; j <= 4; j++) {
							WebElement curent = findElement(IOSHipiCreateVideoPage.objiosDownloadedFilters(3));
							int y = curent.getLocation().getY();
							System.out.println(y);
							SwipeRail(IOSHipiCreateVideoPage.objiosDownloadedFilters(3));
							waitTime(2000);

							click(IOSHipiCreateVideoPage.objiosFiltersNotDownloadedUnderAcategory(j), "FIrst filter ");
							waitTime(10000);
							click(IOSHipiCreateVideoPage.objiosDownloadedFilters(j + 1), "downloaded filter ");
							waitTime(2000);
							if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
									"downloaded filter seletion")) {
								extent.extentLoggerPass("", "User is able to preview the downloaded filter");
								logger.info("User is able to preview the downloaded filter");

							} else {
								extent.extentLoggerFail("", "User is not able to preview the downloaded filter");
								logger.info("User is not able to preview the downloaded filter");
							}
							break;
						}

					} else {
						int besidefilter = total + 1;
						System.out.println(besidefilter);
						if (verifyElementExist(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(besidefilter),
								" Filter beside downloaded filter")) {
							click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(besidefilter),
									" Filter beside downloaded filter ");
							waitTime(20000);
							WebElement bfilter = findElement(
									IOSHipiCreateVideoPage.objiosDownloadedFilters(besidefilter));
							tapiOS(bfilter, 1);
							waitTime(2000);
							click(IOSHipiCreateVideoPage.objiosDownloadedFilters(besidefilter),
									"downloaded new filter ");
							waitTime(2000);
							if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
									"downloaded filter seletion")) {
								extent.extentLoggerPass("", "User is able to preview the downloaded filter");
								logger.info("User is able to preview the downloaded filter");

							} else {
								extent.extentLoggerFail("", "User is not able to preview the downloaded filter");
								logger.info("User is not able to preview the downloaded filter");
							}
							break;

						}

					}

				} else {

					click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(1), "FIrst filter ");
					waitTime(10000);
					click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
					waitTime(2000);
					if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "downloaded filter seletion")) {
						extent.extentLoggerPass("", "User is able to preview the downloaded filter");
						logger.info("User is able to preview the downloaded filter");

					} else {
						extent.extentLoggerFail("", "User is not able to preview the downloaded filter");
						logger.info("User is not able to preview the downloaded filter");
					}

				}
				break;

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(2000);

		}
	}

	@SuppressWarnings("unused")
	public void Creator_T609_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T609_Logged in user- Check if user is able to select a filter and its selected filter preview/overlay is displayed");
			System.out.println(
					"T609_Logged in user- Check if user is able to select a filter and its selected filter preview/overlay is displayed");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosNewTrendingInFilterScreen("Trending"), "Trending");
			waitTime(3000);
			for (int i = 1; i <= 5; i++) {
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosListOfDownloadedFilters, "Downloaded")) {
					List<WebElement> downlodedfilters = findElements(
							IOSHipiCreateVideoPage.objiosListOfDownloadedFilters);
					int total = downlodedfilters.size();
					extent.extentLogger("", "the total filter downloaded is :" + total);
					logger.info("the total filter downloaded is :" + total);
					if (total == 4) {

						for (int j = 1; j <= 4; j++) {
							WebElement curent = findElement(IOSHipiCreateVideoPage.objiosDownloadedFilters(3));
							int y = curent.getLocation().getY();
							System.out.println(y);
							SwipeRail(IOSHipiCreateVideoPage.objiosDownloadedFilters(3));
							waitTime(2000);

							click(IOSHipiCreateVideoPage.objiosFiltersNotDownloadedUnderAcategory(j), "FIrst filter ");
							waitTime(10000);
							click(IOSHipiCreateVideoPage.objiosDownloadedFilters(j), "downloaded filter ");
							waitTime(2000);
							if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
									"downloaded filter seletion")) {
								extent.extentLoggerPass("",
										"User able to select a filter and its selected filter preview/overlay is displayed");
								logger.info(
										"User able to select a filter and its selected filter preview/overlay is displayed");

							} else {
								extent.extentLoggerFail("",
										"User not able to select a filter and its selected filter preview/overlay is displayed");
								logger.info(
										"User not able to select a filter and its selected filter preview/overlay is displayed");
							}
							break;
						}

					} else {
						int besidefilter = total + 1;
						System.out.println(besidefilter);
						if (verifyElementExist(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(besidefilter),
								" Filter beside downloaded filter")) {
							click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(besidefilter),
									" Filter beside downloaded filter ");
							waitTime(20000);
							WebElement bfilter = findElement(
									IOSHipiCreateVideoPage.objiosDownloadedFilters(besidefilter));
							tapiOS(bfilter, 1);
							waitTime(2000);
							click(IOSHipiCreateVideoPage.objiosDownloadedFilters(besidefilter),
									"downloaded new filter ");
							waitTime(2000);
							if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
									"downloaded filter seletion")) {
								extent.extentLoggerPass("",
										"User able to select a filter and its selected filter preview/overlay is displayed");
								logger.info(
										"User able to select a filter and its selected filter preview/overlay is displayed");

							} else {
								extent.extentLoggerFail("",
										"User not able to select a filter and its selected filter preview/overlay is displayed");
								logger.info(
										"User not able to select a filter and its selected filter preview/overlay is displayed");
							}
							break;

						}

					}

				} else {

					click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(1), "FIrst filter ");
					waitTime(10000);
					click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
					waitTime(2000);
					if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "downloaded filter seletion")) {
						extent.extentLoggerPass("",
								"User able to select a filter and its selected filter preview/overlay is displayed");
						logger.info(
								"User able to select a filter and its selected filter preview/overlay is displayed");

					} else {
						extent.extentLoggerFail("",
								"User not able to select a filter and its selected filter preview/overlay is displayed");
						logger.info(
								"User not able to select a filter and its selected filter preview/overlay is displayed");
					}

				}
				break;

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(2000);

		}
	}

	public void Creator_T607_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T607_Logged in user - Check if by default,filter is selected as 'normal'");
			System.out.println("T607_Logged in user - Check if by default,filter is selected as 'normal'");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Any filters selected")) {

				logger.info("By default ,no filter should be selected ");
				extent.extentLoggerPass("", "By default ,no filter should be selected ");

			} else {

				logger.info("By default ,filters should be selected ");
				extent.extentLoggerFail("", "By default ,filters should be selected ");

			}

			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(2000);

		}
	}

	public void Creator_T610_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T610_Logged in user -Check if user is able to remove[undo] the selected filter");
			System.out.println("T610_Logged in user -Check if user is able to remove[undo] the selected filter");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(1), "FIrst filter ");
			waitTime(10000);
			click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "filters selected")) {
				click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
				waitTime(4000);
			} else {

				logger.info("Filter selected and added to the screen");
				extent.extentLogger("", "Filter selected and added to the screen");

			}

			if (verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "filters selected")) {
				waitTime(3000);
				click(IOSHipiCreateVideoPage.objiosClearButtonSelectedTrueInEditScreen, "Clear filter active");
				waitTime(3000);

			}

			if (!verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue,
					"Clear filter is not active")) {

				logger.info("User able to remove[undo] the selected filter by tapping clear ");
				extent.extentLoggerPass("", "User able to remove[undo] the selected filter by tapping clear ");

			} else {

				logger.info("User not able to remove[undo] the selected filter by tapping clear ");
				extent.extentLoggerFail("", "User not able to remove[undo] the selected filter by tapping clear ");

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back");
			waitTime(2000);

		}
	}

//	if() {
//		
//		logger.info("");
//		extent.extentLoggerPass("", "");
//		
//	}else {
//		
//		logger.info("");
//		extent.extentLoggerFail("", "");
//		
//	}

	public void Creator_T611_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T611_Logged in user -Check if user is able to create a video with 'selected filter'");
			System.out.println("T611_Logged in user -Check if user is able to create a video with 'selected filter'");
			
			String desc = RandomStringGenerator(5);
			waitTime(3000);
			createVideoType("Yes", "No", "No", "No", "Public", desc, "Yes");
			waitTime(4000);
			OpenRecentlyPostedVideoOrLastCreatedVideo();
			String Descrption = getText(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen);

			String FilterAdded=getText(IOSHipiNeoHomePage.objiOSAddedFiltersOnScreen);
			logger.info("The description in last created video is : " + Descrption);
			extent.extentLogger("", "The description in last created video is : " + Descrption);

			logger.info("The Filter in last created video is : " + FilterAdded);
			extent.extentLogger("", "The Filter in last created video is : " + FilterAdded);
			
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSAddedFiltersOnScreen, "Filter added")) {

				logger.info("User able to create a video with 'selected filter'");
				extent.extentLoggerPass("", "User able to create a video with 'selected filter'");

			} else {

				logger.info("User not able to create a video with 'selected filter'");
				extent.extentLoggerFail("", "User not able to create a video with 'selected filter'");

			}

			BackToFeedScreenFromVideoPostScreen();

		}
	}

	
	public void Creator_T613_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T613_Logged in user - Check if user is able to apply filters on multiple clip segment");
			System.out.println("T613_Logged in user - Check if user is able to apply filters on multiple clip segment");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "Downloaded filter")) {
				click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
				waitTime(2000);
			} else {
				click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(1), "FIrst filter ");
				waitTime(10000);
				click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
				waitTime(2000);
			}
			if (!verifyElementExist(IOSHipiCreateVideoPage.FiltersSelectedTrue, "filters selected")) {
				click(IOSHipiCreateVideoPage.objiosDownloadedFilters(1), "downloaded filter ");
				waitTime(4000);
			} else {

				logger.info("Filter selected and added to the screen");
				extent.extentLogger("", "Filter selected and added to the screen");

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.videoCreationScreenIcons("filters"), "Filters");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosDownloadedFilters(2), "Downloaded filter")) {
				click(IOSHipiCreateVideoPage.objiosDownloadedFilters(2), "downloaded filter ");
				waitTime(2000);
			} else {
				click(IOSHipiCreateVideoPage.objiosFiltersUnderAcategory(2), "FIrst filter ");
				waitTime(10000);
				click(IOSHipiCreateVideoPage.objiosDownloadedFilters(2), "downloaded filter ");
				waitTime(3000);
			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
			waitTime(2000);
			List<WebElement> segments = findElements(IOSHipiCreateVideoPage.objiosNoOfSeekBarsSegmentsAtTopOfScreen);
			int size = segments.size();
			if (size > 1) {

				logger.info("User able to apply filters on muliple clip segment");
				extent.extentLoggerPass("", "User able to apply filters on muliple clip segment");

			} else {

				logger.info("User is not able to apply filters on muliple clip segment");
				extent.extentLoggerFail("", "User is not able to apply filters on muliple clip segment");

			}
			BackToFeedScreenFromVideoPostScreen();

		}
	}

	// ------------------------------------------------------kiran-------------creator---------------------
	public void Creator_T701(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T701_Logged in user - Check user is able to create video less than 6s");
			System.out.println("T701_Logged in user - Check user is able to create video less than 6s");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Creator Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objios15secondsSelectedTrueInCreateVideo,
					"15second Selected")) {
				click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
				waitTime(2000);
				if (!verifyElementExist(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Tick Mark")) {
					logger.info("User not able to create a video less than 6s");
					extent.extentLoggerPass("", "User not able to create a video less than 6s");
				} else {
					logger.info("User able to create a video less than 6s");
					extent.extentLoggerFail("", "User able to create a video less than 6s");
				}
				click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosDiscardEditInRecordingScreen, "Discad Edits");
				waitTime(2000);
			}
		}
	}

	public void Creator_T657(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T657_Logged in user - Check if user is able to upload video without HashTag [Since Hashtag is optional field]");
			System.out.println(
					"T657_Logged in user - Check if user is able to upload video without HashTag [Since Hashtag is optional field]");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", "Yes");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 50, "Profile");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSPublishingInProcessInProfileScreen,
					"Publishing In Process")) {
				click(IOSHipiNeoProfilePage.objiOSPublishingInProcessInProfileScreen, "Publishing In Process");
				waitTime(2000);
			} else {
				PartialSwipeiOS("Down", 9);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
			}
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSCommentBtn, "comment Icon")) {
				logger.info("user is able to upload video without HashTag [Since Hashtag is optional field]");
				extent.extentLoggerPass("",
						"user is able to upload video without HashTag [Since Hashtag is optional field]");
			} else {
				logger.info("user is not able to upload video without HashTag [Since Hashtag is optional field]");
				extent.extentLoggerFail("",
						"user is not able to upload video without HashTag [Since Hashtag is optional field]");
			}
			NavigateToHomPage();
		}
	}

	public void Creator_T656(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T656_Logged in user - Check if user is able to upload video with HashTag");
			System.out.println("T656_Logged in user - Check if user is able to upload video with HashTag");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Add Description");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "#kitty", "#kitty");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done Butt");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 500, "Profile");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSPublishingInProcessInProfileScreen,
					"Publishing In Process")) {
				click(IOSHipiNeoProfilePage.objiOSPublishingInProcessInProfileScreen, "Publishing In Process");
				waitTime(2000);
			} else {
				PartialSwipeiOS("Down", 9);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
			}
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSCommentBtn, "comment Icon")) {
				logger.info("user is able to upload video with HashTag");
				extent.extentLoggerPass("", "user is able to upload video with HashTag");
			} else {
				logger.info("user is not able to upload video with HashTag");
				extent.extentLoggerFail("", "user is not able to upload video with HashTag");
			}
			NavigateToHomPage();
		}
	}

	public void Creator_T638(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T638_Logged in user - Check user is able to see the UI on Text screen");
			System.out.println("T638_Logged in user - Check user is able to see the UI on Text screen");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosBackArrowInVideoEditingScreen, "Back Arrow Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosDoneButtonInTextScreen, "Done Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlayButtonInTextScreen, "Play Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimOptionInEditScreen, "Trim Option");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, "Text On Middle")) {
				logger.info("Text getting displayed on middle of the video");
				extent.extentLoggerPass("", "Text getting displayed on middle of the video");
			} else {
				logger.info("Text not getting displayed on middle of the video");
				extent.extentLoggerFail("", "Text not getting displayed on middle of the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T645(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T645_Logged in user - Check user is able to see the UI on sticker screen");
			System.out.println("T645_Logged in user - Check user is able to see the UI on sticker screen");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosStickerIconInEditScreen, "Sticker Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosBackArrowInVideoEditingScreen, "Back Arrow Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosDoneButtonInTextScreen, "Done Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlayButtonInTextScreen, "Play Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimOptionInEditScreen, "Trim Option");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosStickerItem1InEditScreen, "Sticker Item 1");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosStickerItem1SelectedTrueInEditScreen,
					"Sticker Item 1 SelectedTrue")) {
				logger.info("Sticker getting displayed on middle of the video");
				extent.extentLoggerPass("", "Sticker getting displayed on middle of the video");
			} else {
				logger.info("Sticker not getting displayed on middle of the video");
				extent.extentLoggerFail("", "Sticker not getting displayed on middle of the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T642(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T642_Logged in user - Check user is able to add Stickers on the video");
			System.out.println("T642_Logged in user - Check user is able to add Stickers on the video");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosStickerIconInEditScreen, "Sticker Icon");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon")) {
				logger.info("User navigated to sticker screen");
				extent.extentLoggerPass("", "User navigated to sticker screen");
			} else {
				logger.info("User not navigated to sticker screen");
				extent.extentLoggerFail("", "User not navigated to sticker screen");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T643(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T643_Logged in user - Check user is able to see sticker on the video");
			System.out.println("T643_Logged in user - Check user is able to see sticker on the video");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosStickerIconInEditScreen, "Sticker Icon")) {
				logger.info("User able to see sticker on the video");
				extent.extentLoggerPass("", "User able to see sticker on the video");
			} else {
				logger.info("User not able to see sticker on the video");
				extent.extentLoggerFail("", "User not able to see sticker on the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T644(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T644_Logged in user - Check user is able to tap on the sticker ");
			System.out.println("T644_Logged in user - Check user is able to tap on the sticker ");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosStickerIconInEditScreen, "Sticker Icon");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon")) {
				logger.info("User able to tap on sticker in video edit screen");
				extent.extentLoggerPass("", "User able to tap on sticker in video edit screen");
			} else {
				logger.info("User not able to tap on sticker in video edit screen");
				extent.extentLoggerFail("", "User not able to tap on sticker in video edit screen");
			}
			click(IOSHipiCreateVideoPage.objiosBackArrowInStickerScreen, "Back Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackArrowInStickerScreen, "Back Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "Cross Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(2000);
		}
	}

	public void Creator_T648(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T648_Logged in user - Check user is able to drag the video by using trim option");
			System.out.println("T648_Logged in user - Check user is able to drag the video by using trim option");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objTrimIconinVideoEditScreen, "Trim Icon");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Drag the selectrs to Trim")) {
				logger.info("User navigated to trim screen and he can cut  the video by using trim option");
				extent.extentLoggerPass("",
						"User navigated to trim screen and he can cut  the video by using trim option");
			} else {
				logger.info("User not navigated to trim screen and he can not cut  the video by using trim option");
				extent.extentLoggerFail("",
						"User not navigated to trim screen and he can not cut  the video by using trim option");
			}
			click(IOSHipiCreateVideoPage.objiosBackArrowInStickerScreen, "Back Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "Cross Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(2000);
		}
	}

	public void Creator_T629(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T629_Logged in user -Check user is able to add  combination  of all( numbers ,alphabetics,special characters)");
			System.out.println(
					"T629_Logged in user -Check user is able to add  combination  of all( numbers ,alphabetics,special characters)");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "12Aa#!@";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add all the combinations");
				extent.extentLoggerPass("", "User able to add all the combinations");
			} else {
				logger.info("User not able to add all the combinations");
				extent.extentLoggerFail("", "User not able to add all the combinations");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T630(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T630_Logged in user -Check user is able to add  special characters with alphabets  on the video");
			System.out.println(
					"T630_Logged in user -Check user is able to add  special characters with alphabets  on the video");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "#!@Aa";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add special character with alphabetics");
				extent.extentLoggerPass("", "User able to add special character with alphabetics");
			} else {
				logger.info("User not able to add special character with alphabetics");
				extent.extentLoggerFail("", "User not able to add special character with alphabetics");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T631(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T631_Logged in user -Check user is able to add special characters with numbers on the video");
			System.out.println(
					"T631_Logged in user -Check user is able to add special characters with numbers on the video");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "#!@123";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add special characters with numbers ");
				extent.extentLoggerPass("", "User able to add special characters with numbers ");
			} else {
				logger.info("User not able to add special characters with numbers ");
				extent.extentLoggerFail("", "User not able to add special characters with numbers ");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T632(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T632_Logged in user -  Check user is able to add special characters with characters");
			System.out.println("T632_Logged in user -  Check user is able to add special characters with characters");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "#!@12adA";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add characters with specialcharacters");
				extent.extentLoggerPass("", "User able to add characters with specialcharacters");
			} else {
				logger.info("User not able to add characters with specialcharacters");
				extent.extentLoggerFail("", "User not able to add characters with specialcharacters");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T633(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T633_Logged in user -Check user is able to Alphabetic with numbers");
			System.out.println("T633_Logged in user -Check user is able to Alphabetic with numbers");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "#adA123";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add alphabets with numbers on the video");
				extent.extentLoggerPass("", "User able to add alphabets with numbers on the video");
			} else {
				logger.info("User not able to add alphabets with numbers on the video");
				extent.extentLoggerFail("", "User not able to add alphabets with numbers on the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T634(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T634_Logged in user -Check user is able to Alphabetic with specialcharacters");
			System.out.println("T634_Logged in user -Check user is able to Alphabetic with specialcharacters");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "adA#@!%";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add alphabetic with special characters on the video");
				extent.extentLoggerPass("", "User able to add alphabetic with special characters on the video");
			} else {
				logger.info("User not able to add alphabetic with special characters on the video");
				extent.extentLoggerFail("", "User not able to add alphabetic with special characters on the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T635(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T635_Logged in user -Check user is able to  add Alphabetic with characters");
			System.out.println("T635_Logged in user -Check user is able to  add Alphabetic with characters");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "adA!@123";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add alphabetic with characters on the video");
				extent.extentLoggerPass("", "User able to add alphabetic with characters on the video");
			} else {
				logger.info("User not able to add alphabetic with characters on the video");
				extent.extentLoggerFail("", "User not able to add alphabetic with characters on the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T636(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T636_Logged in user - Check user is able to add numbers with numbers with alphabetic");
			System.out.println("T636_Logged in user - Check user is able to add numbers with numbers with alphabetic");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "1225adA";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add numbers with alphabetics on ther video ");
				extent.extentLoggerPass("", "User able to add numbers with alphabetics on ther video ");
			} else {
				logger.info("User not able to add numbers with alphabetics on ther video ");
				extent.extentLoggerFail("", "User not able to add numbers with alphabetics on ther video ");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T637(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T637_Logged in user - Check user is able to add numbers with numbers with characters");
			System.out.println("T637_Logged in user - Check user is able to add numbers with numbers with characters");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "1225adA!@#";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add numbers with characters on ther video ");
				extent.extentLoggerPass("", "User able to add numbers with characters on ther video ");
			} else {
				logger.info("User not able to add numbers with characters on ther video ");
				extent.extentLoggerFail("", "User not able to add numbers with characters on ther video ");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T639(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T639_Logged in user - Check user is able to add numbers with numbers with specialcharacters");
			System.out.println(
					"T639_Logged in user - Check user is able to add numbers with numbers with specialcharacters");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosPlusIconInEditScreen, "Plus Icon");
			waitTime(2000);
			String Text = "1225!@#$%^&";
			type(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, Text, Text);
			waitTime(2000);
			String Text1 = getAttributValue("value", IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			waitTime(2000);
			System.out.println(Text1);
			if (Text.equalsIgnoreCase(Text1)) {
				logger.info("User able to add numbers with specialcharacters on ther video ");
				extent.extentLoggerPass("", "User able to add numbers with specialcharacters on ther video ");
			} else {
				logger.info("User not able to add numbers with specialcharacters on ther video ");
				extent.extentLoggerFail("", "User not able to add numbers with specialcharacters on ther video ");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T693(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T693_Logged in user -Check if by default there are no effect selected");
			System.out.println("T693_Logged in user -Check if by default there are no effect selected");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effect Button");
			waitTime(2000);
			List<WebElement> True = findElements(IOSHipiCreateVideoPage.EffectsSelectedTrue);
			int count = True.size();
			System.out.println(count);
			if (count == 0) {
				logger.info("By default there is no effect selected");
				extent.extentLoggerPass("", "By default there is no effect selected");
			} else {
				logger.info("By default there is effect selected");
				extent.extentLoggerFail("", "By default there is effect selected");
			}
			tapiOSAtCenterOfScrreen(1);
			click(IOSHipiCreateVideoPage.objiosCrossIconInVideoRecordingScreen, "Cross Button");
			waitTime(2000);
		}
	}

	public void Creator_T617(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T617_Logged in user- Check if user is able to cancel the filters applied");
			System.out.println("T617_Logged in user- Check if user is able to cancel the filters applied");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Btn");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosClearButtonInEditScreen, "Clear Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosClearButtonSelectedFalseInEditScreen, "Clear Button")) {
				logger.info("User able to Clear the filters applied");
				extent.extentLoggerPass("", "User able to Clear the filters applied");
			} else {
				logger.info("User not able to Clear the filters applied");
				extent.extentLoggerFail("", "User not able to Clear the filters applied");
			}
			tapiOSAtCenterOfScrreen(1);

			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T619(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T619_Logged in user - Check if user is able to add Hashtag Title, description to a newly created video");
			System.out.println(
					"T619_Logged in user - Check if user is able to add Hashtag Title, description to a newly created video");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objDescriptionBoxInPostPage, "Description Box");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.objDescriptionBoxInPostPage, "hi #Himanshi", "hi #Himanshi");
			waitTime(2000);
			String Hashtag1 = getAttributValue("value", IOSHipiCreateVideoPage.objDescriptionBoxInPostPage);
			waitTime(2000);
			System.out.println(Hashtag1);
			click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 200, "Profile");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSPublishingInProcessInProfileScreen,
					"Publishing In Process")) {
				click(IOSHipiNeoProfilePage.objiOSPublishingInProcessInProfileScreen, "Publishing In Process");
				waitTime(2000);
			} else {
				PartialSwipeiOS("Down", 15);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
			}
			String Hashtag2 = getText(IOSHipiNeoProfilePage.objiOSHashtagInProfileVideos);
			waitTime(2000);
			System.out.println(Hashtag2);
			if (Hashtag1.equalsIgnoreCase(Hashtag2)) {
				logger.info("User is able to add Hashtag Title, description to a newly created video");
				extent.extentLoggerPass("", "User is able to add Hashtag Title, description to a newly created video");
			} else {
				logger.info("User is not able to add Hashtag Title, description to a newly created video");
				extent.extentLoggerFail("",
						"User is not able to add Hashtag Title, description to a newly created video");
			}
			NavigateToHomPage();
		}
	}

	public void Creator_Video_Speed_T518_P2_(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T518_Logged in user- Check if user is able to select other Video speed options like 1x");
			System.out.println("T518_Logged in user- Check if user is able to select other Video speed options like 1x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			// pop ups--2
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSpeedSeletedCTAInRecordScreen, "Speed rail")) {
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_1x, "1x Speed");
				click(IOSHipiCreateVideoPage.objiosvideospeed_1x, "1x Speed");
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosvideospeed_1x_selected,
						"Video speed 1x Selected")) {
					logger.info("User is able to select 1x option from video speed bar ");
					extent.extentLoggerPass("", "User is able to select 1x option from video speed bar ");

				} else {
					logger.info("User is not able to select 1x option from video speed bar ");
					extent.extentLoggerFail("", "User is not able to select 1x option from video speed bar ");

				}

			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Video_Speed_T519_P2_(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T519_Logged in user- Check if user is able to select other Video speed options like 2x");
			System.out.println("T519_Logged in user- Check if user is able to select other Video speed options like 2x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			// pop ups--2
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSpeedSeletedCTAInRecordScreen, "Speed rail")) {
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed_2x, "2x Speed");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosvideospeed_2x, "2x Speed");
				waitTime(2000);
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosvideospeed_2x_selected,
						"Video speed 2x Selected")) {
					logger.info("User is able to select 2x option from video speed bar ");
					extent.extentLoggerPass("", "User is able to select 2x option from video speed bar ");

				} else {
					logger.info("User is not able to select 2x option from video speed bar ");
					extent.extentLoggerFail("", "User is not able to select 2x option from video speed bar ");

				}

			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Video_Speed_T520_P2_(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T520_Logged in user- Check if user is able to select other Video speed options like 1.5x");
			System.out.println("T520_Logged in user- Check if user is able to select other Video speed options like 1.5x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			// pop ups--2
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSpeedSeletedCTAInRecordScreen, "Speed rail")) {
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed1_5x, "1.5x Speed");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosvideospeed1_5x, "1.5x Speed");
				waitTime(2000);
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosvideospeed_1_5x_selected,
						"Video speed 1.5x Selected")) {
					logger.info("User is able to select 1.5x option from video speed bar ");
					extent.extentLoggerPass("", "User is able to select 1.5x option from video speed bar ");

				} else {
					logger.info("User is not able to select 1.5x option from video speed bar ");
					extent.extentLoggerFail("", "User is not able to select 1.5x option from video speed bar ");

				}

			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Video_Speed_T521_P2_(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T521_Logged in user- Check if user is able to select other Video speed options like 0.3x");
			System.out.println("T521_Logged in user- Check if user is able to select other Video speed options like 0.3x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			// pop ups--2
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSpeedSeletedCTAInRecordScreen, "Speed rail")) {
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed0_3x, "0.3x Speed");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosvideospeed0_3x, "0.3x Speed");
				waitTime(2000);
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosvideospeed_0_3x_selected,
						"Video speed 0.3x Selected")) {
					logger.info("User is able to select 0.3x option from video speed bar ");
					extent.extentLoggerPass("", "User is able to select 0.3x option from video speed bar ");

				} else {
					logger.info("User is not able to select 0.3x option from video speed bar ");
					extent.extentLoggerFail("", "User is not able to select 0.3x option from video speed bar ");

				}

			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_Video_Speed_T522_P2_(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T522_Logged in user- Check if user is able to select other Video speed options like 0.5x");
			System.out.println("T522_Logged in user- Check if user is able to select other Video speed options like 0.5x");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create CTA");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			// pop ups--2
			click(IOSHipiCreateVideoPage.objiosSpeedCTAInRecordScreen, "Speed CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSpeedSeletedCTAInRecordScreen, "Speed rail")) {
				verifyElementPresent(IOSHipiCreateVideoPage.objiosvideospeed0_5x, "0.5x Speed");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosvideospeed0_5x, "0.5x Speed");
				waitTime(2000);
				if (verifyElementExist(IOSHipiCreateVideoPage.objiosvideospeed_0_5x_selected,
						"Video speed 0.5x Selected")) {
					logger.info("User is able to select 0.5x option from video speed bar ");
					extent.extentLoggerPass("", "User is able to select 0.5x option from video speed bar ");

				} else {
					logger.info("User is not able to select 0.5x option from video speed bar ");
					extent.extentLoggerFail("", "User is not able to select 0.5x option from video speed bar ");

				}

			}
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

	public void Creator_T502_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T502_Logged in user - Check 'Video Creation Screen' options are present on BOTTOM section - Layer2");
			System.out.println(
					"T502_Logged in user - Check 'Video Creation Screen' options are present on BOTTOM section - Layer2");
			
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(4000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects CTA");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objUploadinRecordingScreen, "Upload button");
			waitTime(2000);
		}
	}

	public void Creator_T571_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T571_Logged in user - Check if user tapping on search text field to enter record other options are displayed");
			System.out.println(
					"T571_Logged in user - Check if user tapping on search text field to enter record other options are displayed");

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field in sounds page");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Badhaai", "Text");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSuggestedRecordsInSearchScreen, "suggestions");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objSoundsSongspageBackButton, "Back button");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosCrossIconSearchSongsPage, "cross icon");
			waitTime(3000);
			BackToFeedScreenFromVideoPostScreen();
		}

	}

	public void Creator_T622(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T622_Logged in user - Check whether text is present in the editing screen ");
			System.out.println("T622_Logged in user - Check whether text is present in the editing screen ");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Record Buton");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus icon");
			waitTime(2000);
			String a = "wellcome";
			type(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText, a, "Text");
			waitTime(2000);
			String Text = getAttributValue("value",IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			System.out.println(Text);
			if (a.equalsIgnoreCase(Text)) {
				logger.info("User is able to see text in the editing screen");
				extent.extentLoggerPass("", "User is able to see text in the editing screen");
			} else {
				logger.info("User is able to see text in the editing screen");
				extent.extentLoggerFail("", "User is not able to see text in the editing screen");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T623(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T623_Logged in user - check user is able to navigate to text screen ");
			System.out.println("T623_Logged in user - check user is able to navigate to text screen ");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus icon");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus Icon")) {
				logger.info("User is navigate to text screen");
				extent.extentLoggerPass("", "User is navigate to text screen");
			} else {
				logger.info("User is not navigate to text screen");
				extent.extentLoggerFail("", "User is not navigate to text screen");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross iocn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard Edits Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T626(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T626_Logged in user -Check user is able to add  numbers on the video ");
			System.out.println("T626_Logged in user -Check user is able to add  numbers on the video ");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus icon");
			waitTime(2000);
			String a = "1234556";
			type(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText, a, a);
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, "TextIn screen");
			waitTime(2000);
			String Text = getAttributValue("value",IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			System.out.println(Text);
			if (a.equals(Text)) {
				logger.info("User is able add  numbers on video");
				extent.extentLoggerPass("", "User is able add  numbers on video");
			} else {
				logger.info("User is not able to see text in the editing screen");
				extent.extentLoggerFail("", "User is not able to see text in the editing screen");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T627(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T627_Logged in user -Check user is able to add only alphabets on the video");
			System.out.println("T627_Logged in user -Check user is able to add only alphabets on the video");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus icon");
			waitTime(2000);
			String a = "abcdefghijk";
			type(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText, a, a);
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, "TextIn screen");
			waitTime(2000);
			String Text = getAttributValue("value",IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			System.out.println(Text);
			if (a.equals(Text)) {
				logger.info("User is able to add alphabets on the video");
				extent.extentLoggerPass("", "User is able to add alphabets on the video");
			} else {
				logger.info("User is not able to add alphabets on the video");
				extent.extentLoggerFail("", "User is not able to add alphabets on the video");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T628(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T628_Logged in user -Check user is able to add only special characters on the video");
			System.out.println("T628_Logged in user -Check user is able to add only special characters on the video");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus icon");
			waitTime(2000);
			String a = "@#$%^&**&&";
			type(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText, a, a);
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, "TextIn screen");
			waitTime(2000);
			String Text = getAttributValue("value",IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			System.out.println(Text);
			if (a.equals(Text)) {
				logger.info("User is add only special characters on the video ");
				extent.extentLoggerPass("", "User is add only special characters on the video ");
			} else {
				logger.info("User is not able to add only special characters on the video ");
				extent.extentLoggerFail("", "User is not able to add only special characters on the video ");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T653(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T653_Logged in user - Check whether text is present in the editing screen ");
			System.out.println("T653_Logged in user - Check whether text is present in the editing screen ");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText,
					"plus icon");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.objiosPlusIconInVideoEditingScreenInstickersAndAddText, "welcome", "text");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, "TextIn screen");
			waitTime(2000);
			String Text = getAttributValue("value",IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen);
			System.out.println(Text);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosTextOnMiddleInEditScreen, "text in screen")) {
				logger.info("User is able to see text in the editing screen");
				extent.extentLoggerPass("", "User is able to see text in the editing screen");
			} else {
				logger.info("User is not able to see text in the editing screen");
				extent.extentLoggerFail("", "User is not able to see text in the editing screen");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T652(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T652_Logged in user - Check the  UI of video edit screen");
			System.out.println("T652_Logged in user - Check the  UI of video edit screen");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Record Buton");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 50, "Next button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTextIconInEditScreen, "Text Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filter Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objTrimIconinVideoEditScreen, "Trim Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosVolumeInEditScreen, "volume button");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "sounds Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosstickersInVideoEditScreen, "Stikcers Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "Next Buttonn");
			waitTime(2000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosBackArrowInVideoEditingScreen, "Back Button");
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T654(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T654_Logged in user - Check if user is able to upload video with description");
			System.out.println("T654_Logged in user - Check if user is able to upload video with description");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 500, "Post button");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "welocme to a new world", "Description of video");
			waitTime(3000);
			String DescribeVideo = findElement(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo)
					.getAttribute("value");
			System.out.println(DescribeVideo);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			waitTime(3000);
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 100,
					"video description")) {
				logger.info("user is able to upload video with description");
				extent.extentLoggerPass("", "user is able to upload video with description");
			} else {
				logger.info("user is not able to upload video with description");
				extent.extentLoggerFail("", "user is not able to upload video with description");
			}
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 100,
					"video posted sucessfully");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T697(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T697_Logged in user- Check whether Percentage loader  on 'Post HiPiT' screen by tapping draft CTA");
			System.out.println("T697_Logged in user- Check whether Percentage loader  on 'Post HiPiT' screen by tapping draft CTA");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 500, "Post button");
			waitTime(2500);
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save Draft Button");
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosLoadingPercentageInSaveAsDraft,
					"loading  percentage")) {
				logger.info("User gets percentage loader when he save on draft");
				extent.extentLoggerPass("", "User gets percentage loader when he save on draft");
			} else {
				logger.info("User not gets percentage loader when he save on draft");
				extent.extentLoggerFail("", "User not gets percentage loader when he save on draft");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Creator_T660(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T660_Logged in user - Check if user is able to set visibilty mode to public");
			System.out.println("T660_Logged in user - Check if user is able to set visibilty mode to public");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 30, "Next Button");
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(2500);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 100, "Post button");
			waitTime(2500);
			String a = "Public";
			String Public = getText(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoSelectedOptionInPostScreen);
			if (a.equalsIgnoreCase(Public)) {
				logger.info("user is able to set visibilty mode to public");
				extent.extentLoggerPass("", "user is able to set visibilty mode to public");
			} else {
				logger.info("user is not able to set visibilty mode to public");
				extent.extentLoggerFail("", "user is not able to set visibilty mode to public");
			}

		}
	}

	// =========================================================================
	// Feed Screed = P1
	// =========================================================================================

	// s=============================================== Feed Screed=p1
	// ==================================================

	public void FeedScreen_T178(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T178_Guest User -Verify shop button is present if user scrolls the video for few mins and play the shoppable video.");

			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			logger.info("Shop button is present for all the shoppable videos");
			extent.extentLogger("", "Shop button is present for all the shoppable videos");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

	// s=============================================== Feed Screed=p1
	// ==================================================

	public void FeedScreen_T179(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T179_Guest User- Verify for user able to close and reopen shop page for the same video.");
			System.out.println("T179");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "savelook button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop page");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Movements");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Products");
			waitTime(3000);
			CloseTheShopBar();
			waitTime(3000);
			if (!verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop page")) {
				logger.info(
						" user able to open shop page,right product is displayed on shop page,User is able to close the shop page");
				extent.extentLoggerPass("",
						" user able to open shop page,right product is displayed on shop page,User is able to close the shop page");
			} else {
				logger.info(
						" user not able to open shop page,right product is not displayed on shop page,User is not able to close the shop page");
				extent.extentLoggerFail("",
						" user not able to open shop page,right product is not displayed on shop page,User is not able to close the shop page");
			}

		}

	}
	// 26/11/2021 k=============================================== Feed Screed=p0
	// ==================================================

	public void FeedScreen_T190_T225(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T190_Guest User-Verify for Product images on the bottom sheet corousel");
		} else {
			extent.HeaderChildNode("T225_Logged In User-Verify for Product images on the bottom sheet corousel");
		}
		deleteProductsInSavedMoments();
		waitTime(2000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look  button");
		waitTime(3000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(0), "Images")) {
			List<WebElement> totalimg = getDriver()
					.findElements(IOSHipiNeoHomePage.objiOSHipiTotalShoppableImagesfeedSection);
			int list = totalimg.size();
			logger.info("Total Images found : " + list);
			extent.extentLogger("", "Total Images found : " + list);
			extent.extentLoggerPass("", "product images is displayed within carousel sheet at bottom");
		} else {
			logger.info("product images not displayed within carousel sheet at bottom");
			extent.extentLoggerFail("", "product images not displayed within carousel sheet at bottom");
		}
		click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
	//	verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, "Saved button");
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
	}
	
	public void backToshopPageFromURLpage() throws Exception{
		if(verifyElementExist(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "URL page")){
			click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
			waitTime(4000);
		}
	}

	// k===============================================Feed
	// Screed=P0=================================================

	public void FeedScreen_T192_T227(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T192_Guest User- Verify for clicks and redirection on product image from the bottom sheet corousel");
		} else {
			extent.HeaderChildNode(
					"T227_- Verify for clicks and redirection on product image from the bottom sheet corousel");
		}
		deleteProductsInSavedMoments();
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images");
		waitTime(8000);
		backToshopPageFromURLpage();
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments In Shop Page")) {
			logger.info("Shop Page is displayed");
			extent.extentLoggerPass("", "Shop Page is displayed");
		} else {
			logger.info("Shop Page is not displayed");
			extent.extentLoggerFail("", "Shop Page is not displayed");
		}
		CloseTheShopBar();
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
	}

	// k============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_SaveLook_corousel_sheet_T193_T228_p2(String userType) throws Exception {
		String str = null;
		String Startext = null;
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T193_Guest User- Verify for text and product item count on the corousel sheet");
		} else {
			extent.HeaderChildNode("T228_Logged In User- Verify for text and product item count on the corousel sheet");
		}
		deleteProductsInSavedMoments();
		waitTime(3000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet,
				"Products You Can Buy Text | 3 items")) {
			String text = getText(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet);

			str = text.substring(23);
			Startext = text.substring(0, 21);
		}

		logger.info("the text found above carousal sheet : " + Startext);
		extent.extentLoggerPass("", "the text found above carousal sheet : " + Startext);
		logger.info("the  product item count found in carousal sheet : " + str);
		extent.extentLoggerPass("", "the  product item count found in carousal sheet" + str);
		click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

	}

	public void FeedScreen_SaveLook_corousel_sheet_T193_p2(String userType) throws Exception {
		String str = null;
		String Startext = null;
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T193_Guest User- Verify for text and product item count on the corousel sheet");

			deleteProductsInSavedMoments();
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet,
					"Products You Can Buy Text | 3 items")) {
				String text = getText(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet);

				str = text.substring(23);
				Startext = text.substring(0, 21);
			}

			logger.info("the text found above carousal sheet : " + Startext);
			extent.extentLoggerPass("", "the text found above carousal sheet : " + Startext);
			logger.info("the  product item count found in carousal sheet : " + str);
			extent.extentLoggerPass("", "the  product item count found in carousal sheet" + str);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_SaveLook_corousel_sheet_T194_T229(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T194_Guest User-Verify for Close icon on the bottom sheet corousel and its click");
		} else {
			extent.HeaderChildNode(
					"T229_Logged In User-Verify for Close icon on the bottom sheet corousel and its click");
		}
		deleteProductsInSavedMoments();
		waitTime(3000);
		// PopupOfCameraAndMicrophoneWithCreator();
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
		click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

	}

	// k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T195_T230(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T195_Guest User- Verify for carousel banner functionality after clicking on the Save Look video objects");
		} else {
			extent.HeaderChildNode(
					"T230_Logged In User- Verify for carousel banner functionality after clicking on the Save Look video objects");
		}
		deleteProductsInSavedMoments();
		waitTime(3000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "IN THIS VIDEO Button");
		verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments button");
		CloseTheShopBar();
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
	}

	// 29/11/2021 k===============================================Feed
	// Screed=P0=================================================
	@SuppressWarnings("unused")
	public void FeedScreen_T183_T197_T232_T218(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T197_T183_Guest User - Verify for user can able to save and un-save the video objects");
		} else {
			extent.HeaderChildNode(
					"T232_T218Logged In User - Verify for user can able to save and un-save the video objects");
		}

		deleteProductsInSavedMoments();
		waitTime(2000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(3000);
		deleteProductsInSavedMoments();
		waitTime(4000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		String username1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		logger.info("username1" + username1);
		extent.extentLogger("", "username1" + username1);
		waitTime(3000);
		deleteProductsInSavedMoments();
		waitTime(4000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");

		String username2 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
		logger.info("username2" + username1);
		extent.extentLogger("", "username2" + username1);
		waitTime(2000);

		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button")) {
			logger.info(
					"The product is unsaved when user delete the product from Saved moment tab,Expected behaviour  ");
			extent.extentLoggerPass("",
					"  The product is unsaved when user delete the product from Saved moment tab,Expected behaviour  ");
		} else {
			logger.info("The product is saved when user delete the product from Saved moment tab ");
			extent.extentLoggerFail("", "The product is saved when user delete the product from Saved moment tab ");
		}

	}

	// 29/11/2021 k===============================================Feed
	// Screed=P0=================================================
	
	public void FeedScreen_T233(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {

			extent.HeaderChildNode(
					"T233_Logged In User - Verify for Save looks icon on shoppable video once saved product gets deleted from Saved moment tab on shop detail page");

			deleteProductsInSavedMoments();
			waitTime(2000);
			PartialSwipe("Up", 1);
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			PartialSwipe("Up", 1);
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			PartialSwipe("Up", 1);
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "SHOP Button");
			deleteProductsInSavedMoments();
			waitTime(3000);
			
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button")) {
				logger.info(" saved button turns to Discover The Look button when user delete from saved moments ");
				extent.extentLoggerPass("",
						"  saved button turns to Discover The Look button when user delete from saved moments ");
			} else {
				logger.info("saved button not turns to Discover The Look button when user delete from saved moments ");
				extent.extentLoggerFail("",
						" saved button not turns to Discover The Look button when user delete from saved moments ");
			}

		}
	}

	public void FeedScreen_T198(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T198_Guest User - Verify for Save looks icon on shoppable video once saved product gets deleted from Saved moment tab on shop detail page");

			deleteProductsInSavedMoments();
			waitTime(2000);
			PartialSwipe("Up", 1);
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			PartialSwipe("Up", 1);
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			PartialSwipe("Up", 1);
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "SHOP Button");
			deleteProductsInSavedMoments();
			waitTime(4000);
			
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button")) {
				logger.info(" saved button turns to Discover The Look button when user delete from saved moments ");
				extent.extentLoggerPass("",
						"  saved button turns to Discover The Look button when user delete from saved moments ");
			} else {
				logger.info("saved button not turns to Discover The Look button when user delete from saved moments ");
				extent.extentLoggerFail("",
						" saved button not turns to Discover The Look button when user delete from saved moments ");
			}

		}
	}

	// 29/11/2021 k===============================================Feed
	// Screed=P0=================================================

	public void FeedScreen_T199(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T199_Guest User -Verify for user should be able to Un-save and save the product again from shoppable video");

			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "SHOP Button");
			deleteProductsInSavedMoments();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "SHOP Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Delete")) {
				logger.info(
						" User is able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
				extent.extentLoggerPass("",
						"User is able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
			} else {
				logger.info(
						"User is not able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
				extent.extentLoggerFail("",
						"User is not able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
			}
			CloseTheShopBar();
		}
	}

	
	public void FeedScreen_T234(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T234_Logged In User -Verify for user should be able to Un-save and save the product again from shoppable video");

			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "SHOP Button");
			deleteProductsInSavedMoments();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
			waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "SHOP Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Delete")) {
				logger.info(
						" User is able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
				extent.extentLoggerPass("",
						"User is able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
			} else {
				logger.info(
						"User is not able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
				extent.extentLoggerFail("",
						"User is not able to save again if the product delete from Saved moment tab by clicking on Discover The Look button");
			}
		}

	}

	// 01/12/2021 k===============================================Feed
	// Screed=P0=================================================

	public void FeedScreen_T215(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T215_Logged In User -Verify for SAVE LOOK button on the shopable video");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn, "heart icon");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	// 09/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T214(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T214_Logged In User- Verify for user able to close and reopen shop page for the same video");

			deleteProductsInSavedMoments();

			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments")) {
				logger.info("User is able to open shop page by clicking on Shop button");
				extent.extentLoggerPass("", "User is able to open shop page by clicking on Shop button");
			} else {
				logger.info("User is not able to open shop page by clicking on Shop button");
				extent.extentLoggerFail("", "User is not able  to open shop page by clicking on Shop button");
			}
			waitTime(3000);
			CloseTheShopBar();
		}
	}

	// 10/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T220(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T220_Logged In User- Verify the SAVE LOOK button design ,position and colour");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn, "Heart Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close Button")) {
				logger.info("Discover The Look button button is clickable");
				extent.extentLoggerPass("", "Discover The Look button button is clickable");
			} else {
				logger.info("Discover The Look button button is not  clickable");
				extent.extentLoggerPass("", "Discover The Look button button is not clickable");

			}
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close Button");
		}
	}

	// 09/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T242_T244_T250_T252(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T242_T244_Guest User- Verify for Shop Detail Page Screen");
		} else {
			extent.HeaderChildNode("T250_T252_Logged In User -Verify for Shop Detail Page Screen");

		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments")
				&& verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In Shop Page Button")) {
			logger.info("User is able to open shop page by clicking on Shop button");
			extent.extentLoggerPass("", "User is able to open shop page by clicking on Shop button");
		} else {
			logger.info("User is not able to open shop page by clicking on Shop button");
			extent.extentLoggerFail("", "User is not able  to open shop page by clicking on Shop button");
		}
		waitTime(3000);
		CloseTheShopBar();

	}

	// 10/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T246_T254(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T246_Guest User - Verify that the SHOP Page gets closed");
		} else {
			extent.HeaderChildNode("T254_Logged In User- Verify that the SHOP Page gets closed");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		CloseTheShopBar();
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button")) {
			logger.info(
					"Guest User able to close the shop details page by swipe down the bottom up sheet and  navigated back to last page opened");
			extent.extentLoggerPass("",
					"Guest User able to close the shop details page by swipe down the bottom up sheet and  navigated back to last page opened");

		} else {
			logger.info(
					"Guest User not able to close the shop details page by swipe down the bottom up sheet and  navigated back to last page opened");
			extent.extentLoggerFail("",
					"Guest User not able to close the shop details page by swipe down the bottom up sheet and  navigated back to last page opened");
		}

	}

	// 10/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T245_T253_T393(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T245_T393Guest User- Verify for user should be able to open shop page by clicking on saved product rails on the saved video");
			System.out.println("T245_T393Guest User- Verify for user should be able to open shop page by clicking on saved product rails on the saved video");
		} else {
			extent.HeaderChildNode(
					"T253_Logged In User- Verify for user should be able to open shop page by clicking on saved product rails on the saved video");
			System.out.println("T253_Logged In User- Verify for user should be able to open shop page by clicking on saved product rails on the saved video");
		}
		deleteProductsInSavedMoments();
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(0), "Product in carousal");
		waitTime(3000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments")
				&& verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In Shop Page Button")) {
			logger.info("User is able to open shop page by clicking on saved product rails/small carousel image");
			extent.extentLoggerPass("",
					"User is able to open shop page by clicking on saved product rails/small carousel image");
		} else {
			logger.info("User is not able to open shop page by clicking on saved product rails/small carousel image");
			extent.extentLoggerFail("",
					"User is not able  to open shop page by clicking saved product rails/small carousel image");
		}
		waitTime(3000);
		CloseTheShopBar();
	}

	// 11/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T240(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T240_Logged In User - Verify for max limit to save the products in save look while user scrolling shoppable videos");
			deleteProductsInSavedMoments();
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn,"Discover The Look button");
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(3000);
			
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn,"Discover The Look button");
			waitTime(4000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button")) {
				click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
				waitTime(2000);
			} else {
				click(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, "SAVED");
				waitTime(2000);
			}
			click(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet, "Product in carousal");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(5000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Delete")) {
				logger.info("saved products displayes at Saved moment tab inside shop page");
				extent.extentLoggerPass("", "saved products displayes at Saved moment tab inside shop page");
			} else {
				logger.info("saved product is Not displayed at Saved moment tab inside shop page");
				extent.extentLoggerFail("", "saved product is Not displayed at Saved moment tab inside shop page");
			}
			waitTime(3000);
			String total = getText(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage);
			int num = Integer.parseInt(total);
			System.out.println("Total " + num);
			extent.extentLogger("", "Total----- " + num);
			int exp = 1;
			if (exp >= num) {
				logger.info("User  able to save unlimited products from the shoppable videos");
				extent.extentLoggerPass("", "User  able to save unlimited products from the shoppable videos");
			} else {
				logger.info("User is not able to save unlimited products from the shoppable videos");
				extent.extentLoggerFail("", "User is not able to save unlimited products from the shoppable videos");
			}
			waitTime(3000);
			CloseTheShopBar();

		}
	}
	
	
	// 11/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T056(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T056_Logged in User - Check that shoppable video under discover page video tab");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "SearchField");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "type");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "SearchField");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Videos"), "Videos");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1), "Shoppable Icon")) {
				logger.info("Shoppable videos  displayes over users search result page");
				extent.extentLoggerPass("", "Shoppable videos  displayes over users search result page");
			} else {
				logger.info("Shoppable videos is not displayes over users search result page");
				extent.extentLoggerFail("", "Shoppable videos is not displayes over users search result page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back button");
			waitTime(2500);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	// 13/12/2021 k===============================================Feed
	// Screed=P1=================================================

	public void FeedScreen_T404_T409(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T404_T409Logged in User - Check if user is able to pause and play the video in Following tab");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Btn");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Btn");
			waitTime(3000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosPauseButtonInVideos, "Pause Button")) {
				logger.info("User able to pause the video in Following tab and paused icon is displayed");
				extent.extentLoggerPass("",
						"User able to pause the video in Following tab and paused icon is displayed");
			} else {
				logger.info("User is not able to pause the video in Following tab and paused icon is not displayed");
				extent.extentLoggerFail("",
						"User is not able to pause the video in Following tab and paused icon is not displayed");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosPauseButtonInVideos, "Pause Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosPauseButtonInVideos, "Pause Button")) {
				logger.info("User not able play the video in Following tab and paused icon is not disappeard");
				extent.extentLoggerFail("",
						"User not able play the video in Following tab and paused icon is not disappeard");
			} else {
				logger.info("User  able play the video in Following tab and paused icon is disappeard");
				extent.extentLoggerPass("", "User  able play the video in Following tab and paused icon is disappeard");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "for you");
		}
	}

	// 02/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1406(String userType) throws Exception {

		extent.HeaderChildNode(
				"T1406_Verify if all sounds are displaying in the sound tab related to the searched keyword");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search field in discover page");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
		waitTime(3000);
		String searchtext = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSoundTabInSearchPage, "Sound Tab");
		waitTime(3000);
		String actualtext = getText(IOSHiPiNeoDiscoverPage.objiosNameInSoundTab);
		String Startext = actualtext.substring(0, 15);
		System.out.println(Startext);
		if (Startext.equalsIgnoreCase(searchtext)) {

			logger.info("User able to to see all the sounds list in the sound tab respective to the searched keyword");
			extent.extentLoggerPass("",
					"User able to to see all the sounds list in the sound tab respective to the searched keyword");
		} else {
			logger.info(
					"User is not able to to see all the sounds list in the sound tab respective to the searched keyword");
			extent.extentLoggerFail("",
					"User is not able to to see all the sounds list in the sound tab respective to the searched keyword");
		}
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
	}

	// 02/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1485(String userType) throws Exception {

		extent.HeaderChildNode("T1485_Verify if user able to see all the configured rails in the search result page");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search field in discover page");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("USERS"), "Users");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("VIDEOS"), "Videos");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("SOUNDS"), "Sounds");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		waitTime(3000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
	}

	// 02/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1516(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1516_Guest User- Verify User profile on rail");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
					"Top Hipi Stars");
			waitTime(3000);
			String Firstprofile = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			logger.info("First Profile under Top Hipi Stars" + Firstprofile);
			extent.extentLogger("", "First Profile under Top Hipi Stars" + Firstprofile);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"),
					Firstprofile);
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosNameInUserProfile(Firstprofile), Firstprofile);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
		}

	}

	// 02/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1591(String userType) throws Exception {

		extent.HeaderChildNode("T1591_Verify if user able to do vertical scroll in the discover page");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		Swipe("UP", 2);
		if (verifyElementDisplayed(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage)) {
			logger.info(
					"User not able to scroll vertically of the dicover page inorder to see the next configured rails");
			extent.extentLoggerFail("",
					"User not able to scroll vertically of the dicover page inorder to see the next configured rails");
		} else {

			logger.info("User able to scroll vertically of the discover page inorder to see the next configured rails");
			extent.extentLoggerPass("",
					"User able to scroll vertically of the dicover page inorder to see the next configured rails");
		}
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		waitTime(3000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

	}

	// 03/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1556(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1556_Logged In User Verify for Profile Click on rail");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
					"Top Hipi Stars");
			waitTime(3000);
			String Firstprofile = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			logger.info("First Profile under Top Hipi Stars" + Firstprofile);
			extent.extentLogger("", "First Profile under Top Hipi Stars" + Firstprofile);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"),
					Firstprofile);
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back arrow Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
		}
	}

	// 03/12/2021
	// k===============================================Discover=P0=================================================

	public void UnFollowAllUsers(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following in profile");
			waitTime(2000);
			for (;;) {
				if (verifyElementDisplayed(IOSHipiNeoProfilePage.objiosFollowingIconUnderFollowingTab)) {
					click(IOSHipiNeoProfilePage.objiosFollowingIconUnderFollowingTab, "Following");
					waitTime(2000);
					PartialCommentsSwipeiOS("Up", 2);
				} else {
					break;
				}

			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back from profile");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

		}
	}

	// 03/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1561(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1561_Logged In User: Verify for click on follow button from the user list page");
			UnFollowAllUsers(userType);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
					"Top Hipi Stars");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosRightFacingArrowForTray("Top Hipi Stars"), "Top Hipi Stars Arrow");
			waitTime(3000);
			String usernameinfollow = getText(IOSHiPiNeoDiscoverPage.getUserNameWithFollowrefference(1, 1));
			System.out.println(usernameinfollow);
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosFollowInRails, "Follow Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow Button");
			waitTime(2000);
			Swipe("DOWN", 1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following in profile");
			waitTime(2000);
			String usernameinfollowing = getText(IOSHiPiNeoDiscoverPage.getUserNameWithFollowingReference(1, 2))
					.substring(1, 6);
			System.out.println(usernameinfollowing);
			waitTime(2000);
			if (usernameinfollow.contains(usernameinfollowing)) {
				logger.info(
						"By tapping follow button that respected user gets followed and it displays under following list");
				extent.extentLoggerPass("",
						"By tapping follow button that respected user gets followed and it displays under following list");

			} else {

				logger.info(
						"By taping follow button that respected user does not get followed and it does not displays under following list");
				extent.extentLoggerFail("",
						"By taping follow button that respected user does not get followed and it does not displays under following list");
			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	// 03/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1580(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1580_Logged In User- Verify for search field on the user followers tab");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
					"Top Hipi Stars");
			waitTime(3000);
			String Firstprofile = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			logger.info("First Profile under Top Hipi Stars" + Firstprofile);
			extent.extentLogger("", "First Profile under Top Hipi Stars" + Firstprofile);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"),
					Firstprofile);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	// 03/12/2021
	// k===============================================Discover=P0=================================================
	public void Discover_T1564(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1564_Logged In User -Verify for profile details page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
					"Top Hipi Stars");
			waitTime(3000);
			String Firstprofile = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			logger.info("First Profile under Top Hipi Stars" + Firstprofile);
			extent.extentLogger("", "First Profile under Top Hipi Stars" + Firstprofile);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"),
					Firstprofile);
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Likes"), "Likes");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");

			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosProfilePictureInProfilePage, "Profile Picture");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosShareProfileInProfilePage, "Share Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}
	// 03/12/2021
	// k===============================================Discover=P0=================================================

	public void Discover_T1340(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1340_Guest User- Verify if user able to see all categories results in the Top tab ");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Top"), "Top");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "Sounds");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Hashtags"), "Hashtags");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	public void Discover_T1344(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1344_Logged_In User- Verify if user able to see all categories results in the Top tab ");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Top"), "Top");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "Sounds");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Hashtags"), "Hashtags");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	// 13/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1303_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1303_Guest User: Verify for discover option click");

			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage, "Search Icon")) {
				logger.info("Guest User able to tap on discover option and on tap it is navigating to Discover page");
				extentLoggerPass("",
						"Guest User able to tap on discover option and on tap it is navigating to Discover page");
			} else {
				logger.info(
						"Guest User not able to tap on discover option and on tap it is not navigating to Discover page");
				extentLoggerFail("",
						"Guest not User able to tap on discover option and on tap it is not navigating to Discover page");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	public void Discover_T1313_P0(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode("T1313_Logged In User: Verify for discover option click");

			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage, "Search Icon")) {
				logger.info("Guest User able to tap on discover option and on tap it is navigating to Discover page");
				extentLoggerPass("",
						"Guest User able to tap on discover option and on tap it is navigating to Discover page");
			} else {
				logger.info(
						"Guest User not able to tap on discover option and on tap it is not navigating to Discover page");
				extentLoggerFail("",
						"Guest not User able to tap on discover option and on tap it is not navigating to Discover page");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	// 13/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1304_T1314(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1304_Guest User: Verify for user is able to navigate to Dicover page clicking upon Discover option");
		} else {
			extent.HeaderChildNode(
					"T1314_Logged In User :Verify for user is able to navigate to Dicover page clicking upon Discover option");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage, "Search Icon")) {
			logger.info("user able to navigate to discover page");
			extentLoggerPass("", "user able to navigate to discover page");
		} else {
			logger.info("user not able to navigate to discover page");
			extentLoggerFail("", "user not able to navigate to discover page");
		}

		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
	}

	// 14/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1308_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1308_Guest User - Verify for Search field click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow")) {
				logger.info(
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
				extentLoggerPass("",
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
			} else {
				logger.info(
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
				extentLoggerFail("",
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
			}
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button")) {
				logger.info("User able to tap on search field");
				extentLoggerPass("", "User able to tap on search field");
			} else {
				logger.info("User not able to tap on search field");
				extentLoggerFail("", "User not able to tap on search field");
			}
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	public void Discover_T1317_P2(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1317_Guest User - Verify for Search field click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow")) {
				logger.info(
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
				extentLoggerPass("",
						"On tap search field guest user able to navigate to search parent page(recent Dicover page)");
			} else {
				logger.info(
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
				extentLoggerFail("",
						"On tap search field guest user not able to navigate to search parent page(recent Dicover page)");
			}
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button")) {
				logger.info("User able to tap on search field");
				extentLoggerPass("", "User able to tap on search field");
			} else {
				logger.info("User not able to tap on search field");
				extentLoggerFail("", "User not able to tap on search field");
			}
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	// 14/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1321(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1321_Verify for Search parent page (recent search page) keyboard");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button in keybord")) {
				logger.info("User is able to get keyboard on search parent page");
				extentLoggerPass("", "User is able to get keyboard on search parent page");
			} else {
				logger.info("User is not able to get keyboard on search parent page");
				extentLoggerFail("", "User is not able to get keyboard on search parent page");
			}
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
			waitTime(3000);
		}
	}

	// 14/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1325_T1332(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1325_Guest user- Verify for Search parent page (recent search page)search field");
		} else {
			extent.HeaderChildNode(
					"T1332_Logged In user- Verify for Search parent page (recent search page)search field");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(3000);
		String expectedresult = "trivedi";
		click(IOSHiPiNeoDiscoverPage.keyboard("t"), "t");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.keyboard("r"), "r");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.keyboard("i"), "i");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.keyboard("v"), "v");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.keyboard("e"), "e");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.keyboard("d"), "d");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.keyboard("i"), "i");
		waitTime(2000);
		String actualresult = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		if (expectedresult.equalsIgnoreCase(actualresult)) {
			logger.info("What ever guest user is typing on keyboard it is printing on search field");
			extentLoggerPass("", "What ever guest user is typing on keyboard it is printing on search field");
		} else {
			logger.info("What ever guest user is typing on keyboard it is not printing on search field");
			extentLoggerFail("", "What ever guest user is typing on keyboard it is not printing on search field");
		}
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
	}

	// 14/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1327(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1327_Guest user- Verify for Search parent page (recent search page)Verify if user gets the auto suggestions upon entering three characters");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.keyboard("s"), "s");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("e"), "e");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("l"), "l");
			waitTime(2000);
			String expectedresult = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			String text1 = getText(IOSHiPiNeoDiscoverPage.objiosAutoSuggestionsInSearchParentPage);
			String actualresult = text1.substring(0, 3);
			System.out.println(actualresult);
			if (expectedresult.equalsIgnoreCase(actualresult)) {
				logger.info(
						"After guest user giving input of three character user  getting auto suggestions on the screen ");
				extentLoggerPass("",
						"After guest user giving input of three character user  getting auto suggestions on the screen ");
			} else {
				logger.info(
						"After guest user giving input of three character user not getting auto suggestions on the screen ");
				extentLoggerFail("",
						"After guest user giving input of three character user not getting auto suggestions on the screen ");
			}
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	// 15/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1320(String userType) throws Exception {
		extent.HeaderChildNode("T1320_Verify for Search field design");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		Dimension size = getDriver().manage().window().getSize();
		System.out.println(size);
		int w = size.width / 2;
		logger.info("Screen middle point " + w);
		extentLogger("", "Screen middle point " + w);
		WebElement searchbox = getDriver().findElement(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		WebElement searchicon = getDriver().findElement(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage);
		int p = searchbox.getLocation().getX();
		int q = searchicon.getLocation().getX();
		logger.info("X location of search box " + p);
		extentLogger("", "X location of search box" + p);
		if ((p < w) && (q < w)) {
			logger.info("secrh icon and search text is displayed left side of input box");
			extent.extentLoggerPass("", "secrh icon and search text is displayed left side of input box");
		} else {
			logger.info("secrh icon and search text is not displayed left side of input box");
			extent.extentLoggerPass("", "secrh icon and search text is not displayed left side of input box");
		}
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
	}

	// 15/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1323(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1323_Guest User- Verify for Search parent page (recent search page) field");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			Dimension size = getDriver().manage().window().getSize();
			System.out.println(size);
			int w = (int) (size.height * 0.2);
			logger.info("Screen 20% height " + w);
			extentLogger("", "Screen 20% height " + w);
			WebElement searchbox = getDriver().findElement(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			int p = searchbox.getLocation().getY();
			logger.info("Y location of search box " + p);
			extentLogger("", "Y location of search box" + p);
			String expectedtext = "Search";
			String actualresult = searchbox.getText();
			System.out.println(actualresult);
			if ((p < w) && (expectedtext.equalsIgnoreCase(actualresult))) {
				logger.info("Search field is display on the top of the page and search text is written over it");
				extent.extentLoggerPass("",
						"Search field is display on the top of the page and search text is written over it");
			} else {
				logger.info(
						"Search field is not display on the top of the page and search text is not written over it");
				extent.extentLoggerPass("",
						"Search field is not display on the top of the page and search text is not written over it");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		}
	}

	// 15/12/2021
	// k===============================================Discover=P1=================================================

	public void Discover_T1331_T1338(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1331_Guest User- Verify the Searched result page");
		} else {
			extent.HeaderChildNode("T1338_Logged In User- Verify the Searched result page");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(3000);
		String expectedresult = "Himanshikhurana";
		String actualresult = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		if (expectedresult.equalsIgnoreCase(actualresult)) {
			logger.info("Search field(key words) is displayed");
			extent.extentLoggerPass("", "Search field(key words) is displayed");
		} else {
			logger.info("Search field(key words) is not displayed");
			extent.extentLoggerPass("", "Search field(key words) is not displayed");
		}
		verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Top"), "Top");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "Sounds");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Hashtags"), "Hashtags");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

	}

//15/12/2021 k===============================================Discover=P1=================================================

	public void Discover_T1343(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1343_Logged In User- Verify if user able to click on the other tabs from the displayed results");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("USERS"), "Users");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("VIDEOS"), "Users");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("SOUNDS"), "Sounds");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("SOUNDS"), "Sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

//16/12/2021 // Till here sent to Mahesh k===============================================Discover=P1=================================================

	public void Discover_T1417_T1448(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1417_Logged in User - Check if user is redirected to sound tab on the searched result page by tapping 'back' in Sound Detail Screen");
		} else {
			extent.HeaderChildNode(
					"T1448_Guest User - Check if user is redirected to sound tab on the searched result page by tapping 'back' in Sound Detail Screen");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Text");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "sounds");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
			logger.info(
					"User able to redirected to searched sound tab screen on tapping on 'back' in Sound Detail Screen");
			extent.extentLoggerPass("",
					"User able to redirected to searched sound tab screen on tapping on 'back' in Sound Detail Screen");
		} else {
			logger.info(
					"User not able to redirected to searched sound tab screen on tapping on 'back' in Sound Detail Screen");
			extent.extentLoggerFail("",
					"User not able to redirected to searched sound tab screen on tapping on 'back' in Sound Detail Screen");
		}
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		waitTime(3000);
	}

//16/12/2021 k===============================================Discover=P1=================================================

	public void Discover_T1421_T1423(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1421_T1423_Logged in User - Check if user is able to add a newly 'original sound' to favourite");
			DeleteFavourite();
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(3000);
			if (!verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites")) {
				click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
				waitTime(3000);
			} else {
				click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
				waitTime(3000);
			}
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, " bookmark");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added favorite")) {
				logger.info("User able to add a newly 'original sound' to favourite");
				extent.extentLoggerPass("", "User able to add a newly 'original sound' to favourite");
			} else {
				logger.info("User not able to add a newly 'original sound' to favourite");
				extent.extentLoggerFail("", "User not able to add a newly 'original sound' to favourite");
			}
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, " bookmark");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				logger.info("User not able to add and remove 'original sound' from favourite");
				extent.extentLoggerFail("", "User not able to add and remove 'original sound' from favourite");
			} else {
				logger.info("User able to add and remove 'original sound' from favourite");
				extent.extentLoggerPass("", "User able to add and remove 'original sound' from favourite");
			}
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
			waitTime(3000);
		}
	}
	

	public void DeleteFavourite() throws Exception {
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
		waitTime(3000);
		for (;;) {
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				PartialSwipe("UP", 1);
				waitTime(3000);
				if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
					click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
				}
				waitTime(3000);
				if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab,
						"Added To Favourites")) {
					click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
				}
				waitTime(3000);
				click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
				waitTime(3000);
			} else {
				logger.info("0 Favourites");
				break;
			}
		}
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		waitTime(3000);

	}

//16/12/2021 k===============================================Discover=P1=================================================

	public void Discover_T1424(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1424_Logged in User - Check the sound is removed from profile favourites");
			DeleteFavourite();
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				logger.info("Verified the sound is not able to removed from profile favourites");
				extent.extentLoggerFail("", "Verified the sound is not able to removed from profile favourites");
			} else {
				logger.info("Verified the sound is able to removed from profile favourites");
				extent.extentLoggerPass("", "Verified the sound is able to removed from profile favourites");
			}
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
			waitTime(3000);

		}
	}

//17/12/2021 k===============================================Discover=P1=================================================

	public void Discover_T1407(String userType) throws Exception {
		extent.HeaderChildNode("T1407_Verify if user clicks on any sounds from the respective tab and validate");
		if (!userType.equalsIgnoreCase("Guest")) {
			DeleteFavourite();
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Text");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "sounds");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
		waitTime(3000);
		if ((verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites"))
				|| (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab,
						"Added To Favourites"))) {
			logger.info("User able to tap on any sounds from the list and on tap it is redirect to sound deails page");
			extent.extentLoggerPass("",
					"User able to tap on any sounds from the list and on tap it is redirect to sound deails page");
		} else {
			logger.info(
					"User not able to tap on any sounds from the list and on tap it is not redirect to sound deails page");
			extent.extentLoggerFail("",
					"User not able to tap on any sounds from the list and on tap it is not redirect to sound deails page");
		}
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		waitTime(3000);
	}

//17/12/2021 k===============================================Discover=P1=================================================

	public void Discover_T1404(String userType) throws Exception {
		extent.HeaderChildNode(
				"T1404_Verify if user able to play any video from the videos tab of the searched results");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(3000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Videos"), "Videos");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "PlayIcon");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosPauseButtonInVideos, "PauseButton")) {
			logger.info("User not able to play any video from the videos tab under the searched results");
			extent.extentLoggerFail("",
					"User not able to play any video from the videos tab under the searched results");
		} else {
			logger.info("User able to play any video from the videos tab under the searched results");
			extent.extentLoggerPass("", "User able to play any video from the videos tab under the searched results");
		}
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		waitTime(3000);
	}

//17/12/2021 k===============================================Discover=P1=================================================
	public void Discover_T1315(String userType) throws Exception {
		extent.HeaderChildNode("T1315_Logged In User User: Verify for discovery page");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage, "Search Icon");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field in Discover page");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
				"Top Hipi Stars Rail");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
				"Top Hipi Stars Rail");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("TV Zone"),
				"TV Zone Rail");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("TV Zone"),
				"TV Zone Rail");
		waitTime(3000);

		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");
		waitTime(3000);
	}

//----------------------------Discover--kiran---march-31-03-2022--------------------------------------------------------------------------------------------------------------

	public void Discover_T1319(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1319_Verify for Search field position");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(7000);
			String Height1 = getAttributValue("y", IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			System.out.println(Height1);
			int Y1 = Integer.parseInt(Height1);
			System.out.println(Y1);
			String Height2 = getAttributValue("y", IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage);
			System.out.println(Height2);
			int Y2 = Integer.parseInt(Height2);
			System.out.println(Y2);
			if (Y1 < Y2) {
				logger.info("The search field position is at top above banner rail");
				extent.extentLoggerPass("", "The search field position is at top above banner rail");
			} else {
				logger.info("The search field position is not at top above banner rail");
				extent.extentLoggerFail("", "The search field position is not at top above banner rail");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1489_T1501(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1489_Guest User: Verif if banners are auto slided in the discover page");
		} else {
			extent.HeaderChildNode("T1501_Logged In User: Verif if banners are auto slided in the discover page");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		if (waitForElementDisplayediOS(IOSHiPiNeoDiscoverPage.objiosBannerImage3InDiscoverpage, 15, "Banner 3")) {
			String Height1 = getAttributValue("y", IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			System.out.println(Height1);
			int Y1 = Integer.parseInt(Height1);
			System.out.println(Y1);
			String Height2 = getAttributValue("y", IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage);
			System.out.println(Height2);
			int Y2 = Integer.parseInt(Height2);
			System.out.println(Y2);
			if (Y1 < Y2) {
				logger.info("Banners auto slided in the discover page and Banners displays below the search field");
				extent.extentLoggerPass("",
						"Banners auto slided in the discover page and Banners displays below the search field");
			}
		} else {
			logger.info("Banners not auto slided in the discover page and Banners not displays below the search field");
			extent.extentLoggerFail("",
					"Banners not auto slided in the discover page and Banners not displays below the search field");
		}
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	public void Discover_T1495(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1495_Guest User - Verify for back button on the banner details page and click");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner Image");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner Image")) {
				logger.info(
						"User able to tap on back button available on banner details page and on tap it is navigate to previous page");
				extent.extentLoggerPass("",
						"User able to tap on back button available on banner details page and on tap it is navigate to previous page");
			} else {
				logger.info(
						"User not able to tap on back button available on banner details page and on tap it is not navigate to previous page");
				extent.extentLoggerFail("",
						"User not able to tap on back button available on banner details page and on tap it is not navigate to previous page");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1507(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1507_Logged In User - Verify for back button on the banner details page and click");
			System.out.println("T1507_Logged In User - Verify for back button on the banner details page and click");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner Image");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner Image")) {
				logger.info(
						"User able to tap on back button available on banner details page and on tap it is navigate to previous page");
				extent.extentLoggerPass("",
						"User able to tap on back button available on banner details page and on tap it is navigate to previous page");
			} else {
				logger.info(
						"User not able to tap on back button available on banner details page and on tap it is not navigate to previous page");
				extent.extentLoggerFail("",
						"User not able to tap on back button available on banner details page and on tap it is not navigate to previous page");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1496_T1497(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1496_Guest User : Verify for Add Favorite button functionality\"+\r\n"
					+ "	\"T1497_Guest User : Verify for Add to Favorite button click");
			System.out.println("T1496_Guest User : Verify for Add Favorite button functionality\"+\r\n"
					+ "	\"T1497_Guest User : Verify for Add to Favorite button click");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Log in PopUp")) {
				logger.info("User able to tap on Add to favorites button and on tap it get login pop up");
				extent.extentLoggerPass("",
						"User able to tap on Add to favorites button and on tap it get login pop up");
			} else {
				logger.info(
						"User not able to tap on Add to favorites button and on tap it is not getting login pop up");
				extent.extentLoggerFail("",
						"User not able to tap on Add to favorites button and on tap it is not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void clickOnHashTagBanner() throws Exception {
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner Image");
		waitTime(10000);
		for (int i = 1; i <= 20; i++) {
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button")) {
				logger.info("click On Hash Tag Banner");
				extent.extentLoggerPass("", "click On Hash Tag Banner");
				break;
			} else {
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
				waitTime(2000);
				swipeRail(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "LEFT", 1);
				click(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner Image");
				waitTime(2000);
			}
		}
	}

//				public void Discover_T1498(String userType) throws Exception {
//					if (userType.equalsIgnoreCase("Guest")) {
//						extent.HeaderChildNode("T1498_Guest User : verify for sharing banner on multiple medium");
//						clickOnHashTagBanner();
//						click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button");
//						waitTime(2000);
//						if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "PopUp")) {
//							logger.info( "On tap share button user is getting log in pop up");
//							extent.extentLoggerPass("","On tap share button user is getting log in pop up");
//						}else {
//							logger.info("On tap share button user is not getting log in pop up");
//							extent.extentLoggerFail("", "On tap share button user is not getting log in pop up");
//						}
//						click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
//						waitTime(2000);
//						click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
//						waitTime(2000);
//						click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
//						waitTime(2000);
//					}
//				}

	public void Discover_T1499(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1499_Guest User : verify for share button click");
			System.out.println("T1499_Guest User : verify for share button click");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "PopUp")) {
				logger.info("Guest User able to tap on share button and on tap it is getting Login pop up");
				extent.extentLoggerPass("",
						"Guest User able to tap on share button and on tap it is getting Login pop up");
			} else {
				logger.info("Guest User not able to tap on share button and on tap it is not getting Login pop up");
				extent.extentLoggerFail("",
						"Guest User not able to tap on share button and on tap it is not getting Login pop up");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1500(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1500_Guest User : verify for create video camera button click and navigation");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosCreateVideoButtonInHastagPage, "Create Video Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "PopUp")) {
				logger.info("Guest User able to tap on create video button and on tap it is getting Login pop up");
				extent.extentLoggerPass("",
						"Guest User able to tap on create video button and on tap it is getting Login pop up");
			} else {
				logger.info(
						"Guest User not able to tap on create video button and on tap it is not getting Login pop up");
				extent.extentLoggerFail("",
						"Guest User not able to tap on create video button and on tap it is not getting Login pop up");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1492_T1504(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1492_Guest User-Verify for banner details page navigation");
			System.out.println("T1492_Guest User-Verify for banner details page navigation");
		} else {
			extent.HeaderChildNode("T1504_Logged In User -Verify for banner details page navigation");
			System.out.println("T1504_Logged In User -Verify for banner details page navigation");
		}
		clickOnHashTagBanner();
		if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button")) {
			logger.info("On tap on any banner from the discover page it is navigated to banner details page");
			extent.extentLoggerPass("",
					"On tap on any banner from the discover page it is navigated to banner details page");
		} else {
			logger.info("On tap on any banner from the discover page it is not navigated to banner details page");
			extent.extentLoggerFail("",
					"On tap on any banner from the discover page it is not navigated to banner details page");
		}
		click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	public void Discover_T1510(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1510_Logged In User : verify for sharing banner on multiple medium");
			System.out.println("T1510_Logged In User : verify for sharing banner on multiple medium");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Message");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosNewMessagesInMessageInShareButton, "New Message")) {
				logger.info(
						"User able to select any sharing app from the bottom window sheet and on click that app it is navigated to respective app page to share the banner");
				extent.extentLoggerPass("",
						"User able to select any sharing app from the bottom window sheet and on click that app it is navigated to respective app page to share the banner");
			} else {
				logger.info(
						"User not able to select any sharing app from the bottom window sheet and on click that app it is not navigated to respective app page to share the banner");
				extent.extentLoggerFail("",
						"User not able to select any sharing app from the bottom window sheet and on click that app it is not navigated to respective app page to share the banner");
			}
			click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Cross Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);

		}
	}

	public void Discover_T1511(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1511_Logged In User : verify for share button click");
			System.out.println("T1511_Logged In User : verify for share button click");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Message")) {
				logger.info(
						"User able to tap on share button and on tap user is getting sharing window with available share app options");
				extent.extentLoggerPass("",
						"User able to tap on share button and on tap user is getting sharing window with available share app options");
			} else {
				logger.info(
						"User not able to tap on share button and on tap user is not getting sharing window with available share app options");
				extent.extentLoggerFail("",
						"User not able to tap on share button and on tap user is not getting sharing window with available share app options");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Cross Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);

		}
	}

	public void Discover_T1512(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1512_Logged In User : verify for create video camera button click and navigation");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosCreateVideoButtonInHastagPage, "Create Video Button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(4000);
			if (verifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record Button")) {
				logger.info("On tap craete video button user is navigated to craete video page of creator Module");
				extent.extentLoggerPass("",
						"On tap craete video button user is navigated to craete video page of creator Module");
			} else {
				logger.info("On tap craete video button user is not navigated to craete video page of creator Module");
				extent.extentLoggerFail("",
						"On tap craete video button user is not navigated to craete video page of creator Module");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);

		}
	}

	public void DeleteFavouriteHashtags() throws Exception {
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hashtags Tab");
		waitTime(3000);
		for (;;) {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSHashtagImageInFavouriteHashtagPage, "Hashtage Image")) {
				click(IOSHipiNeoProfilePage.objiOSHashtagImageInFavouriteHashtagPage, "Hashtage Image");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
				waitTime(2000);
			} else {
				System.out.println("0 Hashtag Favourites");
				break;
			}
		}
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	public void Discover_T1508(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1508_Logged In User : Verify for Add Favorite button functionality");
			DeleteFavouriteHashtags();
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hashtags Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSHashtagImageInFavouriteHashtagPage, "Hashtage Image")) {
				logger.info(
						"favorited hashtag is getting saved on the favorite page of user profile under hashtag tab");
				extent.extentLoggerPass("",
						"favorited hashtag is getting saved on the favorite page of user profile under hashtag tab");
			} else {
				logger.info(
						"favorited hashtag is not getting saved on the favorite page of user profile under hashtag tab");
				extent.extentLoggerFail("",
						"favorited hashtag is not getting saved on the favorite page of user profile under hashtag tab");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1509(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1509_Logged In User : Verify for Add to Favorite button click");
			System.out.println("T1509_Logged In User : Verify for Add to Favorite button click");
			DeleteFavouriteHashtags();
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hashtags Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSHashtagImageInFavouriteHashtagPage, "Hashtage Image")) {
				logger.info(
						"favorited hashtag is getting saved on the favorite page of user profile under hashtag tab");
				extent.extentLoggerPass("",
						"favorited hashtag is getting saved on the favorite page of user profile under hashtag tab");
			} else {
				logger.info(
						"favorited hashtag is not getting saved on the favorite page of user profile under hashtag tab");
				extent.extentLoggerFail("",
						"favorited hashtag is not getting saved on the favorite page of user profile under hashtag tab");
			}
		}
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	public void Discover_T1493_T1505(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1493_Guest User- Verify banner details page");
		} else {
			extent.HeaderChildNode("T1505_Logged In User- Verify banner details page");
			DeleteFavouriteHashtags();
		}
		clickOnHashTagBanner();
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourite Button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share Button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosCreateVideoButtonInHastagPage, "Create Video Button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	public void Discover_T1494(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1494_Guest User-Verify for video clicks on the banners details page");
			clickOnHashTagBanner();
			click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInHastagPage, "First Video");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosHashtagSceenInHastagPage, "Hashtag Screen")) {
				logger.info(
						"Guest User able to tap on any video from the list of videos available on banner page and on tap video it is playing on the Hashtag");
				extent.extentLoggerPass("",
						"Guest User able to tap on any video from the list of videos available on banner page and on tap video it is playing on the Hashtag");
			} else {
				logger.info(
						"Guest User not able to tap on any video from the list of videos available on banner page and on tap video it is not playing on the Hashtag");
				extent.extentLoggerFail("",
						"Guest User not able to tap on any video from the list of videos available on banner page and on tap video it is not playing on the Hashtag");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1463(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1463_Logged in user - Check if user is able is see all hashtag related rails in discover");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosFirstVideoInHastagPage, "Video");
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosFirstVideoInHastagPage, "Video")) {
				logger.info("User able to See related hashtag videos on discover rails");
				extent.extentLoggerPass("", "User able to See related hashtag videos on discover rails");
			} else {
				logger.info("User not able to See related hashtag videos on discover rails");
				extent.extentLoggerFail("", "User not able to See related hashtag videos on discover rails");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// ==========================================2665==========================================================

	public void Discover_T1347(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1347_Guest User-Verify Users Tab on the search result page");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), userType);
			waitTime(2000);
			List<WebElement> Profile1 = findElements(IOSHiPiNeoDiscoverPage.objiosUserProfileInUserTab);
			int ProfileSize = Profile1.size();
			if (ProfileSize > 1) {
				verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserProfileInUserTab, "list of users");
				verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosProfileImage_1InUserTab, "user image");
				verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosProfileName_1InUserTab, "name");
				verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosprofile_1_total_followersInUserTab, "follower count");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1350(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1350_Guest User- Verify follow button and its click on the user profile page");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), userType);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosProfileImage_1InUserTab, "user image");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup")) {
				logger.info("On tap follow button guest user getting login pop up");
				extent.extentLoggerPass("", "On tap follow button guest user getting login pop up");
			} else {
				logger.info("On tap follow button guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap follow button guest user not getting login pop up");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1352(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1352_Guest User- Verify Followers tab and its click on the user profile page");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), userType);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosProfileImage_1InUserTab, "user image");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup")) {
				logger.info("On tap followers button guest user getting login pop up");
				extent.extentLoggerPass("", "On tap followers button guest user getting login pop up");
			} else {
				logger.info("On tap followers button guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap followers button guest user not getting login pop up");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1374(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1374_Guest User can tap on back button placed at left side upper corner and navaigate to respective page");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosProfileImage_1InUserTab, "user image");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search Field")) {
				logger.info(
						"Guest User can tap on back button placed at left side upper corner and navaigate to respective page");
				extent.extentLoggerPass("",
						"Guest User can tap on back button placed at left side upper corner and navaigate to respective page");
			} else {
				logger.info(
						"Guest User can not tap on back button placed at left side upper corner and not navaigate to respective page");
				extent.extentLoggerFail("",
						"Guest User can not tap on back button placed at left side upper corner and not navaigate to respective page");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1409(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1409_Verify if user play and pause any sounds clicking upon poster from the respective tab and validate the sound on device");
			System.out.println(
					"T1409_Verify if user play and pause any sounds clicking upon poster from the respective tab and validate the sound on device");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSound_1_Play_btnInSoundsTab, "Play Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSound_1_Pause_btnInSoundsTab, "Pause Button")) {
				click(IOSHiPiNeoDiscoverPage.objiosSound_1_Pause_btnInSoundsTab, "Pause Button");
				waitTime(2000);
				if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSound_1_Play_btnInSoundsTab, "Play Button")) {
					logger.info("User able to play and pause the song clicking upon user poster image");
					extent.extentLoggerPass("", "User able to play and pause the song clicking upon user poster image");
				} else {
					logger.info("User not able to play and pause the song clicking upon user poster image");
					extent.extentLoggerFail("",
							"User not able to play and pause the song clicking upon user poster image");
				}
			} else {
				logger.info("User not able to play and pause the song clicking upon user poster image");
				extent.extentLoggerFail("", "User not able to play and pause the song clicking upon user poster image");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1450_T1419(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"1450_Guest User - Check if user tapping on 'sound title' in the sound tab user is directed to 'sound detail screen' and verify 'sound title' is displayed");
		} else {
			extent.HeaderChildNode(
					"T1419_Logged in User - Check if user tapping on 'sound title' in the sound tab user is directed to 'sound detail screen' and verify 'sound title' is displayed");
		}
		clickOnFirstSearchedResult("Himanshi khurana", "No", "");
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sounds Title");
		waitTime(2000);
		if ((verifyElementExist(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use this sound"))
				&& (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundScreen, "Sound Title"))) {
			logger.info("User is directed to 'sound detail screen' and verified 'sound title' is  displayed");
			extent.extentLoggerPass("",
					"User is directed to 'sound detail screen' and verified 'sound title' is  displayed");
		} else {
			logger.info("User is not directed to 'sound detail screen' and 'sound title' is not displayed");
			extent.extentLoggerFail("",
					"User is not directed to 'sound detail screen' and 'sound title' is not displayed");
		}
		NavigateToHomPage();
	}

	public void Discover_T1465(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1465_Logged in user - Check user is able to view full player of hashtag videos ");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "Play Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosDiscoverScreen, "Discover Screen")) {
				logger.info("User is navigate to full player view");
				extent.extentLoggerPass("", "User is navigate to full player view");
			} else {
				logger.info("User is not navigate to full player view");
				extent.extentLoggerFail("", "User is not navigate to full player view");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1455_T1435(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1455_Guest User - Check if user is able to view name of the user who has created the video by original sound");
		} else {
			extent.HeaderChildNode(
					"T1435_Logged in User - Check if user is able to view name of the user who has created the video by original sound");
		}
		clickOnFirstSearchedResult("Himanshi khurana", "No", "");
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosOriginalSoundSoundScreen, "Name")) {
			logger.info("User able to view name of the user who has created the video by original sound");
			extent.extentLoggerPass("",
					"User able to view name of the user who has created the video by original sound");
		} else {
			logger.info("User not able to view name of the user who has created the video by original sound");
			extent.extentLoggerFail("",
					"User not able to view name of the user who has created the video by original sound");
		}
		NavigateToHomPage();
	}

	public void Discover_T1345(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1345_Logged In User-Verify for User should be able to see all categories results in the top tab");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			String Name1 = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), "Users Tab");
			waitTime(2000);
			String Name2 = getText(IOSHiPiNeoDiscoverPage.objiosProfileName_1InUserTab);
			waitTime(2000);
			if (Name1.equalsIgnoreCase(Name2)) {
				logger.info(
						"User able to see all the other user profiles respective to the searched keyword under the User tab");
				extent.extentLoggerPass("",
						"User able to see all the other user profiles respective to the searched keyword under the User tab");
			} else {
				logger.info(
						"User not able to see all the other user profiles respective to the searched keyword under the User tab");
				extent.extentLoggerFail("",
						"User not able to see all the other user profiles respective to the searched keyword under the User tab");
			}
			NavigateToHomPage();

		}
	}

	public void Discover_T1388(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1388_Logged In User- Verify for User can search any following user from the list");
			clickOnFirstSearchedResult("Dalljiet Kaur", "No", "");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosProfile_1InUserTab, "Pofile 1");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("a"), "a");
			waitTime(1000);
			click(IOSHiPiNeoDiscoverPage.keyboard("b"), "b");
			waitTime(1000);
			click(IOSHiPiNeoDiscoverPage.keyboard("h"), "h");
			waitTime(1000);
			click(IOSHiPiNeoDiscoverPage.keyboard("i"), "i");
			waitTime(1000);
			String User1 = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
			String User2 = User1.substring(0, 2);
			System.out.println(User2);
			String Name1 = getText(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen);
			String Name2 = Name1.substring(0, 2);
			System.out.println(Name2);
			if (User2.equalsIgnoreCase(Name2)) {
				logger.info(
						"user can type on search field under following tab and result is displayed respective to the searched data");
				extent.extentLoggerPass("",
						"user can type on search field under following tab and result is displayed respective to the searched data");
			} else {
				logger.info(
						"user can not type on search field under following tab and result is not displayed respective to the searched data");
				extent.extentLoggerFail("",
						"user can not type on search field under following tab and result is not displayed respective to the searched data");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1439(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1439_Logged in User - Check if user is able to view number of likes on video in the Sound details page");
			clickOnFirstSearchedResult("Himanshi Khurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosTotalLikesCountsInUseThisSoundScreen, "Like")) {
				logger.info("User able to view number of likes on video in the Sound details page");
				extent.extentLoggerPass("", "User able to view number of likes on video in the Sound details page");
			} else {
				logger.info("User not able to view number of likes on video in the Sound details page");
				extent.extentLoggerFail("", "User not able to view number of likes on video in the Sound details page");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1440(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1440_Logged in User - Check if user is able to view number on views on video in the Sound details page");
			clickOnFirstSearchedResult("Himanshi Khurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "Views")) {
				logger.info("User able to view number of Views on video in the Sound details page");
				extent.extentLoggerPass("", "User able to view number of Views on video in the Sound details page");
			} else {
				logger.info("User not able to view number of Views on video in the Sound details page");
				extent.extentLoggerFail("", "User not able to view number of Views on video in the Sound details page");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1442(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1442_Logged in user - Check if the selected sound is displayed in creator screen after tapping on Use thi Sound button in Sound detail page");
			clickOnFirstSearchedResult("Himanshi Khurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
			waitTime(2000);
			String sound1 = getText(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundScreen);
			System.out.println(sound1);
			click(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound Button");
			waitTime(2000);
			String sound2 = getText(IOSHipiCreateVideoPage.objiosSoundTitleInRecordScreen);
			String sound3 = sound2.substring(1);
			System.out.println(sound3);
			if (sound1.equalsIgnoreCase(sound3)) {
				logger.info(
						"The selected sound is displayed in creator screen after tapping on Use thi Sound button in Sound detail page");
				extent.extentLoggerPass("",
						"The selected sound is displayed in creator screen after tapping on Use thi Sound button in Sound detail page");
			} else {
				logger.info(
						"The selected sound is not displayed in creator screen after tapping on Use thi Sound button in Sound detail page");
				extent.extentLoggerFail("",
						"The selected sound is not displayed in creator screen after tapping on Use thi Sound button in Sound detail page");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void Discover_T1425(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1425_Logged in User - Check if user is able to view related videos for a new/existing sound");
			clickOnFirstSearchedResult("Himanshi Khurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
			waitTime(2000);
			String sound1 = getText(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundScreen);
			System.out.println(sound1);
			click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "Totle views");
			waitTime(2000);
			String sound2 = getText(IOSHiPiNeoDiscoverPage.objiosTitleInFullSoundScreen);
			System.out.println(sound2);
			String[] sound3 = sound2.split("•");
			System.out.println(sound3[1]);
			String sound4 = sound3[1].substring(1);
			System.out.println(sound4);
			if (sound1.equalsIgnoreCase(sound4)) {
				logger.info("User able to view related videos for a new/existing sound");
				extent.extentLoggerPass("", "User able to view related videos for a new/existing sound");
			} else {
				logger.info("User not able to view related videos for a new/existing sound");
				extent.extentLoggerFail("", "User not able to view related videos for a new/existing sound");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1452(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1452_Guest User - Check if user is able to view related videos for a new/existing sound");
			clickOnFirstSearchedResult("Himanshi Khurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
			waitTime(2000);
			String sound1 = getText(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundScreen);
			System.out.println(sound1);
			click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "Totle views");
			waitTime(2000);
			String sound2 = getText(IOSHiPiNeoDiscoverPage.objiosTitleInFullSoundScreen);
			System.out.println(sound2);
			String[] sound3 = sound2.split("•");
			System.out.println(sound3[1]);
			String sound4 = sound3[1].substring(1);
			System.out.println(sound4);
			if (sound1.equalsIgnoreCase(sound4)) {
				logger.info("User able to view related videos for a new/existing sound");
				extent.extentLoggerPass("", "User able to view related videos for a new/existing sound");
			} else {
				logger.info("User not able to view related videos for a new/existing sound");
				extent.extentLoggerFail("", "User not able to view related videos for a new/existing sound");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1426(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1426_Logged in User - Check if user is able to create video for existing sound effect");
			clickOnFirstSearchedResult("Himanshi Khurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Sound Title");
			waitTime(2000);
			String sound1 = getText(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundScreen);
			System.out.println(sound1);
			click(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 50, "Next Button");
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng,50,"Post Button");
			click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 50, "Profile");
			OpenRecentlyPostedVideoOrLastCreatedVideo();
			String sound2 = getText(IOSHiPiNeoDiscoverPage.objiosTitleInFullSoundScreen);
			System.out.println(sound2);
			String[] sound3 = sound2.split("•");
			System.out.println(sound3[1]);
			String sound4 = sound3[1].substring(1);
			System.out.println(sound4);
			if (sound1.equalsIgnoreCase(sound4)) {
				logger.info("User able to create video for existing sound effect");
				extent.extentLoggerPass("", "User able to create video for existing sound effect");
			} else {
				logger.info("User not able to create video for existing sound effect");
				extent.extentLoggerFail("", "User not able to create video for existing sound effect");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1349(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1349_Guest User: Verify user profile page");
			clickOnFirstSearchedResult("HimanshiKhurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosProfile_1InUserTab, "Pofile 1");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup")) {
				logger.info("On tap Followers guest user getting login pop up");
				extent.extentLoggerPass("", "On tap Followers guest user getting login pop up");
			} else {
				logger.info("On tap Followers guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap Followers guest user not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow Button");
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup")) {
				logger.info("On tap Follow guest user getting login pop up");
				extent.extentLoggerPass("", "On tap Follow guest user getting login pop up");
			} else {
				logger.info("On tap Follow guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap Follow guest user not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(4000);
			click(IOSHipiNeoProfilePage.BlockUserOptionIn3dotsPopUp, "Block user option");
			waitTime(4000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup")) {
				logger.info("On tap Share button guest user getting login pop up");
				extent.extentLoggerPass("", "On tap Share button guest user getting login pop up");
			} else {
				logger.info("On tap Share button guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap Share button guest user not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Icon");
			waitTime(2000);
			List<WebElement> videos = findElements(IOSHipiNeoProfilePage.objiOSAllVideoInPrivateVideoScreen);
			int count = videos.size();
			if (count > 2) {
				logger.info("Guest user can access list of videos On profile details Page");
				extent.extentLoggerPass("", "Guest user can access list of videos On profile details Page");
			} else {
				logger.info("Guest user can not access list of videos On profile details Page");
				extent.extentLoggerFail("", "Guest user can not access list of videos On profile details Page");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1403(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1403_Verify if all videos are displaying in the videos tab related to the searched keyword");
			clickOnFirstSearchedResult("HimanshiKhurana", "no", "Sounds");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Videos"), "Videos Tab");
			waitTime(2000);
			String Name1 = getText(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage);
			waitTime(2000);
			System.out.println(Name1);
			click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInVideosScreen, "First Video");
			waitTime(2000);
			String Name2 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			String Name3 = Name2.substring(1);
			waitTime(2000);
			System.out.println(Name3);
			if (Name1.equalsIgnoreCase(Name3)) {
				logger.info("User able to to see all the videos in the videos tab respective to the searched keyword");
				extent.extentLoggerPass("",
						"User able to to see all the videos in the videos tab respective to the searched keyword");
			} else {
				logger.info(
						"User not able to to see all the videos in the videos tab respective to the searched keyword");
				extent.extentLoggerFail("",
						"User not able to to see all the videos in the videos tab respective to the searched keyword");
			}
			NavigateToHomPage();
		}
	}

//	public void Discover_T1487(String userType) throws Exception {
//		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
//			extent.HeaderChildNode("T1487_Verify if user able to scroll horizontally to the configured rails");
//			clickOnFirstSearchedResult("HimanshiKhurana", "no", "Sounds");
//			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button In Keyboard");
//			waitTime(2000);
//			WebElement Profile2 = findElement(IOSHiPiNeoDiscoverPage.objiosProfileImage2InTopScreen);
//			waitTime(2000);
//			WebElement profile1 = findElement(IOSHiPiNeoDiscoverPage.objiosProfileImage1InTopScreen);
//			int Profile1X = profile1.getLocation().getX();
//			System.out.println(Profile1X);
//			int Profile1Y = profile1.getLocation().getY();
//			System.out.println(Profile1Y);
//			SwipeAnElementiOS(Profile2, Profile1X, Profile1Y);
//			if (!verifyElementExist(IOSHiPiNeoDiscoverPage.objiosProfileImage1InTopScreen, "Profile Image 1")) {
//				logger.info(
//						"User able to scroll horizontally for all the configured rails inorder to see next data in the search result page");
//				extent.extentLoggerPass("",
//						"User able to scroll horizontally for all the configured rails inorder to see next data in the search result page");
//			} else {
//				logger.info(
//						"User not able to scroll horizontally for all the configured rails inorder to see next data in the search result page");
//				extent.extentLoggerFail("",
//						"User not able to scroll horizontally for all the configured rails inorder to see next data in the search result page");
//			}
//			NavigateToHomPage();
//		}
//	}

	// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// =========================================================================
	// Feed Screed = P1
	// =========================================================================================
	public void FeedScreen_T247_T255(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T247_Guest User-Verify for SHOP Page gets closed by clicking bottom menus.Like Discover/Me/Creator");
		} else {
			extent.HeaderChildNode(
					"T255_Logged In User-Verify for SHOP Page gets closed by clicking bottom menus.Like Discover/Me/Creator");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "ShopBtn");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "DiscoverBtn");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "DiscoverBtn");
		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "SearchField")) {
			logger.info(
					"User able to navigate other tab from shop page by clicking on respective tab like Discover or Creator or Me tab");
			extent.extentLoggerPass("",
					"User able to navigate other tab from shop page by clicking on respective tab like Discover or Creator or Me tab");
		} else {
			logger.info(
					"User not able to navigate other tab from shop page by clicking on respective tab like Discover or Creator or Me tab");
			extent.extentLoggerFail("",
					"User not able to navigate other tab from shop page by clicking on respective tab like Discover or Creator or Me tab");
		}
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Btn");

	}

//====================s prfile mapped=================================================================
	public void Profile_T1164(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1164_Logged in user -Check privacy setting is visible in private tab ");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			createVideoType("No", "No", "No", "No", "Private", "Private", "yes");
			waitTime(4000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(2000);
			PartialSwipeiOS("DOWN", 4);

			if (!waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage, 5,
					"Publishing In Process Message")) {
				for (int i = 1; i <= 20; i++) {
					if (!verifyElementExist(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage,
							"Publishing In Process Message")) {
						PartialSwipeiOS("DOWN", i);

					} else {
						break;
					}

				}

			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSaveVideoInPrivateVideos, "Save Video In Private Videos");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo,
					"Back Arrow In Private Video");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo,
					"Back Arrow In Private Video");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1160(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1160_Logged in user -Check user is able to tap on any private video ");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyUserpage, "Verify User Page");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo,
					"Back Arrow In Private Video");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	public void Profile_T1115(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1115_Logged in user -Check if user is able to delete a selected video saved in draft ");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosprofiletab, "profile tab");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft video");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDraftPageInProfilePage, "Draft Page");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage,
					"Video Button Play In Drafts Page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyUserpage, "User page");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDeleteButtonIndraftsVideo,
					"Delete Button In drafts Video");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosDeleteButtonIndraftsVideo, 50, "Delete pop up");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDeleteButtonYes, "Delete Button Yes");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow In Draft Video")) {
				verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo,
						"Back Arrow In Draft Video");
			}
			waitTime(3000);
//							if (verifyElementExist(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow")) {
//								verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo,
//										"Back Arrow");
//							}
//							waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1117(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1117_Logged in user - Check if user is redirected to Account detail screen when tapped on back ");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosprofiletab, "profile tab");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft video");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDraftPageInProfilePage, "Draft Page");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo,
					"Back Arrow In Private Video");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosProfilPageVerify, "Profil Page verify");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	public void Profile_T1220(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1220_Logged in user -Check user is  able to tap on shoppable tab in profile");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosProfilPageVerify, "Profile Page verify");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosShoppableVideoInProfilePage,
					"Shoppable Video In Profile Page");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosNoshoppable, "No Shoppable video text");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1087(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1087_Logged in user -Check the video saved as draft is displayed in profile/account detail screen");
			
			CreateVideo("NO", "NO", "Yes");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosProfilPageVerify, "Profil Page verify");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosprofiletab, "profile tab");
			waitTime(3000);
			PartialSwipeiOS("Down", 6);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft video");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

//==============================s==20/12/21============================================================

	public void FeedScreen_T181_T216(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T181_Guest User- Verify for save look button functionality");
		} else {
			extent.HeaderChildNode("T216_logged In user- Verify for save look button functionality");
		}
		deleteProductsInSavedMoments();
		waitTime(3000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookIcon, "SaveLookIcon");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSProductListInShopButton, "ProductList");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInShopPage, "Cross Icon In Shop Page");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}

	public void FeedScreen_T210(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T210_Logged In User- Verify for user should be able to see Shop button when they coming from any other tabs (Discover/Me) and watching shoppable video.");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button")) {
				logger.info("Shop button is visible for all the shoppable videos.");
				extent.extentLoggerPass("Shop Button", "Shop button is visible for all the shoppable videos.");
			} else {
				logger.info("Shop button is not be visible for all the shoppable videos.");
				extent.extentLoggerFail("Shop Button", "Shop button is not be visible for all the shoppable videos.");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");
		}

	}

	public void FeedScreen_T211(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T211_Logged In User- Verify for Shop button should not Visible when user in other tab like Discover/Creator/Me");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button")) {
				logger.info("Shop button is visible in any other tab tab like Discover/Creator/Me.");
				extent.extentLoggerFail("Shop Button",
						"Shop button is visible in any other tab tab like Discover/Creator/Me");
			} else {
				logger.info("Shop button is not visible in any other tab tab like Discover/Creator/Me");
				extent.extentLoggerPass("Shop Button",
						"Shop button is not visible in any other tab tab like Discover/Creator/Me");
			}
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}

	}

	public void FeedScreen_T182_T217(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T182_Guest User- Verify for save look button functionality once the small carousel banner is closed");
		} else {
			extent.HeaderChildNode(
					"T217_logged In User- Verify for save look button functionality once the small carousel banner is closed");
		}
		deleteProductsInSavedMoments();
		waitTime(5000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSProductListInShopButton, "ProductList");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiOSCrossIconInShopPage, "Cross Icon In Shop Page");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}

	public void FeedScreen_T249_Feed_Shop(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T249_Guest User- Verify two sections of Shop Page are: IN THIS VIDEO and SAVED MOMENTS");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In This Video");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moment");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Delete Button");
			CloseTheShopBar();
		}
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");

	}

	public void FeedScreen_Shopbutton_video__T207(String userType) throws Exception {// p0
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode("T207_logged In User- Verify for the clickable functionality on Shop button");

			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(1000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);

			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);

				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info(userType
						+ " User is able to click on shop button and Shop details bottom up sheet is opened once shop button is clicked.");

				extent.extentLoggerPass("", userType
						+ " User is able to click on shop button and Shop details bottom up sheet is opened once shop button is clicked.");
			} else {
				logger.info(
						"The shopable video is not present  on the feed along with SHOP button and its functionality");

				extent.extentLoggerFail("",
						"The shopable video is not present  on the feed along with SHOP button and its functionality");
			}
			CloseTheShopBar();
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}

	}

	public void FeedScreen_T241ShopPage(String userType) throws Exception {// po
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode("T241_Logged In User - Verify for SAVED button functionality");
			System.out.println("T241_Logged In User - Verify for SAVED button functionality");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiOSProductListInShopButton, "ProductList");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "shop button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments In Shop Page");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
					"Delete Buttons Saved Moment");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop bar")) {
				CloseTheShopBar();
				waitTime(3000);
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");

		}
	}

	public void FeedScreen_T202(String userType) throws Exception {// p2
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T202_Guest User - Verify for product data inside Saved Moment tab");
			deleteProductsInSavedMoments();
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiOSProductListInShopButton, "ProductList");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "shop button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments In Shop Page");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
					"Delete Buttons Saved Moment");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");
		CloseTheShopBar();
		waitTime(2000);
		
		}

	}

	public void FeedScreen_T204(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T204_Guest User - Verify for SAVED button functionality");
			deleteProductsInSavedMoments();
			waitTime(2000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementExist(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close button");
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close button");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, "Saved button");
		}

	}

	public void FeedScreen_T243(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T243_Guest User - Verify for product data inside Saved Moment tab");
			deleteProductsInSavedMoments();
			waitTime(2500);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiOSProductListInShopButton, "ProductList");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "shop button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments In Shop Page");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
					"Delete Buttons Saved Moment");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");
		}

	}

	public void Discover_T1299(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1299_Guest User- Verify for discover option on application");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Search Button");
		}
	}

	public void Discover_T1300(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1300_Guest User-Verify if user able to click on the discover option from the bottom menu bar");

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Search Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	public void Discover_T1592(String userType) throws Exception {// p0
		extent.HeaderChildNode("T1592_Verify if user able to click on any item in the each rail");
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Search Button");
		waitTime(2000);
		ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
		waitTime(4000);
		String railName = getText(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Top Hipi Stars"));
		// String railName1 =railName.substring(1, 20);
		if (railName != null) {
			logger.info(railName + " : Rails are dsiplayed in discover page");
			extent.extentLogger("Rail", railName + " : Rails are dsiplayed in discover page");
		} else {
			logger.info("Rails are not dsiplayed in discover page");
			extent.extentLogger("Rail", "Rails are not dsiplayed in discover page");
		}
		// #HipiGOAT

		verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosrailviewallbutton(railName), "View All button");
		waitTime(3000);
		// String viewALLPageHearder =
		// getText(IOSHiPiNeoDiscoverPage.objiosViewAllPageHeader);
		WebElement viewALLPageHearder = getDriver().findElement(By.xpath("//*[contains(text(),'" + railName + "')]"));
		String header = viewALLPageHearder.getText();

		if (header.equals(railName)) {
			logger.info("User is navigated to rail page from discover page on clicking on view all button");
			logger.info("User is navigated to : " + viewALLPageHearder + " Page");
			extent.extentLogger("Rail",
					"User is navigated to rail page from discover page on clicking on view all button");
			extentLogger("Page", "User is navigated to : " + viewALLPageHearder + " Page");
		} else {
			logger.info("User is navigated to different rail page");
			extent.extentLogger("Rail", "User is navigated to different rail page");
		}
		BackFromTrendingRailShoppableVideo();
	}

	public void Discover_T1522(String userType) throws Exception {// p0
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1522_Guest User- Verify for click on follow button from the user list page");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Search Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosComedyZone, "Comedy Zone");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosComedyZone, "Comedy Zone");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Comedy Zone"),
					"Arrow icon of Comedy Zone tray");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objLoginToHipiInDiscoverPage, "Login To Hipi");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objCloseIconInDiscoverPage, "Close Icon");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}

	}

	// s============p1=========================================================
	public void Feed_Screen_T061(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1061_Guest User - Check if user is unable to perform Report action by tapping on it");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			// click(IOSHipiNeoHomePage.objiOSReportPopUp,"Report PopUp");
			click(IOSHipiNeoHomePage.SaveVideoReportNotInterestedAddToFavourites("Report"), "Report PopUp");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	public void Feed_Screen_T063(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1063_Guest User - Check if user is unable to perform Not interested action by tapping on it");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.SaveVideoReportNotInterestedAddToFavourites("Not interested"), "Interested PopUp");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T089_T090(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1089_T090_Guest User -Check if user is able to navigate to Sound detail page by tapping on Music present in For You screen");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "MusicInFeedScreen");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosMusicPageInFeedScreen, "Music Page");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosBackArrowInMusicPage, "Back Arrow");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T131(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T131_Logged in User - Check if Comment screen is displayed when tapped on Comment Chat Icon");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Button");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon")) {
				logger.info("Comment screen is be displayed");
				extent.extentLoggerPass("For You >> Comment", "Comment screen is be displayed");
			} else {
				logger.info("Comment screen is not displayed");
				extent.extentLoggerFail("For You >> Comment", "Comment screen is not  displayed");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T213(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T213_Logged In User- Verify for shop button is present if user scrolls the video for few mins and play the shoppable video.");

			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T412(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T412_Logged in User -Check the list of actions present on long press popup of a video");
			System.out.println("T412_Logged in User -Check the list of actions present on long press popup of a video");
			
			tapiOS_Middlepoint(1);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSsave_video, "Save Video");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosAddToFavouritesInShareBtn,
					"Add To Favourites In Share Button	");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSReportPopUp, "Report");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSNotinterestedPopUp, "Not interested");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPlayBtnInFeedScreen, "tap On Middle point");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}

	public void Feed_Screen_T429(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T429_Logged in user - Check if user is able is redirected to 'Feed' screen on tapping on 'back' in Sound Detail Screen");
			System.out.println("T429_Logged in user - Check if user is able is redirected to 'Feed' screen on tapping on 'back' in Sound Detail Screen");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			PopupOfCameraAndMicrophoneWithCreator(userType);
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back Arrow")) {
				click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back Arrow");
				waitTime(2000);
			}
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music In Feed Screen");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosMusicPageInFeedScreen, "Sound detail Music Page");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosBackArrowInMusicPage, "Back Arrow");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T447(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T447_Logged in User -Check if user is able to perform Save Video action by tapping on it");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			saveVideoPopUp();
			tapiOS_Middlepoint(1);
			waitTime(3000);
			for (int i = 1; i <= 10; i++) {
				tapiOS_Middlepoint(1);
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSsave_video, 10, "Save video pop up");
				click(IOSHipiNeoHomePage.objiOSsave_video, "Save video");
				if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSSavedVideos, 20, "Saved Video")) {
					logger.info("user is able to perform Save Video action by tapping on it");
					extent.extentLoggerPass("", "user is able to perform Save Video action by tapping on it");
					break;
				} else {
					tapiOSAtCenterOfScrreen(1);
					waitTime(3000);
					Swipe("UP", 1);

				}

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T449(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T449_Logged in User -  Check if Share screen is displayed when tapped on Share video -> Icon");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Message In Share Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Cross Icon In share Button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Feed_Screen_T456(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T456_Logged in User -  Check is user is able to perform Add to Favorites action by tapping on it");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			Swipe("DOWN", 3);
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(2000);
			PartialCommentsSwipe("UP", 1);
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosAddToFavouritesInShareBtn,
					"Add To Favourites In Share Button	");

			click(IOSHipiNeoHomePage.objiosAddToFavouritesInShareBtn, "Add To Favourites In Share Button	");

			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosAddedToFavorites, 30, "Added To Favorite")) {
				logger.info("Added To Favorite toast");
				extent.extentLoggerPass("", "Added To Favorite toast");
			}

			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");

		}
	}

	public void Feed_Screen_T467_T131(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T467_Logged in User - Check if Comment screen is displayed when tapped on Comment Chat Icon");
			PopupOfCameraAndMicrophoneWithCreator(userType);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon")) {
				logger.info("Comment screen is be displayed");
				extent.extentLoggerPass("For You >> Comment", "Comment screen is be displayed");
			} else {
				logger.info("Comment screen is not displayed");
				extent.extentLoggerFail("For You >> Comment", "Comment screen is not  displayed");
			}
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

//					public void Feed_Screen_T131(String userType) throws Exception {
//						if (userType.equalsIgnoreCase("NonSubscribedUser")) {
//							extent.HeaderChildNode("T131_Logged in User - Check if Comment screen is displayed when tapped on Comment Chat Icon");
//							verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Button");
//							if(verifyElementPresent(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon"))
//							{
//								logger.info("Comment screen is be displayed");
//								extent.extentLoggerPass("For You >> Comment", "Comment screen is be displayed");
//							}else {
//								logger.info("Comment screen is not displayed");
//								extent.extentLoggerFail("For You >> Comment", "Comment screen is not  displayed");
//							}
//							click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
//							verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
//						}
//					}

	public void FeedScreen_T185(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T185_Guest User- Verify the SAVE LOOK button design ,position and colour");
			deleteProductsInSavedMoments();
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");

			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You In Feed Screen");

		}
	}

	public void FeedScreen_T203_ShopPage(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T203_Guest User - Verify for max limit to save the products in save look while user scrolling shoppable videos");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			int count = 0;
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			count++;
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			count++;
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			count++;
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);

			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			count++;

			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button")) {
				click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
				waitTime(2000);
			} else {
				click(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, "SAVED");
				waitTime(2000);
			}

			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			String saved = getText(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage);
			int save = Integer.parseInt(saved);
			System.out.println("Saved :" + save);
			if (save >= count) {
				logger.info(
						"user able to save unlimited products from the shoppable videos.There is no limitation to save products ");
				extent.extentLoggerPass("",
						"user able to save unlimited products from the shoppable videos.There is no limitation to save products ");
			} else {
				logger.info("user not able to save multiple products from the shoppable videos. ");
				extent.extentLoggerFail("", "user not able to save multiple products from the shoppable videos. ");
			}
			CloseTheShopBar();
		}
	}

	public void Profile_T1179(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1179_Logged in user - Check user is able to tap on invite friends icon ");
			follow();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			ContactsPopUp();
			verifyElementPresent(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

	public void Profile_T1181_T1184(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1181_T1184_Logged in user -Check whether permission pop-up gets displayed or not  ");
			follow();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFindContactsInFindFriends, "Find Contacts");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Pop Allow Contacts,");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "OkAllowContacts");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

	public void PopupOfCameraAndMicrophone() throws Exception {
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosCameraPopup, "camera popup")) {
			click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok button");
			waitTime(3000);

		} else {
			logger.info("Camera pop is not displayed");
		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosMicrophone, "microphone")) {
			click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok button");
			waitTime(2000);
		} else {
			logger.info("Microphone pop is not displayed");

		}

	}

	public void PopupOfCameraAndMicrophoneWithCreator(String userType) throws Exception {
		click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Creator");
		waitTime(3000);
		if (!userType.equalsIgnoreCase("Guest")) {
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosCameraPopup, "camera popup")) {
				click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok button");
				waitTime(3000);

			} else {
				logger.info("Camera pop is not displayed");
			}
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosMicrophone, "microphone")) {
				click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok button");
				waitTime(2000);
			} else {
				logger.info("Microphone pop is not displayed");
				click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
				waitTime(3000);

			}
		}

		if (userType.equalsIgnoreCase("Guest")) {
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "pop up close");
			waitTime(2000);

		} else {
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "Close button");
			waitTime(3000);
		}
	}

	public void Creator_T570(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T570_Logged in user - Check user can like his own comment or not in private video");
			System.out.println("T570_Logged in user - Check user can like his own comment or not in private video");
			
			Creator_Video_TillEditScreen(userType, userType, "Yes", "Chandigarh Mein", userType, userType);
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, 20, "Tick Button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Tick Button");
			waitTime(5000);
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon beside song");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon beside song")) {
				logger.info("User able to remove sound successfully from video in edit screen");
				extent.extentLoggerPass("", "User able to remove sound successfully from video in edit screen");
			} else {
				logger.info("User not able to remove sound successfully from video in edit screen");
				extent.extentLoggerFail("", "User not able to remove sound successfully from video in edit screen");
			}

			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back button");
			waitTime(2000);
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void Creator_T579(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T579_Logged in user-Check if sound duration is greater than the selected Video duration, the user will be redirected to the Trimming Screen and trim icon is enabled");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSoundsSongsListInCreateVideoPage, "Sounds Songs List In Create Video Page");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlayMusicInsounds, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Song Selected")) {
				logger.info("Song is seletecd in the create video screen");
				extent.extentLoggerPass("", "Song is seletecd in the create video screen");
			} else {
				logger.info("Song is not seletecd in the create video screen");
				extent.extentLoggerFail("", "Song is not seletecd in the create video screen");
			}
			String ExpectedSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			waitTime(3000);
			System.out.println(ExpectedSong);
			click(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo, "song visible");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosPlaymusicSound2, "play music");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosTrimTheSongs, 20, "Trim The Songs");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosTrimTheSongs, "Trim The Songs");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosTickTheTrim, "Tick The Trim");
			waitTime(3000);
			verifyElementPresent(IOSHipiCreateVideoPage.objiosReplaceSong, "Replace Song");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosYesTheReplaceTheSong, "Yes Replace Song");
			waitTime(3000);
			String ActualSong = getText(IOSHipiCreateVideoPage.objiosSongVisibleInCreateVideo);
			System.out.println(ActualSong);
			if (ExpectedSong.equalsIgnoreCase(ActualSong)) {
				logger.info("User not able to replace the already added song");
				extent.extentLoggerFail("", "User not able to replace the already added song");
			} else {
				logger.info("User is able to replace the already added song");
				extent.extentLoggerPass("", "User is able to replace the already added song");
			}

			click(IOSHipiCreateVideoPage.objioscloseBtnInRecoedScreen, "close Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

//==================================================N==============================================================

	public void Discover_Screen_T1594_P1(String userType) throws Exception {
		extent.HeaderChildNode(
				"T1594_Verify Every shoppable video thumbnail have shop icon on the poster image at right upper corner");
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(3500);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField In DiscoverPage");
		String text = getParameterFromXML("UserName");
		type(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, text, "User Name");
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "SearchButton In Keyboard");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1), "Shoppable video");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Videos"), "Videos Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1), "Shoppable video");

		click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Hashtags"), "Hashtag Tab");
		String user1 = getParameterFromXML("HashtageName");
		click(IOSHiPiNeoDiscoverPage.objiosFirstSearchResultOfHashTag(user1), "First User");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosShoppableIconVideo(1), "Shoppable video");
		click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
		click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}

//*******************************************************************************************************************************************************
	// login/signup(p1)
	public void LoginOrSignupScreen_T774_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T774_Check if user is able to view Login in to HiPi screen by tapping on Profile icon");
			System.out.println("T774_Check if user is able to view Login in to HiPi screen by tapping on Profile icon");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(5000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi")) {

				logger.info("User is able to view the Login in to HiPi screen");
				extent.extentLoggerPass("Login", "User is able to view the Login in to HiPi screen");
			} else {
				logger.info("User is not able to view the Login in to HiPi screen");
				extent.extentLoggerFail("Login", "User is not  able to view the Login in to HiPi screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}

	}
//*******************************************************************************************************************************************************

	public void LoginOrSignupScreen_T776_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T776_Check if user is able to close the Login in to HiPi pop-up by tapping on cross icon");
			System.out.println("T776_Check if user is able to close the Login in to HiPi pop-up by tapping on cross icon");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(5000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi")) {

				logger.info("User is not able close the Login in to HiPi screen by tapping on cross icon");
				extent.extentLoggerFail("Login",
						"User is not able close the Login in to HiPi screen by tapping on cross icon");
			} else {
				logger.info("User is able close the Login in to HiPi screen by tapping on cross icon");
				extent.extentLoggerPass("Login",
						"User is able close the Login in to HiPi screen by tapping on cross icon");
			}
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

//*******************************************************************************************************************************************************
	public void LoginOrSignupScreen_T777_P1(String userType) throws Exception {

		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T777_Check if user is able to navigate to login in screen after tapping on Use Phone or Email CTA");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(5000);
			verifyElementExist(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page")) {
				logger.info("User is navigated to Log In screen by tapping on Use Phone or Email CTA");
				extent.extentLoggerPass("Login",
						"User is navigated to Log In screen by tapping on Use Phone or Email CTA");

			} else {
				logger.info("User is not navigated to Log In screen by tapping on Use Phone or Email CTA");
				extent.extentLoggerFail("Login",
						"User is not navigated to Log In screen by tapping on Use Phone or Email CTA");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}
//*******************************************************************************************************************************************************

	public void LoginSignupScreen_T783_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T783_Check the UI of the Select country/region screen by tapping on +91 in Log in screen for Phone Number");
			System.out.println("T783_Check the UI of the Select country/region screen by tapping on +91 in Log in screen for Phone Number");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField ");
			waitTime(3000);
			Dimension size = getDriver().manage().window().getSize();
			System.out.println(size);
			int half = size.width / 2;
			WebElement CrossIcon = getDriver()
					.findElement(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown);
			int a = CrossIcon.getLocation().getX();
			if (a < half) {
				logger.info("Cross icon at left side of the corner");
				extent.extentLoggerPass("", "Cross icon at left side of the corner");
			} else {
				logger.info("Cross icon is not at left side of the corner");
				extent.extentLoggerFail("", "Cross icon is not at left side of the corner");
			}
			if ((verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen"))
					|| (verifyElementPresent(IOSHipiNeoProfilePage.objiosAlbaniaPhoneNumberTextField,
							"Select country region screen"))
					|| (verifyElementPresent(IOSHipiNeoProfilePage.objiosAlgeriaPhoneNumberTextField,
							"Select country region screen"))) {
				logger.info("Select country region screen is displayed when user taps on +91 in login screen");
				extent.extentLoggerPass("",
						"Select country region screen is displayed when user taps on +91 in login screen");

			} else {
				logger.info("Select country region screen is Not displayed when user taps on +91 in login screen");
				extent.extentLoggerFail("",
						"Select country region screen is Not displayed when user taps on +91 in login screen");
			}

			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}
//*******************************************************************************************************************************************************

	public void LoginSignupScreen_T786_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T786_Check if user is navigate to Login with Phone Number screen by tapping on cross icon in Select country/region screen");
			System.out.println("T786_Check if user is navigate to Login with Phone Number screen by tapping on cross icon in Select country/region screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page")) {
				logger.info("User is navigated to Login with Phone number screen by tapping on cross icon");
				extent.extentLoggerPass("Login",
						"User is navigated to Login with Phone number screen by tapping on cross icon");

			} else {
				logger.info("User is not navigated to Login with Phone number screen by tapping on cross icon");
				extent.extentLoggerFail("Login",
						"User is not navigated to Login with Phone number screen by tapping on cross icon");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}
//*******************************************************************************************************************************************************

	public void LoginSignupScreen_T796_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T796_Check if user is able to remove the entered phone number by tapping on cross icon in forgot Password Reset Screen for Phone number");
			System.out.println("T796_Check if user is able to remove the entered phone number by tapping on cross icon in forgot Password Reset Screen for Phone number");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage, "9845957406", "Phone Number Type");
			waitTime(3000);
			String text = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			String text1 = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage);
			if (text.contentEquals(text1)) {
				logger.info(
						"User is not able to remove the entered phone number by tapping on cross icon in Reset screen");
				extent.extentLoggerFail("Login",
						"User is not able to remove the entered phone number by tapping on cross icon in Reset screen");
			} else {
				logger.info("User is able to remove the entered phone number by tapping on cross icon in Reset screen");
				extent.extentLoggerPass("Login",
						"User is able to remove the entered phone number by tapping on cross icon in Reset screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}
//*******************************************************************************************************************************************************

	public void LoginSignupScreen_T798_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T798_Check the Phone number is accept only 10 digits in Phone number field");
			System.out.println("T798_Check the Phone number is accept only 10 digits in Phone number field");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957406", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "1111111111", "Password");
			waitTime(3000);
			String text = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			int count = text.length();
			System.out.println(count);
			if (count == 10) {
				if (verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginButtonEnabledInLoginPage,
						"Log in button enabled")) {
					logger.info("Phone Number field is accepting 10 digits ");
					extent.extentLoggerPass("Login", "Phone Number field is accepting 10 digits ");
				} else {
					logger.info("Phone Number field is not accepting 10 digits ");
					extent.extentLoggerFail("Login", "Phone Number field is not accepting 10 digits ");
				}

			}

			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957", "Phone Number Type");
			waitTime(3000);
			String text1 = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			int count1 = text1.length();
			System.out.println(count1);
			if (count1 < 10) {
				if (verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginButtonEnabledInLoginPage,
						"Log in button enabled"))
					logger.info("Phone Number field is accepting less than 10 digits ");
				extent.extentLoggerFail("Login", "Phone Number field is accepting less than 10 digits ");
			} else {
				logger.info("Phone Number field is accepting 10 digits ");
				extent.extentLoggerPass("Login", "Phone Number field is accepting 10 digits ");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

//*******************************************************************************************************************************************************
	public void LoginSignupScreen_T804_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T804_Check if user is able to enter the Phone Number in Phone Number field in Login with OTP screen");
			System.out.println("T804_Check if user is able to enter the Phone Number in Phone Number field in Login with OTP screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			String Number = getParameterFromXML("PhoneNumber");
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, Number, "Phone Number Type");
			String text = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			int count = text.length();
			System.out.println(count);
			if (count != 0) {
				logger.info(
						"User is able to enter the Phone Number in the Phone Number field in Login with OTP screen");
				extent.extentLoggerPass("Login",
						"User is able to enter the Phone Number in the Phone Number field in Login with OTP screen");
			} else {
				logger.info(
						"User is not able to enter the Phone Number in the Phone Number field in Login with OTP screen");
				extent.extentLoggerFail("Login",
						"User is not able to enter the Phone Number in the Phone Number field in Login with OTP screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

//*******************************************************************************************************************************************************
	public void LoginSignupScreen_T800_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T800_Check the error message as Please provide valid phone number when user enter invalid phone number");
			System.out.println("T800_Check the error message as Please provide valid phone number when user enter invalid phone number");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "5398556588",
					"Invalid Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "1111111111", " Valid Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "Log in button");
			waitTime(500);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosinvalidErrorToastMessageInLoginPage,
					"Invalid Error Toast Message")) {
				logger.info(
						"User is getting the error message as Please provide valid phone number when entered invalid phone number");
				extent.extentLoggerPass("Login",
						"User is getting the error message as Please provide valid phone number when entered invalid phone number");

			} else {
				logger.info(
						"User is  not getting the error message as Please provide valid phone number when entered invalid phone number");
				extent.extentLoggerFail("Login",
						"User is  not getting the error message as Please provide valid phone number when entered invalid phone number");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

//*******************************************************************************************************************************************************
	public void LoginSignupScreen_T799_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T799_Check the error message as Please provide valid phone number is displayed when user enter less than 10 digits in the Phone number field");
			System.out.println("T799_Check the error message as Please provide valid phone number is displayed when user enter less than 10 digits in the Phone number field");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "1111111111", " Valid Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "Log in button");
			waitTime(500);
			if (verifyElementPresent(
					IOSHipiNeoProfilePage.objiosinvalidErrorToastMessageForMobileNumberLessThan10DigitsInLoginPage,
					"Invalid Error Toast Message")) {
				logger.info(
						"Please provide valid phone number error message is displayed when user entered less than 10 digits in phone number field");
				extent.extentLoggerPass("Login",
						"Please provide valid phone number error message is displayed when user entered less than 10 digits in phone number field");

			} else {
				logger.info(
						"Please provide valid phone number error message is not displayed when user entered less than 10 digits in phone number field");
				extent.extentLoggerFail("Login",
						"Please provide valid phone number error message is not displayed when user entered less than 10 digits in phone number field");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

//*******************************************************************************************************************************************************
	public void LoginSignupScreen_T811_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T811_Check if user navigate to Verification screen after tapping on Send OTP CTA in Login with OTP");
			System.out.println("T811_Check if user navigate to Verification screen after tapping on Send OTP CTA in Login with OTP");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957231", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage,50, "Verify OTP Button");
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP Button")) {
				logger.info("User is navigated to verification screen after tapping on Send OTP CTA");
				extent.extentLoggerPass("Login",
						"User is navigated to verification screen after tapping on Send OTP CTA");
			} else {
				logger.info("User is not navigated to verification screen after tapping on Send OTP CTA");
				extent.extentLoggerFail("Login",
						"User is not navigated to verification screen after tapping on Send OTP CTA");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			//verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}
	}

//*******************************************************************************************************************************************************
	public void LoginSignupScreen_T813_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T813_Check the Invalid Code message is displayed when user tapping on Verfy OTP CTA without entering OTP");
			System.out.println("T813_Check the Invalid Code message is displayed when user tapping on Verfy OTP CTA without entering OTP");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957234", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPField(1), "OTP Field")) {

				for (int i = 1; i <= 4; i++) {
					type(IOSHipiNeoProfilePage.objiosOTPField(i), "0", "OTP Field : " + i);
					waitTime(3000);
				}
			}
			click(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP Button");
			waitTime(500);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosOTPErrorToastMessageInLoginPage,
					"OTP Error Message")) {
				logger.info(
						"User is getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
				extent.extentLoggerPass("Login",
						"User is getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
			} else {
				logger.info(
						"User is not getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
				extent.extentLoggerFail("Login",
						"User is not getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}

	}

//Settings and Privacy	
	public void Settings_and_Privacy_T704_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T704_Check if after tapping on 3 dots on top right corner under Profile user is directing user to Settings and Privacy screen.");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar,
					"Setting And Privacy Screen")) {
				logger.info(
						"User is directed to Settings and Privacy screen  after tapping on 3 dots on top right corner under Profile");
				extent.extentLoggerPass("Settings and Privacy",
						"User is directed to Settings and Privacy screen  after tapping on 3 dots on top right corner under Profile");
			} else {
				logger.info(
						"User is not directed to Settings and Privacy screen  after tapping on 3 dots on top right corner under Profile");
				extent.extentLoggerFail("Settings and Privacy",
						"User is not directed to Settings and Privacy screen after tapping on 3 dots on top right corner under Profile");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Settings_and_Privacy_T754_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T754_Check if searching for a specific keyword is landing user to relevant information");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Help Center"), "Help Center Tab");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiOSsearchTextFieldInHelpCenterPage, "Search text field");
			waitTime(3000);
			type(IOSHipiNeoSettingsPage.objiOSsearchTextFieldInHelpCenterPage, "Hipi", "Search text Field");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiOSsearchIconInHelpCenterPage, "Search Icon");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoSettingsPage.objiOSrespectedSearchResultInHelpCenterPage,
					"Search Results in Help Center Page")) {
				logger.info("User is be able to make search using keywords in search bar");
				extent.extentLoggerPass("Settings and Privacy",
						"User is be able to make search using keywords in search bar");

			} else {
				logger.info("User is not be able to make search using keywords in search bar");
				extent.extentLoggerFail("Settings and Privacy",
						"User is not be able to make search using keywords in search bar");

			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar, "Setting And Privacy Screen");
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Settings_and_Privacy_T757_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T757_Check if back button available on top left corner is functional for user");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Help Center"), "Help Center Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar,
					"Setting And Privacy Screen")) {
				logger.info(
						"User is able to move  back to Setting ad Privacy  screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerPass("Settings and Privacy",
						"User is able to move  back to Setting ad Privacy  screen after tapping on back button icon on top left corner of the screen.");
			} else {
				logger.info(
						"User is not able to move  back to Setting ad Privacy  screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerFail("Settings and Privacy",
						"User is not able to move  back to Setting ad Privacy  screen after tapping on back button icon on top left corner of the screen.");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

	public void Settings_and_Privacy_T758_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T758_Check if tapping on \"Community Guidelines\" is taking user to specific screen with relevant information");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Community Guidelines"), "Community Guidelines Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoSettingsPage.objiosCommunityGuidelinesTabBar,
					"Hipi Community Guidelines Screen")) {
				logger.info(
						"Tapping on Community Guidelines tab  user is navigated to respective screen with community guidelines details");
				extent.extentLoggerPass("Settings and Privacy",
						"Tapping on Community Guidelines tab  user is navigated to respective screen with community guidelines details");
			} else {
				logger.info(
						"Tapping on Community Guidelines tab  user is not navigated to respective screen with community guidelines details");
				extent.extentLoggerFail("Settings and Privacy",
						"Tapping on Community Guidelines tab  user is not navigated to respective screen with community guidelines details");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar, "Setting And Privacy Screen");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Settings_and_Privacy_T761_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T761_Check if back button available on top left corner is functional for user");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Community Guidelines"), "Community Guidelines Tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosCommunityGuidelinesTabBar,
					"Hipi Community Guidelines Screen");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar,
					"Setting And Privacy Screen")) {
				logger.info(
						"User is be able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerPass("Settings and Privacy",
						"User is be able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
			} else {
				logger.info(
						"User is not be able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerFail("Settings and Privacy",
						"User is not be able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}
	}

	public void Settings_and_Privacy_T770_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T770_Check if tapping on Log out opens a popup");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
			waitTime(3000);

			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Logout");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
			waitTime(5000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Are You Sure Text");
			verifyElementPresent(IOSHipiNeoSettingsPage.objiOSLogOutConfirmBtn, "Logout Button");
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosLogOutButtonInLogoutPOpUp, "Cancel Button");
//to navigate to home screen
			click(IOSHipiNeoSettingsPage.objiosLogOutButtonInLogoutPOpUp, "Cancel Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Settings_and_Privacy_T771_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T771_Check if tapping on No CTA closes the popup");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Logout");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosLogOutButtonInLogoutPOpUp, "Cancel Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Are You Sure Text")) {
				logger.info("Log out pop up is not closed after user taps on cancel button");
				extent.extentLoggerFail("Settings and Privacy",
						"Log out pop up is not closed after user taps on cancel button");
			} else {
				logger.info("Log out pop up is closed after user taps on cancel button");
				extent.extentLoggerPass("Settings and Privacy",
						"Log out pop up is closed after user taps on cancel button");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Settings_and_Privacy_T772_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T772_Check if tapping outsside the popup screen closes the popup");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
			waitTime(3000);

			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Logout");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
			waitTime(5000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Logout popup");
			waitTime(2000);
			click(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar, "Setting And Privacy Screen");
			waitTime(4000);

			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Logout popup")) {
				logger.info("Popup is not closed if user taps outside the pop up area");
				extent.extentLoggerFail("Settings and Privacy",
						"Popup is not closed if user taps outside the pop up area");
			} else {
				logger.info("Popup is closed if user taps outside the pop up area");
				extent.extentLoggerPass("Settings and Privacy", "Popup is closed if user taps outside the pop up area");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Settings_and_Privacy_T773_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T773_Check if tapping on Yes(Logout) CTA logs out the user");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
			waitTime(3000);

			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Logout");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiOSLogOutConfirmBtn, "Logout Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You")) {
				logger.info(
						"User is logged out of the application and lands on Feed when he taps on Yes(logout Button )");
				extent.extentLoggerPass("Settings and Privacy",
						"User is logged out of the application and lands on Feed when he taps on Yes(logout Button )");
			} else {
				logger.info(
						"User is not logged out of the application and not lands on Feed when he taps on Yes(logout Button )");
				extent.extentLoggerFail("Settings and Privacy",
						"User is not logged out of the application and not lands on Feed when he taps on Yes(logout Button )");
			}

			Login();
		}
	}

	public void Settings_and_Privacy_T756_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T756_Check if user is able to move to top of the screen after tapping on up arrow CTA");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Help Center"), "Help Center Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosHelpCenterTextInHelpCenterpage,
					"Help center header at top of the page")) {
				logger.info("user is now at the top of page");
				extent.extentLogger("", "user is now at the top of page");
			}
			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiosConnectWithUsTextInHelpCenterPage,
					"connect with us text");
			waitTime(3000);
			if (!verifyElementExist(IOSHipiNeoSettingsPage.objiosHelpCenterTextInHelpCenterpage,
					"Help center header at top of the page")) {
				logger.info("user is now at the bottom of page");
				extent.extentLogger("", "user is now at the bottom of page");
			}
			waitTime(3000);
//			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosArrowMarkAtBottmOfScreen, "Arrow mark at bottom")) {
//				click(IOSHipiNeoSettingsPage.objiosArrowMarkAtBottmOfScreen, "Arrow mark ");
//				waitTime(6000);
//				if (verifyElementExist(IOSHipiNeoSettingsPage.objiosHelpCenterTextInHelpCenterpage,
//						"Help center header at top of the page")) {
//					logger.info("user is able to move to top of the screen after tapping on up arrow CTA");
//					extent.extentLoggerPass("",
//							"user is able to move to top of the screen after tapping on up arrow CTA");
//				} else {
//					logger.info("user is not able to move to top of the screen after tapping on up arrow CTA");
//					extent.extentLoggerFail("",
//							"user is not able to move to top of the screen after tapping on up arrow CTA");
//
//				}
//
//			}
			waitTime(3000);

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}
	}

//======================================Creator=================================================================================================

	public void Creator_T698_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T698_Logged in user - Check whether the videos saved in draft.");
			System.out.println("T698_Logged in user - Check whether the videos saved in draft.");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Iocn");
			waitTime(2000);
			DeleteDraftVideos();

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 500, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoTextInPostScreen, 50, "Post Video Text In Post Screen");			
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 100, "For You");
			waitTime(3000);
			OpenRecentlyCreateddraftVideo();
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, 20, "Drafts videos in profile page");
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video")) {
				logger.info("video is saved in draft");
				extent.extentLoggerPass("Creator", "video is saved in draft");
			} else {
				logger.info("video is not saved in draft");
				extent.extentLoggerFail("Creator", "video is not saved in draft");
			}
			NavigateToHomPage();
		}

	}

	public void Creator_T696_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T696_Logged in user - Check  whether user gets confirmation message on successfully saved in draft.");
			System.out.println(
					"T696_Logged in user - Check  whether user gets confirmation message on successfully saved in draft.");
			
			DeleteDraftVideos();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 100, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 100, "Post Btn");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft Button");
			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSaveAsDraftTostMessage, 100,
					"Draft Video Tost Message")) {
				logger.info("User is getting toast message when he saves a draft video");
				extent.extentLoggerPass("Creator", "User is getting toast message when he saves a draft video");
			} else {
				logger.info("User is not getting toast message when he saves a draft video");
				extent.extentLoggerFail("Creator", "User is not getting toast message when he saves a draft video");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

//=============================================22-12-2021================================================

	// ==================================24-12-2021===================================================N==
	// Feed P2
	public void Feed_T1651_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1651_Logged In User- Verify Network Error tapping upon Save Look CTA");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);

			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosNoInternetConnectionTostMessage,15,
					"No Internet Tost Message")) {
				logger.info("User is getting network error when he tap on SHOP CTA without Internet ");
				extent.extentLoggerPass("Feed",
						"User is getting network error when he tap on SHOP CTA without Internet ");
			} else {
				logger.info("User is not getting network error when he tap on SHOP CTA without Internet ");
				extent.extentLoggerFail("Feed",
						"User is not getting network error when he tap on SHOP CTA without Internet ");
			}

			wifi("on");
			waitTime(10000);
		}
	}

	public void Feed_T1649_T1646_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1649_Logged In User- Verify Network Error tapping upon Save Look CTA");
		} else {
			extent.HeaderChildNode("T1646_Guest User- Verify Network Error tapping upon Save Look CTA");
		}

		deleteProductsInSavedMoments();
		waitTime(6000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		wifi("off");
		waitTime(15000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover Look button");

		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosNoInternetConnectionTostMessage,15,
				"No Internet Tost Message")) {
			logger.info("User is getting network error when he tap on Discover The Look button CTA without Internet ");
			extent.extentLoggerPass("Feed",
					"User is getting network error when he tap on Discover The Look button CTA without Internet ");
		} else {
			logger.info(
					"User is not getting network error when he tap on Discover The Look button CTA without Internet ");
			extent.extentLoggerFail("Feed",
					"User is not getting network error when he tap on Discover The Look button CTA without Internet ");
		}

		wifi("on");
		waitTime(10000);
	}

	public void Feed_T1650_T1647_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1650_Logged In User- Verify Network Error tapping upon Saved CTA");
		} else {
			extent.HeaderChildNode("T1647_Guest User- Verify Network Error tapping upon Saved CTA");
		}
		deleteProductsInSavedMoments();
		waitTime(5000);

		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover Look button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInShopPage, "Cross Icon");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(3000);
		wifi("off");
		waitTime(15000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosNoInternetConnectionTostMessage,10,
				"No Internet Tost Message")) {
			logger.info("User is getting network error when he tap on Saved CTA without Internet ");
			extent.extentLoggerPass("Feed", "User is getting network error when he tap on Saved CTA without Internet ");
		} else {
			logger.info("User is not getting network error when he tap on Saved CTA without Internet ");
			extent.extentLoggerFail("Feed",
					"User is not getting network error when he tap on Saved CTA without Internet ");
		}

		wifi("on");
		waitTime(10000);

	}

//		public void Feed_T1648_P2(String userType) throws Exception {
//			if (!userType.equalsIgnoreCase("NonSubscribedUser")) {
//				extent.HeaderChildNode("T1648_Guest User-Verify Network Error tapping upon SHOP CTA");
//			
//			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
//			  wifi("off");
//			   waitTime(10000);
//					   click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop CTA");
//					   waitTime(3000);
//					  
//				
//				if(verifyElementPresent(IOSHipiNeoHomePage.objiosNoInternetConnectionTostMessage, "No Internet Tost Message"))
//				{
//					logger.info("User is getting network error when he tap on Shop CTA without Internet ");
//					extent.extentLoggerPass("Feed", "User is getting network error when he tap on Shop CTA without Internet ");
//				}else {
//					logger.info("User is not getting network error when he tap on Shop CTA without Internet ");
//					extent.extentLoggerFail("Feed", "User is not getting network error when he tap on Shop CTA without Internet ");
//				}
//			
//				 wifi("on");
//				 waitTime(10000);
//				
//			}	
//		}

	public void Feed_T466_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T466_Logged in User - Check if user is able to view Network Error when he taps on User Name without internet");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User name");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User name");
			if (waitForElementDisplayediOS(IOSHipiNeoHashTagPage.objiOSNetworkErrorSymbolInHashTagPage,10, "Network Error")) {
				logger.info("User is getting network error message when he taps on User Name without internet");
				extent.extentLoggerPass("Feed",
						"User is getting network error message when he taps on User Name without internet");
			} else {
				logger.info("User is not getting network error message when he taps on User Name without internet");
				extent.extentLoggerFail("Feed",
						"User is not getting network error message when he taps on User Name without internet");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Feed_T465_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T465_Logged in User - Check if user is able to see the user name in Following tab");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,"Following tab in Feed Screen");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User name")) {
				logger.info("User is able to see the user name");
				extent.extentLoggerPass("Feed", "User is able to see the user name");
			} else {
				logger.info("User is not able to see the user name");
				extent.extentLoggerFail("Feed", "User is not able to see the user name");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// ====================================25-12-2021===============================n=============

	public void Feed_T174_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T174_Guest User -Verify for shop button should NOT display while watching Non-shoppable videos.");

			for (int i = 0; i <= 50; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button")) {
					Swipe("UP", 1);
				} else {

					logger.info("The SHOP button is not appear for non shopable video");
					extent.extentLoggerPass("Feed", "The SHOP button is not appear for non shopable video");
					break;
				}
			}
		}
	}

//	public void Feed_T164_P2(String userType) throws Exception {
//		if (userType.equalsIgnoreCase("Guest")) {
//			extent.HeaderChildNode("T164_Guest User -Verify Shoppable video Following section");
//			DeepLinkURLForShopButton("No", "shop5", deeplink5);
//			waitTime(5000);
//			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
//					"Following tab in Feed Screen");
//			waitTime(2000);
//			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginButtonInLoginToContinuePage,
//					"Login Button In Login To Continue Page")) {
//				logger.info("User is getting Login to Continue Screen");
//				extent.extentLoggerPass("Feed", "User is getting Login to Continue Screen");
//			} else {
//				logger.info("User is not getting Login to Continue Screen");
//				extent.extentLoggerFail("Feed", "User is not getting Login to Continue Screen");
//			}
//			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
//
//		}
//	}

	public void Feed_T163_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T163_Guest User - Verify Shoppable video");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button")) {
				logger.info("shoppable video is appears on the For You section for Guest user");
				extent.extentLoggerPass("Feed", "shoppable video is appears on the For You section for Guest user");
			} else {
				logger.info("shoppable video is not appears on the For You section for Guest user");
				extent.extentLoggerFail("Feed", "shoppable video is not appears on the For You section for Guest user");
			}
		}
	}

	public void Feed_T048_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T048_Logged in User - Check if user is able to view Network Error when he taps on Sound without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound Button");
			waitTime(2000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound Button");
			
			if (waitForElementDisplayediOS(IOSHipiNeoHashTagPage.objiOSNetworkErrorSymbolInHashTagPage,10, "Network Error")) {
				logger.info("User is getting network error message when he taps on Sound without internet");
				extent.extentLoggerPass("Feed",
						"User is getting network error message when he taps on Sound without internet");
			} else {
				logger.info("User is not getting network error message when he taps on Sound without internet");
				extent.extentLoggerFail("Feed",
						"User is not getting network error message when he taps on Sound without internet");
			}
			waitTime(3000);
			wifi("on");
			waitTime(10000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Feed_T045_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T045_Logged in User - Check if user is able to view sound on played/paused video");
			verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound on played video")) {
				logger.info("User is able to view sound used for played video");
				extent.extentLoggerPass("Feed", "User is able to view sound used for played video");
			} else {
				logger.info("User is not able to view sound used for played video");
				extent.extentLoggerFail("Feed", "User is not able to view sound used for played video");
			}

		}
	}

	public void Feed_T020_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T020_Logged in User - Check the options are present at bottom of the screen in Feed section");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		}

	}

//====================================27-12-2021===============================n=============		

	public void Feed_T416_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T416_Logged in User - Check if Profile details screen is displayed when tapped on name of a video description");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,"Following tab in Feed Screen");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name in Feed Screen");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, " Profile Page")) {
				logger.info("Profile details screen is displayed when tapped on name of a video description");
				extent.extentLoggerPass("Feed",
						"Profile details' screen is displayed when tapped on name of a video description");
			} else {
				logger.info("Profile details screen is  not displayed when tapped on name of a video description");
				extent.extentLoggerFail("Feed",
						"Profile details screen is  not displayed when tapped on name of a video description");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}
	}

	public void Feed_T423_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T423_Logged in User - Check if user is able to view sound on played/paused video");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound Button")) {
				logger.info("User is able to view sound used for played video");
				extent.extentLoggerPass("Feed", "User is able to view sound used for played video");
			} else {
				logger.info("User is not able to view sound used for played video");
				extent.extentLoggerFail("Feed", "User is not able to view sound used for played video");
			}
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}

	}

	public void Feed_T424_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T424_Logged in User - Check if user is able to view Sound detail page by tapping on Music in the description on played/paused video");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,"Following tab in Feed Screen");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiSoundPage.iosUseThisSound, "Use this Sound button")) {
				logger.info("User is able to navigate to Sound details page");
				extent.extentLoggerPass("Feed", "User is able to navigate to Sound details page");
			} else {
				logger.info("User is not able to navigate to Sound details page");
				extent.extentLoggerFail("Feed", "User is not able to navigate to Sound details page");

			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}
	}

	public void Feed_T425_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T425_Logged in User - Check if user is able to view Network Error when he taps on Sound without internet");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound Button");
		
			if (waitForElementDisplayediOS(IOSHipiNeoHashTagPage.objiOSNetworkErrorSymbolInHashTagPage,10, "Network Error")) {
				logger.info("User is getting network error message when he taps on Sound without internet");
				extent.extentLoggerPass("Feed",
						"User is getting network error message when he taps on Sound without internet");
			} else {
				logger.info("User is not getting network error message when he taps on Sound without internet");
				extent.extentLoggerFail("Feed",
						"User is not getting network error message when he taps on Sound without internet");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			wifi("on");
			waitTime(10000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}
	}

	public void Feed_T442_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T442_Logged in User - Check if user is able to view Network Error when he taps on Add to Favorites without internet");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			tapiOS_Middlepoint(1);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.ShareScreenAllTabs("Add to favourites"),
					"Add to favourites");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,10, "Error Message")) {
				logger.info("User is getting network error message when he taps on Add to Favorites without internet");
				extent.extentLoggerPass("Feed",
						"User is getting network error message when he taps on Add to Favorites without internet");
			} else {
				logger.info(
						"User is not getting network error message when he taps on Add to Favorites without internet");
				extent.extentLoggerFail("Feed",
						"User is not getting network error message when he taps on Add to Favorites without internet");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
			waitTime(3000);
			wifi("on");
			waitTime(10000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}
	}

	public void Feed_T443_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T443_Logged in User - Check if user is able to perform Not Interested action by tapping on it");
			
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,"Following tab in Feed Screen");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.ShareScreenAllTabs("Not interested"), "Not interested");
			if (verifyElementExist(IOSHipiNeoHomePage.objiosNotInterestedTostMessage, "Tost message")) {
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("Feed", "Toast message is displayed");
			} else {
				logger.info("Toast message is not displayed");
				extent.extentLoggerFail("Feed", "Toast message is not displayed");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
			waitTime(3000);
			
		}
	}

	public void Feed_T444_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T444_Logged in User - Check if user is able to view \"Network Error\" when he taps onNot Interested without internet");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen");
			waitTime(3000);
			wifi("off");
			waitTime(16000);
			tapiOS_Middlepoint(1);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.ShareScreenAllTabs("Not interested"), "Not interested");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSNetworkError, "Error Message")) {
				logger.info("User is getting network error message when he taps on Not interested without internet");
				extent.extentLoggerPass("Feed",
						"User is getting network error message when he taps on Not interested without internet");
			} else {
				logger.info(
						"User is not getting network error message when he taps on Not interested without internet");
				extent.extentLoggerFail("Feed",
						"User is not getting network error message when he taps on Not interested without internet");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
			waitTime(3000);
			wifi("on");
			waitTime(10000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}
	}

	public void Feed_T446_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T446_Logged in User - Check if user is able to view Network Error when he taps on Report without internet");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen,
					"Following tab in Feed Screen");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			tapiOS_Middlepoint(1);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.ShareScreenAllTabs("Report"), "Report");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSNetworkError, "Error Message")) {
				logger.info("User is getting network error message when he taps on Not interested without internet");
				extent.extentLoggerPass("Feed",
						"User is getting network error message when he taps on Not interested without internet");
			} else {
				logger.info(
						"User is not getting network error message when he taps on Not interested without internet");
				extent.extentLoggerFail("Feed",
						"User is not getting network error message when he taps on Not interested without internet");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
			waitTime(3000);
			wifi("on");
			waitTime(10000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");
		}
	}
	// ======================================Login/singup=======================================28-12-2021
	// login(P2)

	public void LoginOrSignupScreen_T775_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T775_Check the UI of the Login in to HiPi pop-up");
			System.out.println("T775_Check the UI of the Login in to HiPi pop-up");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosManageYourAccountTextInLoginToHipiPopUp,
					"Manage Your Account text in Login popUp");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross icon");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosContnueWithFB, "Continue with Facebook CTA");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosContinueWithGoogleButtonInLoginInToHiPIPopUp,
					"Continue with Googel CTA");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosByContinuningYouAgreeTermsofUsetextInLoginToHipiPopUp,
					"By Continuning textin Login popUp");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDontHaveAnAccountSignUpTextInLoginToHipiPopUp,
					"Don't have an Account?SignUP");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross icon");

		}

	}

	public void LoginOrSignupScreen_T778_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T778_Check the UI of the Login in screen for Phone tab");
			System.out.println("T778_Check the UI of the Login in screen for Phone tab");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneTabInLogInPage, "Phone tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage,
					"Phone Number Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objios91Textindropdown, "+91");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Drop Down");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "PassWord Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "Log in CTA");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You tab in Feed Screen");

		}
	}

	public void LoginOrSignupScreen_T784_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T784_Check if user is able to search any country/region in Select country/region screen");
			System.out.println("T784_Check if user is able to search any country/region in Select country/region screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField ");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "India", "Search TextField ");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosIndiaPhoneNumberTextField,
					"Select country region screen")) {
				logger.info("User is able to search any country/region in Select country/region screen");
				extent.extentLoggerPass("Feed",
						"User is able to search any country/region in Select country/region screen");
			} else {
				logger.info("User is not able to search any country/region in Select country/region screen");
				extent.extentLoggerFail("Feed",
						"User is not able to search any country/region in Select country/region screen");
			}
			click(IOSHipiNeoSettingsPage.objiosLogOutButtonInLogoutPOpUp, "Cancel Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");

		}
	}

	public void LoginOrSignupScreen_T785_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T785_Check if user is able remove the searched text in search bar by tapping on cross icon in Select country/region screen");
			System.out.println("T785_Check if user is able remove the searched text in search bar by tapping on cross icon in Select country/region screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField ");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "India", "Search TextField ");
			waitTime(3000);
			String beforeclickoncrossicon = getAttributValue("value",IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage);
			waitTime(3000);
			System.out.println(beforeclickoncrossicon);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			String Afterclickoncrossicon = getAttributValue("value",IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage);
			System.out.println(Afterclickoncrossicon);
			if (!beforeclickoncrossicon.equals(Afterclickoncrossicon)) {
				logger.info(
						"User is able to remove the searched text by tapping on cross icon in Select country/region screen");
				extent.extentLoggerPass("Feed",
						"User is able to remove the searched text by tapping on cross icon in Select country/region screen");
			} else {
				logger.info(
						"User is not able to remove the searched text by tapping on cross icon in Select country/region screen");
				extent.extentLoggerFail("Feed",
						"User is not able to remove the searched text by tapping on cross icon in Select country/region screen");
			}
			click(IOSHipiNeoSettingsPage.objiosLogOutButtonInLogoutPOpUp, "Cancel Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T794_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T794_Check the UI of the forgot Password Reset Screen for Phone number");
			System.out.println("T794_Check the UI of the forgot Password Reset Screen for Phone number");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957406", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage,
					"Phone Number Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objios91Textindropdown, "+91");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Drop Down");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage,
					"Phone Number Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosForgotPasswordTextInResetpage,
					"Forgot Password Text in reset page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSMSYouTextInResetpage, "SMS You Text in reset page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetCTAInResetpage, "Reset CTA in reset page");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "login page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T797_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T797_Check if the Reset CTA is highlighted with red colour when user enter the valid Phone Number in forgot Password Reset Screen");
			System.out.println("T797_Check if the Reset CTA is highlighted with red colour when user enter the valid Phone Number in forgot Password Reset Screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957406", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage,
					"Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9999999999", "Phone Number Text Field");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosResetCTAEnabledInResetpage, "Reset Button Enabled")) {
				logger.info(
						"User is able to see the Reset CTA is enabled when he entered valid phone number in Reset screen");
				extent.extentLoggerPass("Feed",
						"User is able to see the Reset CTA is enabled when he entered valid phone number in Reset screen");
			} else {
				logger.info(
						"User is not able to see the Reset CTA is enabled when he entered valid phone number in Reset screen");
				extent.extentLoggerFail("Feed",
						"User is not able to see the Reset CTA is enabled when he entered valid phone number in Reset screen");
			}
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "login page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T801_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T801_Check the error message as The mobile number and passowrd combination was wrong during login when user enter invalid passowrd");
			System.out.println("T801_Check the error message as The mobile number and passowrd combination was wrong during login when user enter invalid passowrd");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9855658853", "valid Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "1111111111", " inValid Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "Log in button");
			waitTime(500);
			if (verifyElementPresent(
					IOSHipiNeoProfilePage.objiosinvalidErrorToastMessageForMobileNumberLessThan10DigitsInLoginPage,
					"Invalid Error Toast Message")) {
				logger.info(
						"User is getting the error message as The mobile number and passowrd combination was wrong during login when entered wrong password");
				extent.extentLoggerPass("Login",
						"User is getting the error message as The mobile number and passowrd combination was wrong during login when entered wrong password");

			} else {
				logger.info(
						"User is not getting the error message as The mobile number and passowrd combination was wrong during login when entered wrong password");
				extent.extentLoggerFail("Login",
						"User is not getting the error message as The mobile number and passowrd combination was wrong during login when entered wrong password");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");

		}
	}

	public void LoginSignupScreen_T805_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T805_Check if user is able to remove the entered phone number by tapping on cross icon in Login with OTP screen for Phone number");
			System.out.println("T805_Check if user is able to remove the entered phone number by tapping on cross icon in Login with OTP screen for Phone number");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage,
					"Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9855658853", "valid Phone Number Type");
			waitTime(3000);
			String before = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			System.out.println(before);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			String after = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			System.out.println(after);
			if (!before.equals(after)) {
				logger.info(
						"User is able to remove the entered phone number by tapping on cross icon in Login with OTP screen");
				extent.extentLoggerPass("Feed",
						"User is able to remove the entered phone number by tapping on cross icon in Login with OTP screen");
			} else {
				logger.info(
						"User is not able to remove the entered phone number by tapping on cross icon in Login with OTP screen");
				extent.extentLoggerFail("Feed",
						"User is not able to remove the entered phone number by tapping on cross icon in Login with OTP screen");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T806_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T806_Check if Send OTP CTA is highlighted with red colour when user enter the valid Phone Number in Login with OTP screen");
			System.out.println("T806_Check if Send OTP CTA is highlighted with red colour when user enter the valid Phone Number in Login with OTP screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage,
					"Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9855658853", "valid Phone Number Type");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSendOTPCTAEnabledInLoginWithOTPPage,
					"Send OTP Button")) {
				logger.info(
						"User is able to see the Send OTP CTA is enabled when he entered valid phone number in Login with OTP screen");
				extent.extentLoggerPass("Feed",
						"User is able to see the Send OTP CTA is enabled when he entered valid phone number in Login with OTP screen");
			} else {
				logger.info(
						"User is not able to see the Send OTP CTA is enabled when he entered valid phone number in Login with OTP screen");
				extent.extentLoggerFail("Feed",
						"User is not able to see the Send OTP CTA is enabled when he entered valid phone number in Login with OTP screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginOrSignupScreen_T810_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T810_Check the UI of the Login with OTP screen");
			System.out.println("T810_Check the UI of the Login with OTP screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneTabInLogInPage, "Phone tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage,
					"Phone Number Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objios91Textindropdown, "+91");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Drop Down");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginWithPasswordLinkInLogInPage,
					"Log in With Password Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T814_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T814_Check the Either OTP is not valid or has expired message is displayed by tapping on Verify OTP when user entered invalid OTP ");
			System.out.println("T814_Check the Either OTP is not valid or has expired message is displayed by tapping on Verify OTP when user entered invalid OTP ");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			String num = "0" + RandomIntegerGenerator(9);
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPField(1), "OTP Field")) {

				for (int i = 1; i <= 4; i++) {
					type(IOSHipiNeoProfilePage.objiosOTPField(i), "0", "OTP Field : " + i);
					waitTime(3000);
				}
			}
			click(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP Button");
			waitTime(500);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosOTPErrorToastMessageInLoginPage,
					"OTP Error Message")) {
				logger.info(
						"User is getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
				extent.extentLoggerPass("Login",
						"User is getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
			} else {
				logger.info(
						"User is not getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
				extent.extentLoggerFail("Login",
						"User is not getting the Invalid code message after tapping on Verify OTP CTA in Verification screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginSignupScreen_T815_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T815_Check if user is able to see the Resend code along with time in verification screen");
			System.out.println("T815_Check if user is able to see the Resend code along with time in verification screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			String num = "9" + RandomIntegerGenerator(9);
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosResendCodeTextInOTPVerificationPage,100,"Resend Code text");
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosResendCodeTextInOTPVerificationPage,
					"Resend Code text")) {
				logger.info("User is able to see the Resend code along with time in verification screen");
				extent.extentLoggerPass("Login",
						"User is able to see the Resend code along with time in verification screen");
			} else {
				logger.info("User is not able to see the Resend code along with time in verification screen");
				extent.extentLoggerFail("Login",
						"User is not able to see the Resend code along with time in verification screen");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginSignupScreen_T812_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T812_Check the UI of verication screen");
			System.out.println("T812_Check the UI of verication screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957234", "Phone Number Type");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEnter4DigitCodeTextInOTPVerificationPage,
					"Enter 4-digit OTP text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosYouCodeWasMessagedTextInOTPVerificationPage,
					"Your Code Was Messaged");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPField(1), "OTP Field")) {

				for (int i = 1; i <= 4; i++) {
					verifyElementPresent(IOSHipiNeoProfilePage.objiosOTPField(i), "OTP Field : " + i);
					waitTime(2000);
				}
			}
			verifyElementPresent(IOSHipiNeoProfilePage.objiosHavenotRecivedOTPTextInOTPVerificationPage,
					"Haven't Recieved OTP Text");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainLinkInOTPVerificationPage, 100,
					"Send again link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSendAgainLinkInOTPVerificationPage, "Send again link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginSignupScreen_T818_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T818_Check if user is able to see the OTP sent successfully message is displayed by tapping on Send again link");
			System.out.println("T818_Check if user is able to see the OTP sent successfully message is displayed by tapping on Send again link");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With OTP Link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(2000);
			String num = "0" + RandomIntegerGenerator(9);
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainLinkInOTPVerificationPage, 100,
					"Send again link");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendAgainLinkInOTPVerificationPage, "Send again link");
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSaveAsDraftTostMessage, "Draft Video Tost Message"))// we
																														// should
																														// change
																														// the
																														// locator
			{
				logger.info("User is getting the message OTP sent successfully by tapping on Send again link");
				extent.extentLoggerPass("login",
						"User is getting the message OTP sent successfully by tapping on Send again link");
			} else {
				logger.info("User is getting not the message OTP sent successfully by tapping on Send again link");
				extent.extentLoggerFail("login",
						"User is getting not the message OTP sent successfully by tapping on Send again linkUser is not getting toast message when he saves a draft video");
			}
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginSignupScreen_T820_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T820_Check the error message is displayed when user trys to login with Phone Number without network");
			System.out.println("T820_Check the error message is displayed when user trys to login with Phone Number without network");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9008610296", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, "123456", " Valid Password");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "Log in button");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosNoInternetErrorTostMessageInLoginScreen,
					"Network error tost message")) {
				logger.info("User is getting the error message when user tries to log in with Phone Number");
				extent.extentLoggerPass("Login",
						"User is getting the error message when user tries to log in with Phone Number");
			} else {
				logger.info("User is not getting the error message when user tries to log in with Phone Number");
				extent.extentLoggerFail("Login",
						"User is not getting the error message when user tries to log in with Phone Number");
			}
			waitTime(3000);
			wifi("On");
			waitTime(10000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginOrSignupScreen_T821_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T821_Check the UI of the Login in screen for Email tab");
			System.out.println("T821_Check the UI of the Login in screen for Email tab");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneTabInLogInPage, "Phone tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage,
					"Email Address Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "login Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginOrSignupScreen_T823_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T823_Check if user is able to see the toast message as Please use valid Email Address by tapping on Log in CTA without giving any data in Login in screen");
			System.out.println("T823_Check if user is able to see the toast message as Please use valid Email Address by tapping on Log in CTA without giving any data in Login in screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage,
					"Email Address Text Field");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosLoginButtonInLoginPage, "login Button");
			waitTime(500);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPleaseUseValidEmailAddressToastMessageInLoginPage,
					"Toast message ")) {
				logger.info(
						"User is getting the message as Please use valid Email Address by tapping on Log in CTA in Log in screen");
				extent.extentLoggerPass("Login",
						"User is getting the message as Please use valid Email Address by tapping on Log in CTA in Log in screen");
			} else {
				logger.info(
						"User is not getting the message as Please use valid Email Address by tapping on Log in CTA in Log in screen");
				extent.extentLoggerFail("Login",
						"User is not getting the message as Please use valid Email Address by tapping on Log in CTA in Log in screen");
			}
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T825_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T825_Check if user is able to remove the entered Email address by tapping on cross icon in login screen");
			System.out.println("T825_Check if user is able to remove the entered Email address by tapping on cross icon in login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage,
					"Email Address Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "nithinnithumd@gmail.com", "Email id");
			waitTime(3000);
			String before = getText(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage);
			System.out.println(before);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			String after = getText(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage);
			System.out.println(after);
			if (!before.equals(after)) {
				logger.info("User is able to remove the entered Email id by tapping on cross icon");
				extent.extentLoggerPass("Feed", "User is able to remove the entered Email id by tapping on cross icon");
			} else {
				logger.info("User is not able to remove the entered Email id by tapping on cross icon");
				extent.extentLoggerFail("Feed",
						"User is not able to remove the entered Email id by tapping on cross icon");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginSignupScreen_T827_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T827_Check if user is able to remove the entered password by tapping on cross icon in login screen");
			System.out.println("T827_Check if user is able to remove the entered password by tapping on cross icon in login screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
			waitTime(2000);
			type(IOSHipiNeoHomePage.objiosPasswordField, "11111", "Password");
			waitTime(3000);
			String before = getText(IOSHipiNeoHomePage.objiosPasswordField);
			System.out.println(before);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			String after = getText(IOSHipiNeoHomePage.objiosPasswordField);
			System.out.println(after);
			if (!before.equals(after)) {
				logger.info("User is able to remove the entered password by tapping on cross icon");
				extent.extentLoggerPass("Feed", "User is able to remove the entered password by tapping on cross icon");
			} else {
				logger.info("User is not able to remove the entered password by tapping on cross icon");
				extent.extentLoggerFail("Feed",
						"User is not able to remove the entered password by tapping on cross icon");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	public void LoginOrSignupScreen_T829_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T829_Check if the Login CTA is highlighted with red colour when user enter the valid credentials in Email tab screen");
			System.out.println("T829_Check if the Login CTA is highlighted with red colour when user enter the valid credentials in Email tab screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage,
					"Email Address Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "nithinnithumd@gmail.com", "Email id");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosLoginPassWordTextField, " Password Text Field");
			waitTime(2000);
			type(IOSHipiNeoHomePage.objiosPasswordField, "11111111", "Password");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginButtonEnabledInLoginPage,
					"Log in button enabled")) {
				logger.info("User is able to see the Login CTA is enabled  when he entered valid credentils");
				extent.extentLoggerPass("Login",
						"User is able to see the Login CTA is enabled  when he entered valid credentils");
			} else {
				logger.info("User is not able to see the Login CTA is enabled  when he entered valid credentils");
				extent.extentLoggerFail("Login",
						"User is not able to see the Login CTA is enabled  when he entered valid credentils");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");

		}
	}

	public void LoginOrSignupScreen_T830_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T830_Check the UI of the forgot Password Reset Screen for Email ");
			System.out.println("T830_Check the UI of the forgot Password Reset Screen for Email ");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosForgotPasswordTextInResetpage,
					"Forgot Password Text in reset page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosResetCTAInResetpage, "Reset CTA");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage,
					"EmailAddress text field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosWeWillEmailYouTextInResetPage,
					"We'll email you a link to reset your password [text}");
			waitTime(2000);

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	public void LoginOrSignupScreen_T832_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T832_Check if user is able to remove the entered email address by tapping on cross icon in forgot Password Reset Screen for Email");
			System.out.println("T832_Check if user is able to remove the entered email address by tapping on cross icon in forgot Password Reset Screen for Email");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage,
					"EmailAddress text field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage, "nithinnithumd@gmail.com", "Email id");
			waitTime(3000);
			String before = getText(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage);
			System.out.println(before);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Cross Icon");
			waitTime(3000);
			String after = getText(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage);
			System.out.println(after);
			if (!before.equals(after)) {
				logger.info(
						"user is able to remove the entered email address by tapping on cross icon in forgot Password Reset Screen for Email");
				extent.extentLoggerPass("Feed",
						"user is able to remove the entered email address by tapping on cross icon in forgot Password Reset Screen for Email");
			} else {
				logger.info(
						"user is not able to remove the entered email address by tapping on cross icon in forgot Password Reset Screen for Email");
				extent.extentLoggerFail("Feed",
						"user is not able to remove the entered email address by tapping on cross icon in forgot Password Reset Screen for Email");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginOrSignupScreen_T833_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T833_Check if the Reset CTA is highlighted with red colour when user enter the valid email address in Reset screen for Email");
			System.out.println("T833_Check if the Reset CTA is highlighted with red colour when user enter the valid email address in Reset screen for Email");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone or Email");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage,
					"EmailAddress text field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInResetPage, "nithinnithumd@gmail.com", "Email id");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosResetCTAEnabledInResetpage, "Reset CTA  enabled")) {
				logger.info("User is able to see the Reset CTA is enabled  when he entered valid credentils");
				extent.extentLoggerPass("Login",
						"User is able to see the Reset CTA is enabled  when he entered valid credentils");
			} else {
				logger.info("User is not able to see the Reset CTA is enabled  when he entered valid credentils");
				extent.extentLoggerFail("Login",
						"User is not able to see the Reset CTA is enabled  when he entered valid credentils");

			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginPage, "Login in to Hipi page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");

		}

	}

	// ===========================kiran=======================================================
//20/12/20 Red================================================Profile=P0=========================================

	public void Profile_T1047(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1047_Guest user-  Check whether login/signup popup displays when user taps on profile tab");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Log in Pop up")) {
				logger.info("user is getting Login /signup popup");
				extent.extentLoggerPass("", "user is getting Login /signup popup");
			} else {
				logger.info("user is not getting Login /signup popup");
				extent.extentLoggerFail("", "user is not getting Login /signup popup");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
		}
	}

	// 20/12/20================================================Profile=P0=========================================

	public void Profile_T1050(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1050_Logged in user - Check if  tapping 'back' button user is redirected back to Profile Screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEditProfileInEditePage, " Edit Page");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, " Profile Page")) {
				logger.info("User able to redirect to Profile Screen.");
				extent.extentLoggerPass("", "User able to redirect to Profile Screen.");
			} else {
				logger.info("User not able to redirect to Profile Screen.");
				extent.extentLoggerFail("", "User not able to redirect to Profile Screen.");
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}

	}

	// 20/12/20================================================Profile=P0=========================================

	public void Profile_T1222(String userType) throws Exception {
		extent.HeaderChildNode("T1222_Verify the Save Look CTA and it click & Navigation on shoppable video");
		deleteProductsInSavedMoments();

		waitTime(2000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1), "Product in Saved Moments tab")) {
			logger.info("upon tapping Save Look the product gets saved to shop page of playing video ");
			extent.extentLoggerPass("", "upon tapping Save Look the product gets saved to shop page of playing video ");
		} else {
			logger.info("upon tapping Save Look the product is not saved to shop page of playing video ");
			extent.extentLoggerFail("",
					"upon tapping Save Look the product is not saved to shop page of playing video ");
		}

		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	// 20/12/20================================================Profile=P0=========================================
	public void Profile_T1223(String userType) throws Exception {

		extent.HeaderChildNode("T1223_Verify the Saved CTA and it click & Navigation on shoppable video");

		deleteProductsInSavedMoments();
		waitTime(2000);
		navigateToTrendingRailShoppableVideo(1);
		waitTime(4000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSHeartBtn_Seleted, "Saved");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
				"Product Image after clicking on Saved")) {
			logger.info("Upon tapping saved CTA the product images of playing video displayed");
			extent.extentLoggerPass("", "Upon tapping saved CTA the product images of playing video displayed");
		} else {
			logger.info("Upon tapping saved CTA the product images of playing video is not displayed");
			extent.extentLoggerFail("", "Upon tapping saved CTA the product images of playing video is not displayed");
		}
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

	}

	// 20/12/20================================================Profile=P0=========================================

	public void Profile_T1224(String userType) throws Exception {

		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1224_Guest User- Verify the product thumnail image and it click & Navigation on the shoppable video");

		} else {
			extent.HeaderChildNode(
					"T1224_Logged In User- Verify the product thumnail image and it click & Navigation on the shoppable video");
		}
		deleteProductsInSavedMoments();
		waitTime(3500);
		navigateToTrendingRailShoppableVideo(1);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look Button");
		waitTime(2000);

		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images")) {

			List<WebElement> totalimg = getDriver()
					.findElements(IOSHipiNeoHomePage.objiOSHipiTotalShoppableImagesfeedSection);
			int list = totalimg.size();
			logger.info("Total Images found : " + list);
			extent.extentLogger("", "Total Images found : " + list);
			extent.extentLoggerPass("",
					"Every shoppable videos is displaying product images of playing video at bottom side");
		} else {
			logger.info("Every shoppable videos is not displaying product images of playing video at bottom side");
			extent.extentLoggerFail("",
					"Every shoppable videos is not displaying product images of playing video at bottom side");
		}

		click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "First product");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop Page")) {
			verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In This Video Section");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			String TotalProducts = getText(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage);
			int products = Integer.parseInt(TotalProducts);

			logger.info("Total products present in saved moments tab are " + products);
			extent.extentLogger("", "Total products present in saved moments tab are " + products);

			waitTime(2000);
			CloseTheShopBar();
			waitTime(2000);

		}
		waitTime(2000);
		BackFromTrendingRailShoppableVideo();

	}

	// 20/12/20================================================Profile=P0=========================================

	public void Profile_T1225(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1225_Logged In User- Verify the shop page navigation from shoppable video");
		} else {
			extent.HeaderChildNode("T1225_Guest User- Verify the shop page navigation from shoppable video");
		}

		navigateToTrendingRailShoppableVideo(1);
		waitTime(2000);
		deleteproductsInTrendingSaved();
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
				"Product images at bottom")) {
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product Image");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "shop page");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtons(1),
					"Product is saved in Saved Moments tab")) {
				logger.info("upon tapping on product image from video bottom side it navigates to shop page ");
				extent.extentLoggerPass("",
						"upon tapping on product image from video bottom side it navigates to shop page ");
			} else {
				logger.info("upon tapping on product image from video bottom side it does not navigate to shop page ");
				extent.extentLoggerFail("",
						"upon tapping on product image from video bottom side it does not navigate to shop page ");
			}

		}
		waitTime(2000);
		CloseTheShopBar();
		waitTime(3000);
		BackFromTrendingRailShoppableVideo();

	}

	// 17/12/2021 k===============================================Login/Signup
	// screen=P1=================================================

	public void LoginSignupScreen_T822(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T822_Check if user is able to navigate to Email tab screen by tapping on Email tab in Login In screen");
			System.out.println("T822_Check if user is able to navigate to Email tab screen by tapping on Email tab in Login In screen");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage,
					"Email Address Text Field")) {
				logger.info("User able to navigate to Email screen on tapping on Email tab in Log In screen");
				extent.extentLoggerPass("",
						"User able to navigate to Email screen on tapping on Email tab in Log In screen");
			} else {
				logger.info("User not able to navigate to Email screen on tapping on Email tab in Log In screen");
				extent.extentLoggerFail("",
						"User not able to navigate to Email screen on tapping on Email tab in Log In screen");
			}
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
		}
	}

	// 17/12/21
	// k===============================================Profile=P1==================================================

	public void Profile_T1069(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1069_Logged in user -Check  on tapping 'Followers' user is navigated to followers list screen");
			follow();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage,
					"Search Field in Following page")) {
				logger.info("User able to redirect to followers list screen");
				extent.extentLoggerPass("", "User able to redirect to followers list screen");
			} else {
				logger.info("User not able to redirect to followers list screen");
				extent.extentLoggerFail("", "User not able to redirect to followers list screen");
			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 17/12/21
	// k===============================================Profile=P1==================================================

	public void Profile_T1071(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1071_Logged in user -  Check if on tapping 'back' button user is re-directed back to Profile Screen");
			follow();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"),
					"Followers Button")) {
				logger.info("User able to re-directed back to profile screen.");
				extent.extentLoggerPass("", "User able to re-directed back to profile screen.");
			} else {
				logger.info("User not able to re-directed back to profile screen.");
				extent.extentLoggerFail("", "User not able to re-directed back to profile screen.");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	// 17/12/21
	// k===============================================Profile=P1==================================================

	public void Profile_T1078(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1078_Logged in user - Check  by  tapping 'Following' user is navigated to Following list screen");
			follow();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage,
					"Search Field in Following page")) {
				logger.info("User able to redirect to following list screen");
				extent.extentLoggerPass("", "User able to redirect to following list screen");
			} else {
				logger.info("User not able to redirect to following list screen");
				extent.extentLoggerFail("", "User not able to redirect to following list screen");
			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

//20/12/21 new one k===============================================Profile=P1==================================================	
	public void Profile_T1075(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1075_Logged  in user - Check if on tapping any user from followers list, user is redirected to 'selected user profile detail screen'");
			follow();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers");
			waitTime(3000);
			String expectedresult = getText(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen, "user name");
			waitTime(3000);
			logger.info("Expected User name : " + expectedresult);
			String actualresult = getText(IOSHipiNeoProfilePage.objiOSProfileNamesInProfileDetailsPage);
			waitTime(3000);
			logger.info("actua User name : " + actualresult);
			waitTime(3000);
			if (expectedresult.equalsIgnoreCase(actualresult)) {
				logger.info("User is redirected to selected user profile detail screen.");
				extent.extentLoggerPass("", "User is redirected to selected user profile detail screen.");
			} else {
				logger.info("User not redirected to selected user profile detail screen.");
				extent.extentLoggerFail("", "User not redirected to selected user profile detail screen.");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

//20/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1466(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1466_Logged in user - Check user is able to navigate back to discover page by tapping back button from video");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToAnyShoppableVideoInDiscoverPage(1);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage,
					"Search Field In Discover Page")) {
				logger.info("User able to navigate back to discover screen ");
				extent.extentLoggerPass("", "User able to navigate back to discover screen ");
			} else {
				logger.info("User not able to navigate back to discover screen ");
				extent.extentLoggerFail("", "User not able to navigate back to discover screen ");
			}
			PartialSwipeiOS("DOWN", 1);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 20/12/21//
	// k===============================================Discover=P1==================================================
	public void Discover_T1515(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1515_Guest User -Verify swipe the rail to left and right");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);

			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			PartialCommentsSwipe("UP", 1);
			// PartialSwipe("UP", 1);
			waitTime(3000);
			SwipeRailIOS(IOSHiPiNeoDiscoverPage.objiosTrayselement("Bollywood Zone", 4), "Right");
			// PartialSwipe("UP", 1);
			waitTime(3000);
			String expectedname1 = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"));
			logger.info("First name " + expectedname1);
			waitTime(3000);
			SwipeRailIOS(IOSHiPiNeoDiscoverPage.objiosTrayselement("Bollywood Zone", 3), "Left");
			waitTime(3000);

			if (verifyElementExist(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"),
					expectedname1)) {
				logger.info("User not able to swipe the rail to left");
				extent.extentLoggerFail("", "User not able to swipe the rail to left");
			} else {
				logger.info("User able to swipe the rail to left");
				extent.extentLoggerPass("", "User able to swipe the rail to left");
			}
			SwipeRailIOS(IOSHiPiNeoDiscoverPage.objiosTrayselement("Bollywood Zone", 4), "Right");
			waitTime(3000);
			String actualname2 = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"));
			waitTime(3000);
			if (expectedname1.equalsIgnoreCase(actualname2)) {
				logger.info("User able to swipe the rail to Right");
				extent.extentLoggerPass("", "User able to swipe the rail to Right");
			} else {
				logger.info("User not able to swipe the rail to Right");
				extent.extentLoggerFail("", "User not able to swipe the rail to Right");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

//20/12/21//  k===============================================Discover=P1==================================================	
	public void Discover_T1458(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1458_Guest User - Check user is able to view full player of the videos by tapping on any video in sound detail page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshikhurana", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Sounds"), "sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosOfHashtagVideoDetailPage, "Play Icon");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button")) {
				logger.info("User able to view full player of the videos by tapping on any video in sound detail page");
				extent.extentLoggerPass("",
						"User able to view full player of the videos by tapping on any video in sound detail page");
			} else {
				logger.info(
						"User not able to view full player of the videos by tapping on any video in sound detail page");
				extent.extentLoggerFail("",
						"User not able to view full player of the videos by tapping on any video in sound detail page");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

//21/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1519_T1558(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1519_Guest User -Verify for arrow mark infront of rail title name");
		} else {
			extent.HeaderChildNode("T1558_Logged In User -Verify for arrow mark infront of rail title name");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		waitTime(3000);
		ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
		waitTime(3000);
		ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosRightFacingArrowForTray("Bollywood Zone"),
				"Bollywood Zone");
		if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objBollywoodZonePageInDiscoverPage, "Bollywood Zone Page")) {
			logger.info(
					"User able to see arrow mark infront of rail title and on tap it should navigate to user profile list page");
			extent.extentLoggerPass("",
					"User able to see arrow mark infront of rail title and on tap it should navigate to user profile list page");
		} else {
			logger.info(
					"User not able to see arrow mark infront of rail title and on tap it should navigate to user profile list page");
			extent.extentLoggerFail("",
					"User not able to see arrow mark infront of rail title and on tap it should navigate to user profile list page");
		}
		click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);

	}

//21/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1523(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1523_Guest User: Verify for click on profile image and name from the user list page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosrailviewallbutton("Bollywood Zone"),
					"View all button of Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosFollowUsersNameDetailsInBollywoodZoneScreen, "Users Name");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots")) {
				logger.info("On tap user name user able to navigate to profile details page");
				extent.extentLoggerPass("", "On tap user name user able to navigate to profile details page");
			} else {
				logger.info("On tap user name user not able to navigate to profile details page");
				extent.extentLoggerFail("", "On tap user name user not able to navigate to profile details page");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

//21/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1567(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1567_Logged In User- Verify follow button and its click on the user profile page");
			deleteFollowingInFollowingScreen();
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			if(!verifyElementExist(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image")) {
				PartialCommentsSwipeiOS("UP", 1);
				waitTime(3000);
			}
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(3000);
			String expectedname = getText(IOSHipiNeoProfilePage.objiOSProfileNamesInProfileDetailsPage);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			String actualname = getText(IOSHipiNeoProfilePage.objiosFollowingUsersNameDetailsInFollowingcreen);
			if (expectedname.equalsIgnoreCase(actualname)) {
				logger.info(
						"On tap follow button that respected user gets followed and it displays uder following list");
				extent.extentLoggerPass("",
						"On tap follow button that respected user gets followed and it displays uder following list");
			} else {
				logger.info(
						"On tap follow button that respected user not gets followed and it not displayed uder following list");
				extent.extentLoggerFail("",
						"On tap follow button that respected user not gets followed and it not displayed uder following list");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

//22/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1568(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			System.out.println("T1568_Logged In User- Verify Following tab and its click on the user profile page");
			
			extent.HeaderChildNode("T1568_Logged In User- Verify Following tab and its click on the user profile page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowingTabInFollowingScreen, "Following Tab")) {
				logger.info("User can access the following list clicking upon following tab");
				extent.extentLoggerPass("", "User can access the following list clicking upon following tab");
			} else {
				logger.info("User can not access the following list clicking upon following tab");
				extent.extentLoggerFail("", "User can not access the following list clicking upon following tab");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

//22/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1576_T1582(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1576_T1582_Logged In User - validate the auto suggestion list under following tab respective to search input");
			deleteFollowingInFollowingScreen();
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			String username1 = getText(IOSHipiNeoProfilePage.objiOSProfileNamesInProfileDetailsPage);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(3000);
//			click(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile");
//			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field In Followrs Page");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, username1, "User Name");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowerNameInFollowerTab(username1), "Follower Name")) {
				logger.info("user can type on search field under follower tab and autosuggestion result is displayed");
				extent.extentLoggerPass("",
						"user can type on search field under follower tab and autosuggestion result is displayed");
			} else {
				logger.info(
						"user can't type on search field under follower tab and autosuggestion result is not displayed");
				extent.extentLoggerFail("",
						"user can't type on search field under follower tab and autosuggestion result is not displayed");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

//22/12/21//  k===============================================Discover=P1==================================================	

	public void Discover_T1584(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1584_Logged In -Verify for click on displayed user name from the search result and navigation");
			deleteFollowingInFollowingScreen();
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field In Followrs Page");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Kiran", "User Name");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen, "Users Name");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots")) {
				logger.info(
						"User able to tap on searched result from the list and it is able to navigate to user profile page");
				extent.extentLoggerPass("",
						"User able to tap on searched result from the list and it is able to navigate to user profile page");
			} else {
				logger.info(
						"User not able to tap on searched result from the list and it is not able to navigate to user profile page");
				extent.extentLoggerFail("",
						"User not able to tap on searched result from the list and it is not able to navigate to user profile page");
			}
			for (int i = 1; i <= 3; i++) {
				click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Arrow icon");
				waitTime(3000);
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 23/12/21//
	// k===============================================Creator=P1==================================================

//=====================s============================================================================
	public void Feed_T057(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T057_Guest User - Check if user is unable to perform Add to Favourites action by tapping on it");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			tapiOS_Middlepoint(1);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSAddToFavouritesPopUp, "Add to Favourite");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Icon");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T073(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T073_Guest User - Check if user get login pop-up by tapping on like icon a video on played/paused video");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSLikeBtn, "Like button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Icon");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Feed_T060_T110_T121(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T060_Guest - Check if user is able to view Network Error when he taps on Save video without internet");
		} else {
			extent.HeaderChildNode(
					"T110_T121_Logged in User - Check if user is able to view Network Error when he taps on Save Video without internet");
		}
		verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		waitTime(2000);
		wifi("off");
		click(IOSHipiNeoHomePage.objiOSWifiOff, "Wifi On button");
		waitTime(5000);
		tapiOS_Middlepoint(1);
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSsave_video, "save video");
		waitTime(1000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSNetworkError, "Network Error");
		waitTime(2000);
		tapiOSAtCenterOfScrreen(1);
		waitTime(2000);
		wifi("on");
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

	}

	public void Feed_T448_T459(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T448_T459_Logged in User - Check if user is able to view Network Error when he taps on Save Video without internet");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following You");
			waitTime(2000);
			wifi("off");
			click(IOSHipiNeoHomePage.objiOSWifiOff, "Wifi On button");
			waitTime(5000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSsave_video, "save video");
			waitTime(1000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSNetworkError, "Network Error");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			wifi("on");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void Feed_T053(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T053_Logged in User - Check the UI of User Profile Page");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile In Profile Page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button In Profile Page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosNotificationInProfilePage, "Notification In Profile Page");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAddPerson, "Invite Friends");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"),
					"Following In profile picture");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"),
					"Followers In profile picture");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Likes"),
					"Likes In profile picture");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosShoppableVideoInProfilePage,
					"Shoppable video in profile tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private video in profile tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "Book Mark/Saved");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosProfilePictureInProfilePage, "Profile Picture");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T076(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T076_Guest User -  Check if user is able to see the Comment icon For You screen");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCommentBtn, "comment button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T079(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T079_Guest User - Check if user is able to view Network Error when he taps on Comment without internet");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCommentBtn, "comment button");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.onjiosNetworkErrorInCommentIcon,10, "Network Error");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T091(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T091_Guest User -  Check if user is able to see the Login in to HiPi pop-up/screen by tapping on User this Sound CTA in the Sound details page");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music In Feed Screen");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosMusicPageInFeedScreen, "Music Page in sound");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosCloseIconPoup, "close popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosBackArrowInMusicPage, "Back Arrow");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}

	}

	public void Feed_T092(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T092_Guest User - Check if user is able to view Network Error when he taps on Sound without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music In Feed Screen");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.onjiosNetworkErrorInCommentIcon,10, "Network Error");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosBackArrowInMusicPage, "Back Arrow");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T098(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T098_Logged in User - Check if user is able to view Network Error when he taps on Like icon without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSNetworkError, "Network Error");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T100(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T100_Logged in User - Check if user is able to view Network Error when he taps on Not interested in Share to screen without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(2000);
			PartialSwipe("Up", 1);
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosNotInterestedInShareIcon,
					"Not Interested In Share Icon");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,8, "Network Error");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}

	}

	public void Feed_T103(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T103_Logged in User - Check if user is able to perform Add to Favourites action by tapping on it");
			System.out.println("T103_Logged in User - Check if user is able to perform Add to Favourites action by tapping on it");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosAddToFavouritesInShareBtn, "Add to favourites");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosAddedToFavorites, "Added To Favourites");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			RemoveAddedToFavourites();
		}
	}

	public void Feed_T441(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T441_Logged in User - Check if user is able to perform Add to Favourites action by tapping on it");
			System.out.println("T441_Logged in User - Check if user is able to perform Add to Favourites action by tapping on it");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			follow();
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following");
			waitTime(2000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosAddToFavouritesInShareBtn, "Add to favourites");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosAddedToFavorites, "Added To Favourites");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			RemoveAddedToFavourites();
		}
	}
	
	public void RemoveAddedToFavourites() throws Exception {
		tapiOS_Middlepoint(1);
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosAddedToFavorites, "Added To Favourites");
		waitTime(2000);
		tapiOSAtCenterOfScrreen(1);
		waitTime(2000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
	}
	
	

	public void Feed_T104(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T104_Logged in User - Check if user is able to view Network Error when he taps on Add to Favorites without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			wifi("OFF");
			waitTime(15000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosAddToFavouritesInShareBtn, "Add to favourites");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,6, "Network Error");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T106(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T106_Logged in User - Check if user is able to view Network Error when he taps onNot Interested without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			wifi("OFF");
			waitTime(15000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSNotinterestedPopUp, "Not Interested");
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,7, "Network Error");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T108(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T108_Logged in User - Check if user is able to view Network Error when he taps on Report without internet");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			wifi("OFF");
			waitTime(15000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSReportPopUp, "Report Popup");
			if(waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,7, "Network Error")) {
				extentLoggerPass("", "user is able to view Network Error when he taps on Report without internet");
				logger.info("user is able to view Network Error when he taps on Report without internet");
			}else {
				extentLoggerFail("", "user is able to view Network Error when he taps on Report without internet");
				logger.info("user is able to view Network Error when he taps on Report without internet");
			}
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
			wifi("ON");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T111(String userType) throws Exception {
		extent.HeaderChildNode("T111_Check if 'Share' screen is displayed when tapped on Share video [-> Icon]");
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Message Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "cross Icon");
		waitTime(2000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
	}

	public void Feed_T212(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T212_Logged In user- Verify for SHOP button click and redirection");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "Shop Page");
			waitTime(3000);
			CloseTheShopBar();
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T248_T256(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T248_Guest User- Verify two sections of Shoe Page are:IN THIS VIDEO and SAVED MOMENTS");
		} else {
			extent.HeaderChildNode(
					"T256_Logged In user- Verify two sections of Shop Page are:IN THIS VIDEO and SAVED MOMENTS");
		}
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled_Shop");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "Shop Page");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved moments");
		waitTime(3000);
		CloseTheShopBar();
		waitTime(2000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
	}

	public void Feed_T258(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T258_Guest User-Verify for IN THIS VIDEO section on the Shop Page");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled_Shop");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "Shop Page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosTotalNosBesideInThisVideoTabShopPage, "In This Video");
			waitTime(3000);
			CloseTheShopBar();
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Feed_T426(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T426_Logged in User - Check if user is able to Create a video with original sound");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			follow();
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music In Feed Screen");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosMusicPageInFeedScreen, "Use this sound");
			waitTime(5000);
			PopupOfCameraAndMicrophone();
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 100, "Next button");
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button");
			waitTime(2500);
			type(IOSHipiCreateVideoPage.objDescriptionInVideoPostPage, "video description", "Description");
			waitTime(2500);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done");
			hideKeyboard();
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitTime(2500);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 50, "For You button");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You button");
		}
	}

	/////////////////////////////////// 29-12-21//////////////////s///////////////////
	public void Feed_T235_T200(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T200-Guest User- Verify for save looks button for Non-shoppable videos");
		} else {
			extent.HeaderChildNode("T235-Logged In user- Verify for save looks button for Non-shoppable videos");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			if(verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar,"Shop Button")){
				for (int i = 0; i < 25; i++) {
					Swipe("Up", 1);
					if (!verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar,"Shop Button")) {
						break;
					}
				}
			}
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the Look")) {
				logger.info(" Save looks icon not present for Non-shoppable videos.");
				extent.extentLoggerPass("", " Save looks icon not present for Non-shoppable videos.");
			} else {
				logger.info("Save looks icon present for Non-shoppable videos.");
				extent.extentLoggerFail("", "Save looks icon present for Non-shoppable videos.");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
		}
	}

	public void Feed_T209(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T209-Logged In User -Verify for shop button should NOT display while watching Non-shoppable videos.");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			if(verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar,"Shop Button")){
				for (int i = 0; i < 25; i++) {
					Swipe("Up", 1);
					if (!verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar,"Shop Button")) {
						break;
					}
				}
			}
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				logger.info(" The SHOP button  not appear for non shopable video");
				extent.extentLoggerPass("", " The SHOP button should not appear for non shopable video");
			} else {
				logger.info("The SHOP button is  appeared for non shopable video");
				extent.extentLoggerFail("", "The SHOP button is  appeared for non shopable video");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
		}
	}

	public void Feed_T208(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T208-Logged In User-Verify for shop button should display only while user watching shoppable videos.");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(5000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop")) {
				click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
				waitTime(3000);
				verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page details");
				logger.info(" The SHOP button should appear only for shopable video along with shopable tag");
				extent.extentLoggerPass("",
						" The SHOP button should appear only for shopable video along with shopable tag");
			} else {
				logger.info("The SHOP button should not appear only for shopable video along with shopable tag");

				extent.extentLoggerFail("",
						"The SHOP button should not  appear only for shopable video along with shopable tag");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
		}
	}

	public void Feed_T206(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T206-Logged In User- Verify the SHOP button on the feed and its clickble");
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosInThisVideoInShopePage, "In This Video Section");
			waitTime(2000);
			CloseTheShopBar();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

		}
	}

	public void Feed_T186(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T186_Guest User- Verify for SAVE LOOK button click");
			deleteProductsInSavedMoments();
			waitTime(2000);

			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2500);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet, "Product you can buy");
			waitTime(2500);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close coursel");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoHomePage.objiosSavedLook, "Saved Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	public void Feed_T201(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T201_Guest User- Verify for SAVE LOOK button click");
			deleteProductsInSavedMoments();
			waitTime(2000);

			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2500);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet, "Product you can buy");
			waitTime(2500);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close coursel");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoHomePage.objiosSavedLook, "Saved Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	public void Feed_T187(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T187_Guest User -Verify for SAVE LOOK functionality");
			deleteProductsInSavedMoments();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2500);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(0),"Product you can buy");
			waitTime(2500);
			click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "saved momments");
			waitTime(2500);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage,"No of moments");
			waitTime(2000);
			CloseTheShopBar();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	public void Feed_T184(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T184_Guest User- Verify for save look button functionality once after shop page is collapsed/closed.");

			deleteProductsInSavedMoments();

			waitTime(5000);

			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save look button");
			waitTime(2500);
			verifyElementPresent(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet, "Product you can buy");
			waitTime(2500);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close coursel");
			waitTime(2500);
			verifyElementPresent(IOSHipiNeoHomePage.objiosSavedLook, "Saved Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
		}
	}

	// login-sign up---------------------------s----------------------------------

//						/////////////////////////s///////28-12-21///////Login/Signupscreen/////////
	public void ThirdpartyAppSignInPopup() throws Exception {
		if (verifyElementExist(IOSHipiNeoHomePage.objiosFacebookPopup, "Facebook Popup")) {
			click(IOSHipiNeoHomePage.objiosContinueWithGoogle, "Continue Button");
			waitTime(2000);

		} else if (verifyElementExist(IOSHipiNeoHomePage.objiosGooglePopup, "Google Popup")) {
			click(IOSHipiNeoHomePage.objiosContinueWithGoogle, "Continue Button");
			waitTime(2000);
		}

	}

	public void Login_SignupScreen_T853(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T853_Check the error message is displayed when user trys to login with google without network");
			System.out.println("T853_Check the error message is displayed when user trys to login with google without network");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
			waitTime(2000);
			ThirdpartyAppSignInPopup();
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosInternetErrorInGooglePoup,8, "Internet Error In Google Popup");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}

	}

	public void Login_SignupScreen_T849_T844(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T849__T844-Check the error message is displayed when user trys to login with Facebook without network");
			System.out.println("T849__T844-Check the error message is displayed when user trys to login with Facebook without network");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiosContinuewithTheFacebook, "Continue with the facebook");
			waitTime(2000);
			ThirdpartyAppSignInPopup();
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosInternetErrorInGooglePoup,7, "Internet Error In Google Popup");
			click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Login_SignupScreen_T851(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T851_Check if user is able to see the google login pop with list of google account which are present on the device.");
			System.out.println("T851_Check if user is able to see the google login pop with list of google account which are present on the device.");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
			waitTime(2000);
			ThirdpartyAppSignInPopup();
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts, "google Account");
			waitTime(3000);
			String GoogleAccountList = getText(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts);
			System.out.println(GoogleAccountList);
			click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Login_SignupScreen_T854(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T854_Check the UI of the list of google account which are present on the device.");
			System.out.println("T854_Check the UI of the list of google account which are present on the device.");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
			waitTime(2000);
			ThirdpartyAppSignInPopup();
			verifyElementPresent(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts, "google Account");
			waitTime(3000);
			String GoogleAccountList = getText(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts);
			System.out.println(GoogleAccountList);
			verifyElementPresent(IOSHipiNeoHomePage.objiosTermofSerivceInGoogleAccount, "Term Of Service");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosUseAnotherAccount, "use another account");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosPrivacyPolicy, "Privacy Policy");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Login_SignupScreen_T836(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T836_Check the error message is displayed when user trys to login with Email without network");
			System.out.println("T836_Check the error message is displayed when user trys to login with Email without network");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use this phone/email");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "hipineo123@mailnesia.com",
					"Email Address");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "123456", "password");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosLogInButtonInLogInPage, "Log In");
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosInternetError,6, "Internet Error");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Error");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Login_SignupScreen_T835(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T835_Check the error message as The email address and passowrd combination was wrong during login when user enter invalid passowrd");
			System.out.println("T835_Check the error message as The email address and passowrd combination was wrong during login when user enter invalid passowrd");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use this phone/email");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "hipineo123@mailnesia.com",
					"Email Address");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "12345678", "Wrong password");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosLogInButtonInLogInPage, "Log In");
			if(verifyElementPresent(IOSHipiNeoProfilePage.objiosInvalidDetails, "Invalid details")){
				logger.info(
						"User is getting the error message as \"The mobile number and passowrd combination was wrong during login\" when entered wrong password");
				extent.extentLoggerPass("Login",
						"User is getting the error message as \"The mobile number and passowrd combination was wrong during login\" when entered wrong password");
			}else {
				logger.info(
						"User is not getting the error message as \"The mobile number and passowrd combination was wrong during login\" when entered wrong password");
				extent.extentLoggerFail("Login",
						"User is not getting the error message as \"The mobile number and passowrd combination was wrong during login\" when entered wrong password");
		
			}
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}

	}

	public void Login_SignupScreen_T834(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T834_Check the error message as Please use valid email address when user enter invalid Email id");
			System.out.println("T834_Check the error message as Please use valid email address when user enter invalid Email id");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			wifi("OFF");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use this phone/email");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "hipineos@mailnesia.com",
					"Wrong Email Address");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInLogInPage, "123456", "password");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosLogInButtonInLogInPage, "Log In");
				if(verifyElementPresent(IOSHipiNeoProfilePage.objiosInvalidDetails, "Invalid details")){
					logger.info(
							"User able to get the error message as \"Please use valid email address\" when entered invalid email address");
					extent.extentLoggerPass("Login",
							"User able to get the error message as \"Please use valid email address\" when entered invalid email address");
				}else {
					logger.info(
							"User not able to get the error message as \"Please use valid email address\" when entered invalid email address");
					extent.extentLoggerFail("Login",
							"User not able to get the error message as \"Please use valid email address\" when entered invalid email address");
				}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Error");
			waitTime(2000);
			wifi("ON");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Login_SignupScreen_T839(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T839-Check the UI of the facebook site in app browser of Hipi app");
			System.out.println("T839-Check the UI of the facebook site in app browser of Hipi app");
			
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosContinuewithTheFacebook, "Continue with the facebook");
			waitTime(2000);
			ThirdpartyAppSignInPopup();
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPreviouslyLoggedInFacebook, "previously logged in");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLikeToContinueInFacebook, "would you like to continue");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosConrtinueInFacebook, "continue");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosCancelInFacebook, "cancel button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPrivacyPolicyInFacebook, "Privacy Policy");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosTermsInFacebook, "Terms In facebook");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosByContinuingHipiInFacebook, "By Continuing,HiPi");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	// -------------------------------mahi----------------------------------------------

	public void BackFromProfileDetailsPage(int index) throws Exception {
		for (int i = 1; i <= index; i++) {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button")) {
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button");
				waitTime(2000);
			} else {
				waitTime(2000);
				break;

			}
		}
	}

	public void LoginToAccount(String username, String Password) throws Exception {
		Logout();
		waitTime(3000);
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 15, "Profile button")) {
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
			waitTime(3000);

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");

			waitTime(2000);

			hideKeyboard();
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSEmailIdField, "Email field");
			waitTime(2000);
			hideKeyboard();

			type(IOSHipiNeoHomePage.objiOSEmailIdField, username, "Email Field");
			waitTime(2000);
			hideKeyboard();

			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
			waitTime(2000);
			hideKeyboard();

			type(IOSHipiNeoHomePage.objiosPasswordField, Password, "Password field");
			waitTime(2000);
			hideKeyboard();
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");

			waitTime(10000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSavePasswordPopUp, "Save password pop up")) {
				click(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now CTA");
				waitTime(2000);
			}
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 100, "Home Button");
			// click on feed button
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}

	}

	public void verifyPrivateVideo(String tab, String validationTxt) throws Exception {
		click(IOSHipiCreateVideoPage.objiosSeletytabInProfilePage(tab), validationTxt);

		if (verifyElementExist(IOSHipiCreateVideoPage.objiosPrivateVideos(1), "Private video")) {
			logger.info(validationTxt + " is displayed");
			extent.extentLogger("checkElementPresent", validationTxt + " is displayed");

		} else {
			logger.info(validationTxt + " is not displayed");
			extent.extentLogger("checkElementPresent", validationTxt + " is not displayed");
		}

	}

	public void Creator_T665_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T665_Logged in user -Check  if the posted video is visible to creator only , but not to others");
			logger.info(
					"T665_Logged in user -Check  if the posted video is visible to creator only , but not to others");

			LoginToAccount("hipipost@mailnesia.com", "123456");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSeletytabInProfilePage("lock"), "Private video");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosPrivateVideos(1), "Private video")) {
				screencapture();
				logger.info("Private video" + " is displayed");
				extent.extentLoggerPass("checkElementPresent", "Private video" + " is displayed");

			} else {
				logger.info("Private video" + " is not displayed");
				extent.extentLoggerFail("checkElementPresent", "Private video" + " is not displayed");
				createVideoType("No", "No", "No", "No", "Private", "Private3", "yes");

			}

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(2500);
			LoginToAccount("hipiview@mailnesia.com", "123456");
			waitTime(2500);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile icon");
			waitTime(2500);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Follower"), "Follower")) {
				click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Follower"), "Follower");
			} else {
				click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers");
			}

			waitTime(2500);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Hipi Post"), "Hipi Post");
			waitTime(1500);
			PartialSwipeiOS("DOWN", 2);
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPrivateProfile, "Private profile")
					|| (!verifyElementExist(IOSHipiCreateVideoPage.objiosPrivateVideos(1), "Private videos"))) {

				logger.info(" The private posted video is visible to creator , but not to others");
				extent.extentLoggerPass("", " The private posted video is visible to creator , but not to others");
			} else {
				logger.info(" The private posted video is visible to all");
				extent.extentLoggerFail("", " The private posted video is visible to all");
			}

			BackFromProfileDetailsPage(2);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(2000);
			Login();

		}

	}

	
	// n============gen=== 04-01-2022====================

	/**
	 * Navigate to setting and Privacy page from Home page
	 * 
	 * @throws Exception
	 */
	public void navigateToSettingsAndPrivacyPage() throws Exception {
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar, "Setting And Privacy Screen");
	}

	/**
	 * Navigate Back to Home Page from setting and Privacy page
	 * 
	 * @throws Exception
	 */
	public void navigateBackToHomeScreenFromSettingAndPrivacyPage() throws Exception {
		verifyElementExist(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar, "Setting And Privacy Screen");
		click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}

	// =======================Setting And privacy
	// P2============n============04-01=2022========================

	public void SettingAndPrivacy_T705_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T705_To check the UI of  Setting and Privacy screen");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Manage account"), "ACCOUNT");
			waitTime(2000);
//			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
//					"Change Password");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Privacy"), "Privacy");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Share profile"), "Share profile");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("CONTENT AND ACTIVITY"),
					"CONTENT AND ACTIVITY");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("App language"), "App language");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("SUPPORT"), "SUPPORT");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Help Center"), "Help Center");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("ABOUT"), "ABOUT");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Community Guidelines"),
					"Community Guidelines");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Terms of Use"), "Terms of Use");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Community Centre"),
					"Community Centre");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("'Log out"), "'Log out");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();

		}
	}

	// ======================05-1-2022=========================================================================

	public void SettingAndPrivacy_T752_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T752_Check if app language is set to English ");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("App language"),
					"App language");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosEngLangInAppLanguage, "English Language")) {
				logger.info("Tapping on App Language option user lands to English set as a single default option ");
				extent.extentLoggerPass("Setting And Privacy",
						"Tapping on App Language option user lands to English set as a single default option ");
			} else {
				logger.info(
						"Tapping on App Language option user is not navigated to English set as a single default option ");
				extent.extentLoggerFail("Setting And Privacy",
						"Tapping on App Language option user is not navigated to English set as a single default option ");

			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}
	}

	public void SettingAndPrivacy_T755_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T755_Check if the available hyperlinks are landing user to relevant information");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Help Center"),
					"Help Center");
			waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosGetToKnowHipiLinkInHelpCenterPage,
					20,"Get To Know Hipi Link");
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosGetToKnowHipiLinkInHelpCenterPage,
					"Get To Know Hipi Link");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosGetToKnowPage, "Get To Know Hipi page")) {
				logger.info("User is redirected to relevant information based on the hyperlink on what he has tapped");
				extent.extentLoggerPass("Setting And Privacy",
						"User is redirected to relevant information based on the hyperlink on what he has tapped");
			} else {
				logger.info(
						"User is not redirected to relevant information based on the hyperlink on what he has tapped");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not redirected to relevant information based on the hyperlink on what he has tapped");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}

	}

	public void SettingAndPrivacy_T762_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T762_Check if tapping on Terms Of USe is taking user to specific screen with relevant information");
			navigateToSettingsAndPrivacyPage();
			ScrollToRailiOS_Up(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Terms of Use"),
					"Terms of Use");
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Terms of Use"),
					"Terms of Use");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosTermsOfUsePage, "Terms of Use")) {
				logger.info(
						"when user tap on Terms of use User is nevigated to Terms of user page with community guidelines details");
				extent.extentLoggerPass("Setting And Privacy",
						"when user tap on Terms of use User is nevigated to Terms of user page with community guidelines details");
			} else {
				logger.info(
						"when user tap on Terms of use User is not nevigated to Terms of user page with community guidelines details");
				extent.extentLoggerFail("Setting And Privacy",
						"when user tap on Terms of use User is not nevigated to Terms of user page with community guidelines details");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}

	}

	public void SettingAndPrivacy_T765_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T765_Check if back button available on top left corner is functional for user");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Terms of Use"),
					"Terms of Use");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar,
					"Setting And Privacy Screen")) {
				logger.info(
						"User is  able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerPass("Setting And Privacy",
						"User is  able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
			} else {
				logger.info(
						"User is not able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
			}

			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}

	}

	public void SettingAndPrivacy_T766_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T766_Check if tapping on Privacy Policy is taking user to specific screen with relevant information");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Privacy"), "Privacy");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosPrivacyPage, "Privacy page")) {
				logger.info("when user tap on Privacy User is nevigated to Privacy page");
				extent.extentLoggerPass("Setting And Privacy",
						"when user tap on Privacy User is nevigated to Privacy page");
			} else {
				logger.info("when user tap on Privacy User is  not nevigated to Privacy page");
				extent.extentLoggerFail("Setting And Privacy",
						"when user tap on Privacy User is  not nevigated to Privacy page");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}

	}

	public void SettingAndPrivacy_T769_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T769_Check if back button available on top left corner is functional for user");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Privacy"), "Privacy");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar,
					"Setting And Privacy Screen")) {
				logger.info(
						"User is  able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerPass("Setting And Privacy",
						"User is  able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
			} else {
				logger.info(
						"User is not able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not able to move  back to Setting ad Privacy screen after tapping on back button icon on top left corner of the screen.");
			}

			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}

	}

	public void SettingAndPrivacy_T720_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T720_Check  for the CTA nature of change your password ");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password page")) {
				logger.info("User is landing on change password screen");
				extent.extentLoggerPass("Setting And Privacy", "User is landing on change password screen");
			} else {
				logger.info("User is not landing on change password screen");
				extent.extentLoggerFail("Setting And Privacy", "User is not landing on change password screen");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}

	}

	/**
	 * ReSeting the login password to 123456
	 * 
	 * @param newpassword
	 * @throws Exception
	 */

	public void resetPassword(String newpassword) throws Exception {

		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
		waitTime(5000);
//		verifyElementPresent(IOSHipiNeoSettingsPage.objiosSettingAndPrivacyTabBar, "Setting And Privacy Screen");
//		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
				"Change Password");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
				"old password text field");
		waitTime(2000);
		type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, newpassword, "old password");
		System.out.println(newpassword);
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
				"New password text field");
		waitTime(3000);
		type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "123456", "New password");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
				"Submit Button");
		waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
				"Password Was Changed Successfully");
		navigateBackToHomeScreenFromSettingAndPrivacyPage();
	}

	public void SettingAndPrivacy_T722_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T722_Check if User is able to create a password with less than 8 chacarter");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "654321";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info(
						"User is  be able to  change password successfully as number of chacraters are less than 8");
				extent.extentLoggerFail("Setting And Privacy",
						"User is  be able to  change password successfully as number of chacraters are less than 8");
			} else {
				logger.info(
						"User is not be able to  change password successfully as number of chacraters are less than 8");
				extent.extentLoggerPass("Setting And Privacy",
						"User is not be able to  change password successfully as number of chacraters are less than 8");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T723_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T723_Check if User is able to create a password with more than 20 characters");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "123456789009876543211";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info("User is able to  change password successfully as number of chacraters are more than 20");
				extent.extentLoggerFail("Setting And Privacy",
						"User is able to  change password successfully as number of chacraters are more than 20");
			} else {
				logger.info(
						"User is not  able to  change password successfully as number of chacraters are more than 20");
				extent.extentLoggerPass("Setting And Privacy",
						"User is not  able to  change password successfully as number of chacraters are more than 20");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T724_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T724_Check if user is able to create a password using only one category :: Letters");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "aaaaaa";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info("User is able to  create a new password using a single category : Letters");
				extent.extentLoggerFail("Setting And Privacy",
						"User is able to  create a new password using a single category : Letters");
			} else {
				logger.info("User is not able to  create a new password using a single category : Letters");
				extent.extentLoggerPass("Setting And Privacy",
						"User is not able to  create a new password using a single category : Letters");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T725_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T725_Check if user is able to create a password using only one category :: numbers");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "111111";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info("User is able to  create a new password using a single category : Numbers");
				extent.extentLoggerFail("Setting And Privacy",
						"User is able to  create a new password using a single category : Numbers");
			} else {
				logger.info("User is not able to  create a new password using a single category : Numbers");
				extent.extentLoggerPass("Setting And Privacy",
						"User is not able to  create a new password using a single category : Numbers");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T726_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T726_Check if user is able to create a password using only one category :: Special Characters");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "@@@@@@";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info("User is able to  create a new password using a single category :Special Characters");
				extent.extentLoggerFail("Setting And Privacy",
						"User is able to  create a new password using a single category :Special Characters");
			} else {
				logger.info("User is not able to  create a new password using a single category :Special Characters");
				extent.extentLoggerPass("Setting And Privacy",
						"User is not able to  create a new password using a single category :Special Characters");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T727_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T727_Check if user is able to create a password using combination of all 3 categories :: letters. numbers and special characters");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "abc@123";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info(
						"User is able to  create a new password using combination of all 3 categories : letters. numbers and special characters");
				extent.extentLoggerPass("Setting And Privacy",
						"User is able to  create a new password using combination of all 3 categories : letters. numbers and special characters");
			} else {
				logger.info(
						"User is not able to  create a new password using combination of all 3 categories : letters. numbers and special characters");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not able to  create a new password using combination of all 3 categories : letters. numbers and special characters");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T728_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T728_Check if user is able to create a password using combination of only 2 categories :: letters and numbers");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "abcd1234";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info(
						"User is able to  create a new password using combination of 2 categories : letters and numbers");
				extent.extentLoggerPass("Setting And Privacy",
						"User is able to  create a new password using combination of 2 categories : letters and numbers");
			} else {
				logger.info(
						"User is not able to  create a new password using combination of 2 categories : letters and numbers");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not able to  create a new password using combination of 2 categories : letters and numbers");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T729_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T729_Check if user is able to create a password using combination of only 2 categories :: letters and special characters");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "abcd@@@@";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info(
						"User is able to  create a new password using combination of 2 categories : letters and special characters");
				extent.extentLoggerPass("Setting And Privacy",
						"User is able to  create a new password using combination of 2 categories : letters and special characters");
			} else {
				logger.info(
						"User is not able to  create a new password using combination of 2 categories : letters and special characters");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not able to  create a new password using combination of 2 categories : letters and special characters");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T730_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T730_Check if user is able to create a password using combination of only 2 categories :: numbers and special characters");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "123456", "old password");
			waitTime(2000);
			String old = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			System.out.println(old);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(3000);
			String newpassword = "1111@@@@";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, newpassword, "New password");
			waitTime(3000);
			System.out.println(newpassword);
			int count = newpassword.length();
			System.out.println(count);
			extent.extentLogger("", "The count of entered password character is " + count);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage,
					"Submit Button");
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 10,
					"Password Was Changed Successfully")) {
				logger.info(
						"User is able to  create a new password using combination of 2 categories : numbers and special characters");
				extent.extentLoggerPass("Setting And Privacy",
						"User is able to  create a new password using combination of 2 categories : numbers and special characters");
			} else {
				logger.info(
						"User is not able to  create a new password using combination of 2 categories : numbers and special characters");
				extent.extentLoggerFail("Setting And Privacy",
						"User is not able to  create a new password using combination of 2 categories : numbers and special characters");
			}
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
			waitTime(4000);
			resetPassword(newpassword);

		}
	}

	public void SettingAndPrivacy_T721_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T721_Check for the UI of  change password  screen");
			navigateToSettingsAndPrivacyPage();
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Change Password"),
					"Change Password");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change password text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage,
					"old password text field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage,
					"New password text field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosSubmitButtonDisabledInChangePasswordPage,
					"submit Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosPasswordLengthInChangePasswordPage,
					"Password length text");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}
	}

	/**
	 * Clicking on links present in help center page and Navigating to respected
	 * page and then navigating back to help center page
	 * 
	 * @param headerName ,index
	 * @throws Exception
	 */

	public void HelpCenterUIVerification(String headerName, int index) throws Exception {
		String link = null;
		String Title = null;
		ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiosFollowingHeadersFirstLinkInHelpcenterPage(headerName, index),
				"Link in Help center page");
		waitTime(2500);
		if (verifyElementExist(
				IOSHipiNeoSettingsPage.objiosFollowingHeadersFirstLinkInHelpcenterPage(headerName, index),
				"Link in Help center page")) {
			waitTime(2000);
			link = getText(IOSHipiNeoSettingsPage.objiosFollowingHeadersFirstLinkInHelpcenterPage(headerName, index));
			logger.info("Link present in Help Center page: " + link);
			extent.extentLogger("", "Link present in Help Center page: " + link);

			click(IOSHipiNeoSettingsPage.objiosFollowingHeadersFirstLinkInHelpcenterPage(headerName, index),
					"Link in Help center page");

		}
		waitTime(4000);

		if (verifyElementExist(IOSHipiNeoSettingsPage.objiosTitleOfHeaderLink, "Title of Link Page")) {
			Title = getText(IOSHipiNeoSettingsPage.objiosTitleOfHeaderLink);
			System.out.println(Title);
			logger.info("Title of Link Page : " + Title);
			extent.extentLogger("", "Title of Link Page : " + Title);

		}

		if (Title.contains(link)) {
			logger.info("User is navigated to respective link page from help center page");
			extent.extentLoggerPass("", "User is navigated to respective link page from help center page");

		} else {
			logger.info("User is not  navigated to respective link page from help center page");
			extent.extentLoggerFail("", "User is not  navigated to respective link page from help center page");
		}

		click(IOSHipiNeoSettingsPage.objiosBackToHomeButtonInLinkPage, "Back to Home Button");

	}

	public void SettingAndPrivacy_T753_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T753_Check if for the UI of Help cnetre screen");
			navigateToSettingsAndPrivacyPage();
			verifyElementPresentAndClick(IOSHipiNeoSettingsPage.SettingAndPrivacyPageTabs("Help Center"),
					"Help Center");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosHipiLogo, "Hipi Logo");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosHelpCenterTextInHelpCenterpage, "Help Center Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiOSsearchTextFieldInHelpCenterPage,
					"Search text field and search articles as a placeholder");
			waitTime(2000);
			HelpCenterUIVerification("Getting Started", 1);
			waitTime(4000);
			HelpCenterUIVerification("My Account", 1);
			waitTime(3000);
			HelpCenterUIVerification("Step It Up ", 1);
			waitTime(3000);
			HelpCenterUIVerification("Need Help ", 1);
			waitTime(3000);
			HelpCenterUIVerification("Quick Links ", 1);
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiosConnectWithUsTextInHelpCenterPage,
					"Connect  with Us Text");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosConnectWithUsTextInHelpCenterPage,
					"Connect  with Us Text");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objios2020TextInHelpCenterPage,
					"@2020 ZEE Digital All rights reserved text");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			navigateBackToHomeScreenFromSettingAndPrivacyPage();
		}
	}

//-------------kiran---new---p2----27-jan----feed--------------------------------------------------

	// 24/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T099(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T099_Logged in User - Check is user is able to perform Not Interested action by tapping on it");
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Not Interested"), "Not Interested Tab");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosToastMessageByClickNotInterestedInShareScreen, 10,
					"Toast Message")) {
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("", "Toast message is displayed");
			} else {
				logger.info("Toast message is not displayed");
				extent.extentLoggerFail("", "Toast message is not displayed");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	// 24/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T438(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T438_Logged in User - Check is user is able to perform Not Interested action by tapping on it");
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Not Interested"), "Not Interested Tab");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosToastMessageByClickNotInterestedInShareScreen,
					"Toast Message")) {
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("", "Toast message is displayed");
			} else {
				logger.info("Toast message is not displayed");
				extent.extentLoggerFail("", "Toast message is not displayed");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}
	}

	// 24/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T262_T275(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T262_Guest User -Verify for user is able to click LESS icon on IN THIS VIDEO tab on shop detail page.");
		} else {
			extent.HeaderChildNode(
					"T275_Logged In User- Verify for user is able to click LESS icon on IN THIS VIDEO tab on shop detail page.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(5000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expend Button")) {
			logger.info(" User able to click on Less icon");
			extent.extentLoggerPass("", " User able to click on Less icon");
		} else {
			logger.info("User not able to click on Less icon");
			extent.extentLoggerFail("", " User not able to click on Less icon");
		}
		CloseTheShopBar();
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(3000);
	}

	// 24/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T263_T277(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T263_Guest User should be able to click Expand icon");
		} else {
			extent.HeaderChildNode("T277_User should be able to click Expand icon");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expend Button");
		waitTime(5000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button")) {
			logger.info("User able to click on Expand icon");
			extent.extentLoggerPass("", " User able to click on Expand icon");
		} else {
			logger.info(" User not able to click on Expand icon");
			extent.extentLoggerFail("", " User not able to click on Expand icon");
		}
		CloseTheShopBar();
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(3000);
	}

	// 27/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T397(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T397_Logged in User - Check if For You and Following tabs are displayed at top of the screen in Following screen");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}
	}
	// 27/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T398(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T398_Logged in User - Check the options are present in bottom in Following screen");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Icon");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}

	// 27/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T394(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T394_Guest User - Check if user is able to tap on Following tab in Feed screen and login pop-up is displayed");
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSHipiLoginBtnInFollwingSection, "Login Button")) {
				logger.info("Login pop-up is displayed");
				extent.extentLoggerPass("", "Login pop-up is displayed");
			} else {
				logger.info("Login pop-up is not displayed");
				extent.extentLoggerFail("", "Login pop-up is not displayed");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}
	}

	// 27/12/21// HOME
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T439(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T439_Logged in User - Check if user is able to view Network Error when he taps on Not interested in Share to screen without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(12000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Not Interested"), "Not Interested Tab");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info(
						"User able to get network error message when he taps on Not interested in share to screen without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Not interested in share to screen without internet");
			} else {
				logger.info(
						"User not able to get network error message when he taps on Not interested in share to screen without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Not interested in share to screen without internet");
			}
			wifi("on");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}
	// 27/12/21//k===============================================Feed=P2==================================================

	public void FeedScreen_T453(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T453_Logged in User - Check if user is able to view Network Error when he taps on Report in share to screen without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(11000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Report"), "Report Tab");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info(
						"User able to get network error message when he taps on Report in share to screen without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Report in share to screen without internet");
			} else {
				logger.info(
						"User not able to get network error message when he taps on Report in share to screen without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Report in share to screen without internet");
			}
			wifi("on");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}
	// 27/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T455(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T455_Logged in User - Check if user is able to view Network Error when he taps on Save Video in share to screen without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(11000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Save video"), " Save Video");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info("User able to get network error message when he taps on Save Video in share to screen without internet");
				extent.extentLoggerPass("","User able to get network error message when he taps on Save Video in share to screen without internet");
			} else if (verifyElementExist(IOSHipiNeoHomePage.objiosNotificationAllowAccesssToPhotosPopup, "Save access")) {
				waitTime(1000);
				click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpAllowButton, "Allow Access to All Photos");
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message");
				logger.info("User able to get network error message when he taps on Save Video in share to screen without internet");
				extent.extentLoggerPass("","User able to get network error message when he taps on Save Video in share to screen without internet");
			}
			else {
				logger.info("User not able to get network error message when he taps on Save Video in share to screen without internet");
				extent.extentLoggerFail("","User not able to get network error message when he taps on Save Video in share to screen without internet");
			}
			wifi("on");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}
	// 28/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T457(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T457_Logged in User - Check if user is able to view Network Error when he taps on Add to Favorites in share to screen without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Add to Favourites"), " Add to Favourites");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 15, "Network Error Message")) {
				logger.info(
						"User able to get network error message when he taps on Add to Favorites in share to screen without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Add to Favorites in share to screen without internet");
			} else {
				logger.info(
						"User not able to get network error message when he taps on Add to Favorites in share to screen without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Add to Favorites in share to screen without internet");
			}
			wifi("on");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}
	}

	// 28/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T451(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T451_Logged in User - Check if user is able to view Network Error when he taps on Share Button without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 20, "Network Error Message")) {
				logger.info("User able to get network error message when he taps on Share Button without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Share Button without internet");
			} else {
				logger.info("User not able to get network error message when he taps on Share Button without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Share Button without internet");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton,"close");
			waitTime(3000);
			wifi("on");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}
	}
	// 27/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T436(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T436_Logged in User - Check if user is able to view Network Error when he taps on Like icon without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info("User able to get network error message when he taps on Like Button without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Like Button without internet");
			} else {
				logger.info("User not able to get network error message when he taps on Like Button without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Like Button without internet");
			}
			wifi("on");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}

	// 28/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T408(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T408_Logged in User - Check if user is able to pause the played by default video by tapping on it");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosPauseButtonInVideos, "Pause Button")) {
				logger.info("Default played video able to paused with a paused icon displayed over the video.");
				extent.extentLoggerPass("",
						"Default played video able to paused with a paused icon displayed over the video.");
			} else {
				logger.info("Default played video not able to paused with a paused icon displayed over the video.");
				extent.extentLoggerFail("",
						"Default played video not able to paused with a paused icon displayed over the video.");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}

	// 28/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T454(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T454_Logged in User - Check if user is able to view Network Error when he taps on Save Video in share to screen without internet");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Save video"), " Save Video");
			waitTime(3000);
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objSavedVideo, 20, "Toast message ")) {
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("", "Toast message is displayed");
			} else if(verifyElementExist(IOSHipiNeoHomePage.objiosNotificationAllowAccesssToPhotosPopup, "Save access")) {
				waitTime(1000);
				click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpAllowButton, "Allow Access to All Photos");
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objSavedVideo, 20, "Toast message ");
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("", "Toast message is displayed");
			}
			else {
				logger.info("Toast message is not displayed");
				extent.extentLoggerFail("", "Toast message is not displayed");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(3000);
		}

	}

	// 28/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T116(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T116_Logged in User - Check is user is able to perform Save Video action by tapping on it");
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Save video"), " Save Video");
			for (int i = 1; i <= 10; i++) {
				if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objSavedVideo, 20, "Toast message ")) {
					logger.info("Toast message is displayed");
					extent.extentLoggerPass("", "Toast message is displayed");
					break;
				} else {
					PartialSwipe("UP", 1);
					waitTime(1000);
				}

			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	// 28/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T117(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T117_Logged in User - Check if user is able to view Network Error when he taps on Save video in Share to screen without internet");
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Save video"), " Save Video");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info("User able to get network error message when he taps on Like Button without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Like Button without internet");
			} else {
				logger.info("User not able to get network error message when he taps on Like Button without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Like Button without internet");
			}
			wifi("on");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}

	}

	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T115(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T115_Logged in User - Check if user is able to view Network Error when he taps on Report in share to screen without internet");
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Report"), "Report");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info(
						"User able to get network error message when he taps on Report in share to screen without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Report in share to screen without internet");
			} else {
				logger.info(
						"User not able to get network error message when he taps on Report in share to screen without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Report in share to screen without internet");
			}
			wifi("on");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}
	}
	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T119(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T119_Logged in User - Check if user is able to view Network Error when he taps on Add to Favorites in share to screen without internet");
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Add to Favourites"), "Add to favourites");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error Message")) {
				logger.info(
						"User able to get network error message when he taps on Report in share to screen without internet");
				extent.extentLoggerPass("",
						"User able to get network error message when he taps on Report in share to screen without internet");
			} else {
				logger.info(
						"User not able to get network error message when he taps on Report in share to screen without internet");
				extent.extentLoggerFail("",
						"User not able to get network error message when he taps on Report in share to screen without internet");
			}
			wifi("on");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}
	}

	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T118(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T118_Logged in User - Check is user is able to perform Add to Favorites action by tapping on it");
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(3000);
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.ShareScreenAllTabs("Add to Favourites"), "Add to favourites");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosAddedToFavorites, 10, "Added To Favorites")) {
				logger.info("Toast message is displayed");
				extent.extentLoggerPass("", "Toast message is displayed");
			} else {
				logger.info("Toast message is not displayed");
				extent.extentLoggerFail("", "Toast message is not displayed");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
		}
	}
	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T221(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T221_Logged In user- Verify for SAVE LOOK button click");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosProductsYouCanBuyTextInCarousalSheet,
					"Products You Can Buy Text In Carousal Sheet")
					&& verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1),
							"Product Image")) {
				logger.info(
						"On tap SAVE LOOK button the user able get bottom sheet corousel along with products on the screen");
				extent.extentLoggerPass("",
						"On tap SAVE LOOK button the user able get bottom sheet corousel along with products on the screen");
			} else {
				logger.info(
						"On tap SAVE LOOK button the user not able get bottom sheet corousel along with products on the screen");
				extent.extentLoggerFail("",
						"On tap SAVE LOOK button the user not able get bottom sheet corousel along with products on the screen");
			}
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Cross Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}
	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T222(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T222_Logged In User -Verify for SAVE LOOK functionality");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments tab");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
					"Delete Button")) {
				logger.info("user can save the moments to the shop page");
				extent.extentLoggerPass("", "user can save the moments to the shop page");
			} else {
				logger.info("user can not save the moments to the shop page");
				extent.extentLoggerFail("", "user can not save the moments to the shop page");
			}
			CloseTheShopBar();
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Cross Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}
	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T236(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T236_Logged In User- Verify the SAVED button on the video");
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Cross Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, "Saved Button")) {
				logger.info(
						" Upon closing the corousel sheet The Discover the Look button turns to SAVED button on the video screen");
				extent.extentLoggerPass("",
						" Upon closing the corousel sheet The Discover the Look button turns to SAVED button on the video screen");
			} else {
				logger.info(
						" Upon closing the corousel sheet The Discover the Look button not turns to SAVED button on the video screen");
				extent.extentLoggerFail("",
						" Upon closing the corousel sheet The Discover the Look button not turns to SAVED button on the video screen");
			}
		}
	}

	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T308(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T308_Logged In User -Verify for user should be landed on IN THIS VIDEO tab of the shop page when clicks the saved video objects/products in a small carousel");
			deleteProductsInSavedMoments();

			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(0), "Product Image");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Delete Button")) {
				logger.info("User not able to land on IN THIS VIDEO tab with all the shop page details.");
				extent.extentLoggerFail("",
						"User not able to land on IN THIS VIDEO tab with all the shop page details.");
			} else {
				logger.info("User able to land on IN THIS VIDEO tab with all the shop page details.");
				extent.extentLoggerPass("", "User able to land on IN THIS VIDEO tab with all the shop page details.");
			}
			CloseTheShopBar();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 29/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T336(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T336_Guest User- Verify for EXPAND button on the product panel of Shop Page");
			deleteProductsInSavedMoments();

			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments tab");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expend Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments, "Outfit Tab")) {
				logger.info("User able to expand the product details page from the product panel on Shop");
				extent.extentLoggerPass("",
						"User able to expand the product details page from the product panel on Shop");
			} else {
				logger.info("User not able to expand the product details page from the product panel on Shop");
				extent.extentLoggerFail("",
						"User not able to expand the product details page from the product panel on Shop");
			}
			CloseTheShopBar();
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Cross Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}
	// 30/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T291(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T291_Guest User -Validate every Arrow present on the product site should be clickable");
			System.out.println("T291_Guest User -Validate every Arrow present on the product site should be clickable");
			
			deleteProductsInSavedMoments();
			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments tab");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expend Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo,"Cross Icon In mini Player");
			waitTime(5000);
			PartialCommentsSwipeiOS("Up", 1);
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosRightArrowInShopePage, "Right Arrow Icon");
			waitTime(3000);
			if (waitForElementDisplayediOS(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, 30, "URL")) {
				logger.info("Arrow buttons able to click and guest user able to navigate to product site page.");
				extent.extentLoggerPass("",
						"Arrow buttons able to click and guest user able to navigate to product site page.");

			} else {
				logger.info(
						"Arrow buttons not able to click and guest user not able to navigate to product site page.");
				extent.extentLoggerFail("",
						"Arrow buttons not able to click and guest user not able to navigate to product site page.");
			}
			click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done Button");
			waitTime(3000);
			CloseTheShopBar();
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Cross Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 30/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T239(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T239_Logged In User - Verify for product data inside Saved Moment tab");
			deleteProductsInSavedMoments();

			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product Image");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments tab");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
					"Delete Button")) {
				logger.info("user saved product is displayed until user delete the product from the saved moments tab");
				extent.extentLoggerPass("",
						"user saved product is displayed until user delete the product from the saved moments tab");
			} else {
				logger.info(
						"user saved product is not displayed until user delete the product from the saved moments tab");
				extent.extentLoggerFail("",
						"user saved product is not displayed until user delete the product from the saved moments tab");
			}
			CloseTheShopBar();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}
	// 30/12/21//
	// k===============================================Feed=P2==================================================

	public void Feed_T1648_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1648_Guest User- Verify Network Error tapping upon SHOP CTA");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");

			waitTime(2000);
			wifi("off");
			waitTime(14000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 10, "Network Error")) {
				logger.info("User is getting network error when he tap on SHOP CTA without Internet ");
				extent.extentLoggerPass("", "User is getting network error when he tap on SHOP CTA without Internet ");
			} else {
				logger.info("User is not getting network error when he tap on SHOP CTA without Internet ");
				extent.extentLoggerFail("",
						"User is not getting network error when he tap on SHOP CTA without Internet ");
			}
			wifi("on");
			waitTime(5000);
		}
	}

	// Method===========================================================================================================================

	public void follow() throws Exception {
		click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you tab selected");
		waitTime(3000);
		for (int i = 1; i <= 2; i++) {
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Button")) {
				click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Button");
				waitTime(2000);
				PartialSwipe("up", 1);
			} else {
				System.out.println("Already following this user");
				PartialSwipe("up", 1);

			}
		}
	}

	// 30/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T219(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T219_Logged In User- Verify for save look button functionality once after shop page is collapsed/closed");
			deleteProductsInSavedMoments();

			waitTime(5000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "close button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiSavedButtonInHomePage, userType)) {
				logger.info("Discover the Look button  turned into saved");
				extent.extentLoggerPass("", "Discover the Look button  turned into saved");

			} else {
				logger.info("Discover the Look button not turned into saved");
				extent.extentLoggerFail("", "Discover the Look button not turned into saved");
			}
		}
	}
	// 30/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T226_T191(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T226_Logged In user-Verify for Product images on the bottom sheet corousel");
		} else {
			extent.HeaderChildNode("T191_Guest user-Verify for Product images on the bottom sheet corousel");
		}
		deleteProductsInSavedMoments();

		waitTime(5000);
				ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look Button");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Images")) {
			List<WebElement> totalimg = getDriver()
					.findElements(IOSHipiNeoHomePage.objiOSHipiTotalShoppableImagesfeedSection);
			int list = totalimg.size();
			int product = 4;
			if (list < product) {
				logger.info("Max 3 video product is displayed on carousel banner" + list);
				extent.extentLoggerPass("", "Max 3 video product is displayed on carousel banner");
			} else {
				logger.info("More then 3 video product is displayed on carousel banner");
				extent.extentLoggerFail("", "More then 3 video product is displayed on carousel banner");
			}
		} else {
			System.out.println("no images");
		}
		click(IOSHiPiNeoShopPage.objiosCloseButtonInCarouselPage, "Close Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	// 30/12/21//
	// k===============================================Feed=P2==================================================

	public void FeedScreen_T205(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T205_Logged In User-Verify the SHOP button position");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(5000);
			WebElement discover = findElement(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar);
			int discoverX = discover.getLocation().getX();
			int discoverY = discover.getLocation().getY();
			WebElement shop = findElement(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar);
			int shopX = shop.getLocation().getX();
			int shopY = shop.getLocation().getY();
			if ((discoverX < shopX) && (discoverY < shopY)) {
				logger.info("The SHOP button is present next to the discover tab");
				extent.extentLoggerPass("", "The SHOP button is present next to the discover tab");
			} else {
				logger.info("The SHOP button is not present next to the discover tab");
				extent.extentLoggerFail("", "The SHOP button is not present next to the discover tab");
			}

		}
	}

//===================================================================================================	

//=======discover---------p2---kiran-------------------------------------------------------------

	// 04/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1307(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1307_Guest User- Verify for Search field click");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button")) {
				logger.info("Guest User able to tap on search field");
				extent.extentLoggerPass("", "Guest User able to tap on search field");
			} else {
				logger.info("Guest User not able to tap on search field");
				extent.extentLoggerFail("", "Guest User not able to tap on search field");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 05/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1301_T1302_T1311_T1312(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1301_T1302_Guest User: Verify for discover option design on application");
		} else {
			extent.HeaderChildNode("T1311_T1312_Logged In User: Verify for discover option design on application");
		}
		verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Search Icon");
		waitTime(2000);
		WebElement HomeButton = findElement(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar);
		int HomeButtonX = HomeButton.getLocation().getX();
		System.out.println(HomeButtonX);
		WebElement Discover = findElement(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar);
		int DiscoverX = Discover.getLocation().getX();
		System.out.println(DiscoverX);

		if (HomeButtonX < DiscoverX) {
			logger.info("The discover option is beside the Home tab and right side on bottom sheet menu");
			extent.extentLoggerPass("",
					"The discover option is beside the Home tab and right side on bottom sheet menu");
		} else {
			logger.info("The discover option is not beside the Home tab and not right side on bottom sheet menu");
			extent.extentLoggerFail("",
					"The discover option is not beside the Home tab and not right side on bottom sheet menu");
		}
	}

	// 05/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1322(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1322_Guest User: Verify for Search parent page (recent search page)");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Field")) {
				logger.info("device keyboard is displayed");
				extent.extentLoggerPass("", "device keyboard is displayed");
			} else {
				logger.info("device keyboard is not displayed");
				extent.extentLoggerFail("", "device keyboard is not displayed");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 05/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1324(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1324_Guest User- Verify for Search parent page (recent search page) back button and its click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			Dimension size = getDriver().manage().window().getSize();
			double sizeH = size.height * 0.20;
			System.out.println(sizeH);
			double sizeW = size.width * 0.20;
			System.out.println(sizeW);
			WebElement BackButton = findElement(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage);
			int BackButtonX = BackButton.getLocation().getX();
			System.out.println(BackButtonX);
			int BackButtonY = BackButton.getLocation().getY();
			System.out.println(BackButtonY);
			if ((BackButtonX < sizeW) && (BackButtonY < sizeH)) {
				logger.info("Back Arrow Button displayed at top left side corner");
				extent.extentLoggerPass("", "Back Arrow Button displayed at top left side corner");
			} else {
				logger.info("Back Arrow Button is not displayed at top left side corner");
				extent.extentLoggerFail("", "Back Arrow Button is not displayed at top left side corner");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchIconInDiscoverPage, "Search Icon")) {
				logger.info("on tapping on Back Arrow Button user navigate to Discover page");
				extent.extentLoggerPass("", "on tapping on Back Arrow Button user navigate to Discover page");
			} else {
				logger.info("on tapping on Back Arrow Button user not able to navigate Discover page");
				extent.extentLoggerFail("", "on tapping on Back Arrow Button user not able to navigate Discover page");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 05/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1326_T1333(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1326_Guest User-Verify for Search parent page (recent search page)search field cancel button and its click");
			System.out.println(
					"T1326_Guest User-Verify for Search parent page (recent search page)search field cancel button and its click");
		} else {
			extent.HeaderChildNode(
					"T1333_Logged In user-Verify for Search parent page (recent search page)search field cancel button and its click");
			System.out.println(
					"T1333_Logged In user-Verify for Search parent page (recent search page)search field cancel button and its click");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(5000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi", "Himanshi");
		waitTime(2000);
		String ExpectedText = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		waitTime(2000);
		extent.extentLogger("", "Expected Text " + ExpectedText);
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objCrossIconInSearchField, "Cross Icon");
		waitTime(2000);
		String ActualText = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		waitTime(2000);
		extent.extentLogger("", "Actual Text " + ActualText);
		waitTime(2000);
		if (ExpectedText.equalsIgnoreCase(ActualText)) {
			logger.info("User not able to click on cancel button on the search result while result is displays");
			extent.extentLoggerFail("",
					"User not able to click on cancel button on the search result while result is displays");
		} else {
			logger.info("User able to click on cancel button on the search result while result is displays");
			extent.extentLoggerPass("",
					"User able to click on cancel button on the search result while result is displays");
		}
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}
	// 05/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1328_T1335(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1328_Guest user-Verify for Search parent page (recent search page)Verify if user able to search anything and displays the results");
			System.out.println(
					"T1328_Guest user-Verify for Search parent page (recent search page)Verify if user able to search anything and displays the results");
		} else {
			extent.HeaderChildNode(
					"T1335_Logged In user-Verify for Search parent page (recent search page)Verify if user able to search anything and displays the results");
			System.out.println(
					"T1335_Logged In user-Verify for Search parent page (recent search page)Verify if user able to search anything and displays the results");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(2000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi", "Himanshi");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosAutoSuggestionsInSearchParentPage, "Auto Suggestions")) {
			logger.info("user able to search anything and app able to display the result");
			extent.extentLoggerPass("", "user able to search anything and app able to display the result");
		} else {
			logger.info("user not able to search anything and app not able to display the result");
			extent.extentLoggerFail("", " user not able to search anything and app not able to display the result");
		}
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1329_T1336(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1329_Guest user-Verify for Search parent page (recent search page) keyboard search button click");
			System.out.println(
					"T1329_Guest user-Verify for Search parent page (recent search page) keyboard search button click");
		} else {
			extent.HeaderChildNode(
					"T1336_Logged In user-Verify for Search parent page (recent search page) keyboard search button click");
			System.out.println(
					"T1336_Logged In user-Verify for Search parent page (recent search page) keyboard search button click");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(2000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi", "Himanshi");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("USERS"), "User")) {
			logger.info("On click search button from the device keyoard the search result page is displayed ");
			extent.extentLoggerPass("",
					"On click search button from the device keyoard the search result page is displayed ");
		} else {
			logger.info("On click search button from the device keyoard the search result page is not displayed");
			extent.extentLoggerFail("",
					"On click search button from the device keyoard the search result page is not displayed ");
		}
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}

	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1334(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1334_Logged In user- Verify for Search parent page (recent search page)Verify if user gets the auto suggestions upon entering three characters");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "him", "him");
			waitTime(2000);
			String SearchText = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			String Text1 = SearchText.substring(0, 1);
			System.out.println(Text1);
			waitTime(2000);
			String AutoSuggessionText1 = getText(IOSHiPiNeoDiscoverPage.AutoSuggestionsNameInSearchParentPage(1));
			String AutoText1 = AutoSuggessionText1.substring(0, 1);
			System.out.println(AutoText1);
			waitTime(2000);
			String AutoSuggessionText2 = getText(IOSHiPiNeoDiscoverPage.AutoSuggestionsNameInSearchParentPage(2));
			String AutoText2 = AutoSuggessionText2.substring(0, 1);
			waitTime(2000);
			String AutoSuggessionText3 = getText(IOSHiPiNeoDiscoverPage.AutoSuggestionsNameInSearchParentPage(3));
			String AutoText3 = AutoSuggessionText3.substring(0, 1);
			waitTime(2000);
			if ((Text1.equalsIgnoreCase(AutoText1)) || (Text1.equalsIgnoreCase(AutoText2))
					|| (Text1.equalsIgnoreCase(AutoText3))) {
				logger.info(
						"After user giving input of three character user able to get suggestions on the screen Ex. If user types sal he  got related search result on the screen");
				extent.extentLoggerPass("",
						"After user giving input of three character user able to get suggestions on the screen Ex. If user types sal he  got related search result on the screen");
			} else {
				logger.info(
						"After user giving input of three character user not able to get suggestions on the screen Ex. If user types sal he didn't got related search result on the screen");
				extent.extentLoggerFail("",
						"After user giving input of three character user not able to get suggestions on the screen Ex. If user types sal he didn't got related search result on the screen");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}

	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1342_T1346(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1342_Guest User- Verify for User should be able to see all categories results in the top tab");
		} else {
			extent.HeaderChildNode("T1346_Logged In user- Verify Users Tab on the search result page");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(2000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "HimanshiKhurana", "Himanshi Khurana");
		waitTime(2000);
		String SearchText = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
		String Text1 = SearchText.substring(0, 4);
		System.out.println(Text1);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
		waitTime(2000);
		String UserName11 = getText(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1));
		String UserName1 = UserName11.substring(0, 4);
		System.out.println(UserName1);
		if (Text1.equalsIgnoreCase(UserName1)) {
			logger.info(
					"Guest User able to see all the other user profiles respective to the searched keyword under the User tab");
			extent.extentLoggerPass("",
					"Guest User able to see all the other user profiles respective to the searched keyword under the User tab");
		} else {
			logger.info(
					"Guest User not able to see all the other user profiles respective to the searched keyword under the User tab");
			extent.extentLoggerFail("",
					"Guest User not able to see all the other user profiles respective to the searched keyword under the User tab");
		}
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		waitTime(2000);
	}
	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1376_P0(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T1376_Logged In User-Verify click on the users name on Users Tab of the search result page and its navigation");
			System.out.println(
					"T1376_Logged In User-Verify click on the users name on Users Tab of the search result page and its navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Mohit Yadav", "Search");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			String UserName = getText(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 2));
			System.out.println(UserName);
			String UserName1 = UserName.substring(0, 4);
			System.out.println("Substring--- " + UserName1);
			waitTime(5000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "Profile Name");
			waitTime(5000);
			String ProfileUserName = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(ProfileUserName);
			String ProfileUserName1 = ProfileUserName.substring(0, 4);
			System.out.println("Substring--- " + ProfileUserName1);
			if (UserName1.equalsIgnoreCase(ProfileUserName1)) {
				logger.info(
						"User able to tap on any user from the list and it should navigate to respective user page");
				extent.extentLoggerPass("",
						"User able to tap on any user from the list and it should navigate to respective user page");
			} else {
				logger.info(
						"User not able to tap on any user from the list and it should navigate to respective user page");
				extent.extentLoggerFail("",
						"User not able to tap on any user from the list and it should navigate to respective user page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1348_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1348_Guest User- Verify click on the users name on Users Tab of the search result page and its navigation");

			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Mohit Yadav", "Search");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			String UserName = getText(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 2));
			System.out.println(UserName);
			String UserName1 = UserName.substring(0, 4);
			System.out.println("Substring--- " + UserName1);
			waitTime(5000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "Profile Name");
			waitTime(5000);
			String ProfileUserName = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(ProfileUserName);
			String ProfileUserName1 = ProfileUserName.substring(0, 4);
			System.out.println("Substring--- " + ProfileUserName1);
			if (UserName1.equalsIgnoreCase(ProfileUserName1)) {
				logger.info(
						"User able to tap on any user from the list and it should navigate to respective user page");
				extent.extentLoggerPass("",
						"User able to tap on any user from the list and it should navigate to respective user page");
			} else {
				logger.info(
						"User not able to tap on any user from the list and it should navigate to respective user page");
				extent.extentLoggerFail("",
						"User not able to tap on any user from the list and it should navigate to respective user page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}

	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1353(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1353_Guest User- Verify Users followers list page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "Himanshi Khurana");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "Profile Name");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("On tap followers tab user getting login pop up on the screen");
				extent.extentLoggerPass("", "On tap followers tab user getting login pop up on the screen");
			} else {
				logger.info("On tap followers tab user not getting login pop up on the screen");
				extent.extentLoggerFail("", "On tap followers tab user not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1362(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1362_Guest User - Verify for following tab user list");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "Himanshi Khurana");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "Profile Name");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("On tap Following tab user getting login pop up on the screen");
				extent.extentLoggerPass("", "On tap Following tab user getting login pop up on the screen");
			} else {
				logger.info("On tap Following tab user not getting login pop up on the screen");
				extent.extentLoggerFail("", "On tap Following tab user not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}
	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1369(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1369_Guest User - Verify for Like tab of user list page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "Himanshi Khurana");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "Profile Name");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Likes"), "Like Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("On tap Like tab user getting login pop up on the screen");
				extent.extentLoggerPass("", "On tap Like tab user getting login pop up on the screen");
			} else {
				logger.info("On tap Like tab user not getting login pop up on the screen");
				extent.extentLoggerFail("", "On tap Like tab user not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}

	// 06/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1371(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1371_Guest User - Verify for follow  Button");
			System.out.println("T1371_Guest User - Verify for follow  Button");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "Himanshi Khurana");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "Profile Name");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Follow"), "Follow Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("On tap Follow Button user getting login pop up on the screen");
				extent.extentLoggerPass("", "On tap Follow Button user getting login pop up on the screen");
			} else {
				logger.info("On tap Follow Button user not getting login pop up on the screen");
				extent.extentLoggerFail("", "On tap Follow Button user not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}
	// 07/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1375(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1375_Logged In user-Verify Users Tab on the search result page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "Himanshi Khurana");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "User Name");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 3), "User followers count");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objListOfUserProfileNameInUserTabPage, "User Profile Image");
			waitTime(3000);
			List<WebElement> list = findElements(IOSHiPiNeoDiscoverPage.objListOfUserProfileNameInUserTabPage);
			int totalsize = list.size();
			System.out.println(totalsize);
			int i = 1;
			if (i < totalsize) {
				logger.info("list of users is displayed");
				extent.extentLoggerPass("", "list of users is displayed");
			} else {
				logger.info("list of users is not displayed");
				extent.extentLoggerFail("", "list of users is not displayed");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 07/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1377(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1377_Logged In User -Verify user profile page");
			clickOnFirstSearchedResult("Himanshi Khurana", "Yes", "Users");
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Arrow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots Menu");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosShareProfileInProfilePage, "Share Button");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
	// 07/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1378(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1378_Logged In User- Verify follow button and its click on the user profile page");
			System.out.println("T1378_Logged In User- Verify follow button and its click on the user profile page");
			deleteFollowingInFollowingScreen();
			clickOnFirstSearchedResult("Himanshi Khurana", "Yes", "Users");
			waitTime(2000);
			String expectedUserName = getText(IOSHipiNeoProfilePage.objiOSProfileNamesInProfileDetailsPage);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			String ActualUserName = getText(IOSHiPiNeoDiscoverPage.IdValue(expectedUserName));
			waitTime(2000);
			if (expectedUserName.equalsIgnoreCase(ActualUserName)) {
				logger.info(
						"On tap follow button that respected user get followed and it displayed under following list");
				extent.extentLoggerPass("",
						"On tap follow button that respected user get followed and it displayed under following list");
			} else {
				logger.info(
						"On tap follow button that respected user not get followed and it is not displayed under following list");
				extent.extentLoggerFail("",
						"On tap follow button that respected user not get followed and it is not displayed under following list");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 07/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1379(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1379_Logged In User- Verify Following tab and its click on the user profile page");
			System.out.println("T1379_Logged In User- Verify Following tab and its click on the user profile page");
			clickOnFirstSearchedResult("Himanshi Khurana", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage,
					"Search Field In Following Page")) {
				List<WebElement> list = findElements(
						IOSHipiNeoProfilePage.objiosUserNameBelowNameInFollowerAndFollowingScreen);
				int ListOfFollowers = list.size();
				System.out.println(ListOfFollowers);
				int user = 1;
				if (user <= ListOfFollowers) {
					logger.info("User can access the following list by clicking upon following tab");
					extent.extentLoggerPass("", "User can access the following list by clicking upon following tab");
				} else {
					logger.info("User can not access the following list by clicking upon following tab");
					extent.extentLoggerFail("",
							"User can not access the following list by clicking upon following tab");
				}
			} else {
				logger.info("0  Following");
				System.out.println("0 Following");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 07/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1380(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1380_Logged In User- Verify Followers tab and its click on the user profile page");
			System.out.println("T1380_Logged In User- Verify Followers tab and its click on the user profile page");
			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage,
					"Search Field In Followers Page")) {
				List<WebElement> list = findElements(
						IOSHipiNeoProfilePage.objiosUserNameBelowNameInFollowerAndFollowingScreen);
				int ListOfFollowers = list.size();
				System.out.println(ListOfFollowers);
				int user = 1;
				if (user <= ListOfFollowers) {
					logger.info("On tap followers tab user can access the followers list");
					extent.extentLoggerPass("", "On tap followers tab user can access the followers list");
				} else {
					logger.info("On tap followers tab user can not access the followers list");
					extent.extentLoggerFail("", "On tap followers tab user can not access the followers list");
				}
			} else {
				logger.info("0 Followers");
				System.out.println("0 Followers");

			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1381(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1381_Logged In User- Verify Followers tab and its click on the user profile page");
			clickOnFirstSearchedResult("Himanshi Khurana", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage,
					"Search Field In Followers Page")) {
				List<WebElement> list = findElements(
						IOSHipiNeoProfilePage.objiosUserNameBelowNameInFollowerAndFollowingScreen);
				int ListOfFollowers = list.size();
				System.out.println(ListOfFollowers);
				int user = 1;
				if (user <= ListOfFollowers) {
					logger.info("On tap followers tab user can access the followers list");
					extent.extentLoggerPass("", "On tap followers tab user can access the followers list");
				} else {
					logger.info("On tap followers tab user can not access the followers list");
					extent.extentLoggerFail("", "On tap followers tab user can not access the followers list");
				}
			} else {
				logger.info("0 Followers");
				System.out.println("0 Followers");

			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1383(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1383_Logged In User- Verify for User can search any following user from the list");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			String ExpectedName = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(ExpectedName);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field In Following Page");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, ExpectedName, "User Name");
			waitTime(5000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(5000);
			String AtualName = getText(IOSHiPiNeoDiscoverPage.IdValue(ExpectedName));
			System.out.println(AtualName);
			if (ExpectedName.equalsIgnoreCase(AtualName)) {
				logger.info(
						"user can type on search field under following tab and result is displayed respective to the search data");
				extent.extentLoggerPass("",
						"user can type on search field under following tab and result is displayed respective to the search data");
			} else {
				logger.info(
						"user can not type on search field under following tab and result is not displayed respective to the search data");
				extent.extentLoggerFail("",
						"user can not type on search field under following tab and result is not displayed respective to the search data");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1384(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1384_Logged In User- Verify for following tab of user list page");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			String ExpectedName = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(ExpectedName);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field In Following Page");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, ExpectedName, "User Name");
			waitTime(5000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(5000);
			List<WebElement> list = findElements(
					IOSHipiNeoProfilePage.objiosUserNameBelowNameInFollowerAndFollowingScreen);
			int ListOfFollowers = list.size();
			System.out.println(ListOfFollowers);
			int user = 1;
			if (user <= ListOfFollowers) {
				logger.info("Following user list displayed over this tab from the following list");
				extent.extentLoggerPass("", "Following user list displayed over this tab from the following list");
			} else {
				logger.info("Following user list is not displayed over this tab from the following list");
				extent.extentLoggerFail("",
						"Following user list is not displayed over this tab from the following listOn tap followers tab user can not access the followers list");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1385(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1385_Logged In User- Verify for search field on the user following tab");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage,
					"Search Field In Following Page")) {
				logger.info("User able get search field on the following tab");
				extent.extentLoggerPass("", "User able get search field on the following tab");
			} else {
				logger.info("User not able get search field on the following tab");
				extent.extentLoggerFail("", "User not able get search field on the following tab");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1386(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1386_Logged In User - Verify for click on search field");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field In Following Page");
			waitTime(2000);
			String ExpectedName = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(ExpectedName);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field In Following Page");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, ExpectedName, "User Name");
			waitTime(5000);

			String Actual = getText(IOSHiPiNeoDiscoverPage.objiosSearchFollowingFieldInDiscoverPage);
			waitTime(5000);
			if (ExpectedName.equalsIgnoreCase(Actual)) {
				logger.info("user can type on search field under following tab");
				extent.extentLoggerPass("", "user can type on search field under following tab");
			} else {
				logger.info("user can not type on search field under following tab");
				extent.extentLoggerFail("", "user can not type on search field under following tab");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1389(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1389_Logged In User -Verify for click on displayed user name from the search result and navigation");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field In Following Page");
			waitTime(2000);
			String ExpectedName = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(ExpectedName);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field In Following Page");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, ExpectedName, "User Name");
			waitTime(5000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(5000);
			String Name = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(Name);
			click(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen, "User Name");
			waitTime(2000);
			String Name1 = getText(IOSHipiNeoProfilePage.objiOSProfileNamesInProfileDetailsPage);
			System.out.println(Name);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots Menu")
					&& (Name.equalsIgnoreCase(Name1))) {
				logger.info("User can tap on searched result from the list and it is navigated to user profile page");
				extent.extentLoggerPass("",
						"User can tap on searched result from the list and it is navigated to user profile page");
			} else {
				logger.info(
						"User can not tap on searched result from the list and it is not navigated to user profile page");
				extent.extentLoggerFail("",
						"User can not tap on searched result from the list and it is not navigated to user profile page");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// ============================Back Button
	// Method===============================================================

	public void BackButton() throws Exception {
		for (int i = 1; i <= 10; i++) {
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button")) {
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
				waitTime(2000);
			} else {
				break;
			}
		}
	}
	// ============================Navigate to home Page
	// Method===============================================================

	public void NavigateToHomPage() throws Exception {
		for (int i = 1; i <= 10; i++) {
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button")) {
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
				waitTime(2000);
			} else {
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
				waitTime(2000);
				break;
			}
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1390(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1390_Logged In User - Verify for followes tab user list");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Tab");
			waitTime(2000);
			List<WebElement> list = findElements(
					IOSHipiNeoProfilePage.objiosUserNameBelowNameInFollowerAndFollowingScreen);
			int ListOfFollowers = list.size();
			System.out.println(ListOfFollowers);
			int user = 1;
			if (user <= ListOfFollowers) {
				logger.info("On tap followers tab user able to get list of followers on screen");
				extent.extentLoggerPass("", "On tap followers tab user able to get list of followers on screen");
			} else {
				logger.info("On tap followers tab user not able to get list of followers on screen");
				extent.extentLoggerFail("", "On tap followers tab user not able to get list of followers on screen");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1341(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1341_Guest User- Verify for User should be able to see all categories results in the top tab");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "HimanshiKhurana", "Himanshi Khurana");
			waitTime(2000);
			String SearchText = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage);
			String Text1 = SearchText.substring(0, 4);
			System.out.println(Text1);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.CategoriesResultsInTheTopTab("Users"), "Users Tab");
			waitTime(2000);
			String UserName11 = getText(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1));
			String UserName1 = UserName11.substring(0, 4);
			System.out.println(UserName1);
			if (Text1.equalsIgnoreCase(UserName1)) {
				logger.info(
						"Guest User able to see all the other user profiles respective to the searched keyword under the User tab");
				extent.extentLoggerPass("",
						"Guest User able to see all the other user profiles respective to the searched keyword under the User tab");
			} else {
				logger.info(
						"Guest User not able to see all the other user profiles respective to the searched keyword under the User tab");
				extent.extentLoggerFail("",
						"Guest User not able to see all the other user profiles respective to the searched keyword under the User tab");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1370(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1370_Guest User - Verify for search field on the user followers tab");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("On tap Followers tab user getting login pop up on the screen");
				extent.extentLoggerPass("", "On tap Followers tab user getting login pop up on the screen");
			} else {
				logger.info("On tap Followers tab user not getting login pop up on the screen");
				extent.extentLoggerFail("", "On Followers Like tab user not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1372(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1372_Guest User - Verify followers list user click and navigation");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("On tap Followers tab user getting login pop up on the screen");
				extent.extentLoggerPass("", "On tap Followers tab user getting login pop up on the screen");
			} else {
				logger.info("On tap Followers tab user not getting login pop up on the screen");
				extent.extentLoggerFail("", "On Followers Like tab user not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Close Button");
			waitTime(3000);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}

	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1410(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1410_Verify Sound Tab on the search result page");
			clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "3 line details icon");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.UserNameInSoundsScreen("Chandigarh Mein", 1), "song ");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.DurationInSoundsScreen(1), "song duration ")) {
				String text = getText(IOSHiPiNeoDiscoverPage.DurationInSoundsScreen(1));
				String text1 = text.substring(3, 4);
				int text2 = Integer.parseInt(text1);
				System.out.println(text2);
				int i = 0;
				if (i <= text2) {
					logger.info("song duration below the video poster is displayed");
					extent.extentLoggerPass("", "song duration below the video poster is displayed");
				} else {
					logger.info("song duration below the video poster is not displayed");
					extent.extentLoggerFail("", "song duration below the video poster is not displayed");
				}
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1411(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1411_Verify tap on sound poster image and details icon and its navigation");
			System.out.println("T1411_Verify tap on sound poster image and details icon and its navigation");
			clickOnFirstSearchedResult("Badhaai Do", "No", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Sounds"), "Sounds");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSoundTitleInSoundsTab, "Song Name");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage,
					"Use This Sound Button")) {
				logger.info("User able to tap any song from the list and on tap it is navigate to song details page");
				extent.extentLoggerPass("",
						"User able to tap any song from the list and on tap it is navigate to song details page");
			} else {
				logger.info(
						"User not able to tap any song from the list and on tap it is not navigate to song details page");
				extent.extentLoggerFail("",
						"User not able to tap any song from the list and on tap it is not navigate to song details page");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1412(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1412_Check if Sounds rail is displayed under Top tab in search result page");
			clickOnFirstSearchedResult("Himanshi khurana", "No", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("SOUNDS"), "SOUNDS");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("SOUNDS"),
					"SOUNDS")) {
				logger.info("Sounds rail displayed under Top tab in search result page");
				extent.extentLoggerPass("", "Sounds rail displayed under Top tab in search result page");
			} else {
				logger.info("Sounds rail is not displayed under Top tab in search result page");
				extent.extentLoggerFail("", "Sounds rail is not displayed under Top tab in search result page");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 10/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1413(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1413_Check if user navigate to Sound tab by tapping on See more CTA which is present beside of Sounds rail under Top tab in search result page");
			System.out.println(
					"T1413_Check if user navigate to Sound tab by tapping on See more CTA which is present beside of Sounds rail under Top tab in search result page");
			clickOnFirstSearchedResult("himanshi khurana", "No", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("SOUNDS"), "SOUNDS");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSeeMoreArrowForSearchedResults("SOUNDS"), "See More Arrow");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				logger.info(
						"User able to navigate to Sound tab by tapping on See more CTA which is present beside of Sounds rail under Top  tab in search result page");
				extent.extentLoggerPass("",
						"User able to navigate to Sound tab by tapping on See more CTA which is present beside of Sounds rail under Top  tab in search result page");
			} else {
				logger.info(
						"User not able to navigate to Sound tab by tapping on See more CTA which is present beside of Sounds rail under Top  tab in search result page");
				extent.extentLoggerFail("",
						"User not able to navigate to Sound tab by tapping on See more CTA which is present beside of Sounds rail under Top  tab in search result page");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1415(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1415_Check if user is able to scroll Up the screen in Sound tab");
			clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			String ExpectedResult = getText(IOSHiPiNeoDiscoverPage.UserNameInSoundsScreen("Chandigarh Mein", 1));
			waitTime(2000);
			System.out.println(ExpectedResult);

			waitTime(3000);
			String ActualResult = getText(IOSHiPiNeoDiscoverPage.UserNameInSoundsScreen("Chandigarh Mein", 2));
			waitTime(2000);
			System.out.println(ActualResult);
			if (!ExpectedResult.equalsIgnoreCase(ActualResult)) {
				logger.info("User able to scroll up the screen in Sound tab");
				extent.extentLoggerPass("", "User able to scroll up the screen in Sound tab");
			} else {
				logger.info("User not able to scroll up the screen in Sound tab");
				extent.extentLoggerFail("", "User not able to scroll up the screen in Sound tab");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1414(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1415_Check if user is able to scroll Down the screen in Sound tab");
			clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			String ExpectedResult = getText(IOSHiPiNeoDiscoverPage.UserNameInSoundsScreen("Chandigarh Mein", 1));
			waitTime(2000);
			System.out.println(ExpectedResult);

			String ActualResult = getText(IOSHiPiNeoDiscoverPage.UserNameInSoundsScreen("Chandigarh Mein", 2));
			waitTime(2000);
			System.out.println(ActualResult);
			if (!ExpectedResult.equalsIgnoreCase(ActualResult)) {
				logger.info("User able to scroll Down the screen in Sound tab");
				extent.extentLoggerPass("", "User able to scroll Down the screen in Sound tab");
			} else {
				logger.info("User not able to scroll Down the screen in Sound tab");
				extent.extentLoggerFail("", "User not able to scroll Down the screen in Sound tab");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1416(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1416_Verify sound details page");
			System.out.println("T1416_Verify sound details page");
			DeleteFavourite();
			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, "Back Arrow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objShareButtonInSoundPage, "Share Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites")) {
				click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			}
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites Button");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1420_T1451(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1420_Logged in User - Check if user is navigate to sound detil page by tapping on three lines which is present at right side of the screen in Sound tab");
		} else {
			extent.HeaderChildNode(
					"T1451_Guest User - Check if user is navigate to sound detail page by tapping on three lines which is present at right side of the screen in Sound tab");
		}
		clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
		waitTime(2000);

		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound Button")) {
			logger.info("User able to navigate to sound detail page");
			extent.extentLoggerPass("", "User able to navigate to sound detail page");
		} else {
			logger.info("User not able to navigate to sound detail page");
			extent.extentLoggerFail("", "User not able to navigate to sound detail page");
		}
		NavigateToHomPage();
	}

	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1422(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1422_Logged in User - Check the sound is added to profile favourites");
			DeleteFavourite();
			clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
			waitTime(4000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites")) {
				click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
				waitTime(3000);
			}
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
			waitTime(2000);
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				logger.info("Verified the sound is added to profile favourites");
				extent.extentLoggerPass("", "Verified the sound is added to profile favourites");
			} else {
				logger.info("Verified the sound is not added to profile favourites");
				extent.extentLoggerFail("", "Verified the sound is not added to profile favourites");
			}
			NavigateToHomPage();
		}
	}

	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1438(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1438_Logged in user - Check user is able to view full player of the videos by tapping on any video in sound detail page");
			clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
			waitTime(4000);

			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "Play Icon");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button")) {
				logger.info("User able to view full player of the videos by tapping on any video in sound detail page");
				extent.extentLoggerPass("",
						"User able to view full player of the videos by tapping on any video in sound detail page");
			} else {
				logger.info(
						"User not able to view full player of the videos by tapping on any video in sound detail page");
				extent.extentLoggerFail("",
						"User not able to view full player of the videos by tapping on any video in sound detail page");
			}
			NavigateToHomPage();
		}
	}
	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1441(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1441_Logged in user - Check if user is able to navigate to creator screen by tapping on Use this Sound CTA");
			System.out.println();
			System.out.println(
					"T1441_Logged in user - Check if user is able to navigate to creator screen by tapping on Use this Sound CTA");
			clickOnFirstSearchedResult("Chandigarh Mein", "Yes", "Sounds");
			waitTime(4000);
			click(IOSHiPiNeoDiscoverPage.objiosFirstSoundTitleInSoundsTab, "First sound");
			waitTime(4000);
		String 	SoundTitleInUseThisSoundsScreen1=getText(IOSHiPiNeoDiscoverPage.objiosSoundTitleInUseThisSoundsScreen);
		String[] SoundTitleInUseThisSoundsScreen = SoundTitleInUseThisSoundsScreen1.split(" ");
		extent.extentLogger("", "the sound name in use this sound screen----"+SoundTitleInUseThisSoundsScreen[0]);
		System.out.println("the sound name in use this sound screen----"+SoundTitleInUseThisSoundsScreen[0]);
		
			click(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound Button");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			String SoundTitleInRecordScreen=getText(IOSHipiCreateVideoPage.objiosSoundTitleInRecordScreen);
			String[] SoundTitleInRecordScreen1 = SoundTitleInRecordScreen.split(" ");
			System.out.println(SoundTitleInRecordScreen1[1]);
			if(SoundTitleInRecordScreen1[1].equalsIgnoreCase(SoundTitleInUseThisSoundsScreen[0])) {
				logger.info("The sound added is visible in Recording screen");
				extent.extentLoggerPass("", "The sound added is visible in Recording screen");
			}else {
				logger.error("The sound added is not visible in Recording screen");
				extent.extentLoggerFail("", "The sound added is not visible in Recording screen");
			}
			if (verifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record Buton")) {
				logger.info("User able to  navigate to creator screen");
				extent.extentLoggerPass("", "User able to  navigate to creator screen");
			} else {
				logger.info("User not able to  navigate to creator screen");
				extent.extentLoggerFail("", "User not able to  navigate to creator screen");
			}
			click(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1443_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1443_Logged in User - Check user is able to navigate to Sound detail page by tapping back button from video ");
			System.out.println(
					"T1443_Logged in User - Check user is able to navigate to Sound detail page by tapping back button from video ");
			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosOfHashtagVideoDetailPage, "Play Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound Button")) {
				logger.info("User able to navigate to Sound detail page by tapping back button from video ");
				extent.extentLoggerPass("",
						"User able to navigate to Sound detail page by tapping back button from video ");
			} else {
				logger.info("User not able to navigate to Sound detail page by tapping back button from video");
				extent.extentLoggerFail("",
						"User not able to navigate to Sound detail page by tapping back button from video ");
			}
			NavigateToHomPage();
		}

	}

	public void Discover_T1462(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("NonSubscribedUser")) {

			extent.HeaderChildNode(
					"T1462_Guest User - Check user is able to navigate to Sound detail page by tapping back button from video ");

			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosOfHashtagVideoDetailPage, "Play Icon");
			waitTime(2000);

			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound Button")) {
				logger.info("User able to navigate to Sound detail page by tapping back button from video ");
				extent.extentLoggerPass("",
						"User able to navigate to Sound detail page by tapping back button from video ");
			} else {
				logger.info("User not able to navigate to Sound detail page by tapping back button from video");
				extent.extentLoggerFail("",
						"User not able to navigate to Sound detail page by tapping back button from video ");
			}
			NavigateToHomPage();
		}
	}

	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1445(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1445_Guest Userr: Verify Add to favorite button on song details page");
			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Log in PopUp")) {
				logger.info("On tap Add to favorite button guest user getting login pop up");
				extent.extentLoggerPass("", "On tap Add to favorite button guest user getting login pop up");
			} else {
				logger.info("On tap Add to favorite button guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap Add to favorite button guest user not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1446(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1446_Guest User: Verify share button on song details page");
			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objShareButtonInSoundPage, "Share Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Log in PopUp")) {
				logger.info("On tap  share button guest user getting login pop up");
				extent.extentLoggerPass("", "On tap share button guest user getting login pop up");
			} else {
				logger.info("On tap share button guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap share button guest user not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	// 12/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1447(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1447_Guest User: Verify Use This Sound button on song details page");
			clickOnFirstSearchedResult("Himanshi khurana", "Yes", "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objUseThisSoundButtonInSoundPage, "Use This Sound button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Log in PopUp")) {
				logger.info("On tap  Use This Sound button guest user getting login pop up");
				extent.extentLoggerPass("", "On tap Use This Sound button guest user getting login pop up");
			} else {
				logger.info("On tap Use This Sound button guest user not getting login pop up");
				extent.extentLoggerFail("", "On tap Use This Sound button guest user not getting login pop up");
			}
			click(IOSHipiNeoHomePage.objiOSProfileCloseBtnInBelowTabBar, "Close Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1387(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1387_Logged In User - validate the auto suggestion list under following tab respective to search input");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following  Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.keyboard("n"), "n");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("e"), "e");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("h"), "h");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("a"), "a");
			waitTime(2000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
			System.out.println(Text1);
			String Name1 = Text1.substring(0, 1);
			System.out.println(Name1);
			waitTime(5000);
			String Text2 = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(Text2);
			String Name2 = Text2.substring(0, 1);
			System.out.println(Name2);
			if (Name1.equalsIgnoreCase(Name2)) {
				logger.info(
						"user able to type on search field under Following tab and autosuggestion result is displayed");
				extent.extentLoggerPass("",
						"user able to type on search field under Following tab and autosuggestion result is displayed");
			} else {
				logger.info(
						"user not able to type on search field under Following tab and autosuggestion result is not displayed");
				extent.extentLoggerFail("",
						"user not able to type on search field under Following tab and autosuggestion result is not displayed");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1391(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1391_Logged In User- Verify for search field on the user followers tab");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following  Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field")) {
				logger.info("user is getting search field on the following tab");
				extent.extentLoggerPass("", "user is getting search field on the following tab");
			} else {
				logger.info("user is not getting search field on the following tab");
				extent.extentLoggerFail("", "user is not getting search field on the following tab");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1392(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1392_Logged In User - Verify for click on search field");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following  Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(3000);
			String ExpectectedResult = "Neha";
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, ExpectectedResult, "Neha");
			waitTime(3000);
			String ActualResult = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
			waitTime(3000);
			if (ExpectectedResult.equalsIgnoreCase(ActualResult)) {
				logger.info("user able to type on search field under following tab");
				extent.extentLoggerPass("", "user able to type on search field under following tab");
			} else {
				logger.info("user not able to type on search field under following tab");
				extent.extentLoggerFail("", "user not able to type on search field under following tab");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1393(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1393_Logged In User- validate the auto suggestion list under followers tab respective to search input");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.keyboard("n"), "n");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("e"), "e");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("h"), "h");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("a"), "a");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("more"), "more");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("0"), "0");
			waitTime(2000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
			System.out.println(Text1);
			String Name1 = Text1.substring(0, 3);
			String Text2 = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(Text2);
			String Name2 = Text2.substring(0, 3);
			if (Name1.equalsIgnoreCase(Name2)) {
				logger.info(
						"user able to type on search field under Followers tab and autosuggestion result is displayed");
				extent.extentLoggerPass("",
						"user able to type on search field under Followers tab and autosuggestion result is displayed");
			} else {
				logger.info(
						"user not able to type on search field under Followers tab and autosuggestion result is not displayed");
				extent.extentLoggerFail("",
						"user not able to type on search field under Followers tab and autosuggestion result is not displayed");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1394(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1394_Logged In User - Verify for User can search any followers user from the list");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.keyboard("n"), "n");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("e"), "e");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("h"), "h");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("a"), "a");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("more"), "more");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.keyboard("0"), "0");
			waitTime(2000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
			System.out.println(Text1);
			String Name1 = Text1.substring(0, 4);
			String Text2 = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(Text2);
			String Name2 = Text2.substring(0, 4);
			if (Name1.equalsIgnoreCase(Name2)) {
				logger.info(
						"user can able to type on search field under Followers tab and result is displayed respective to the search data");
				extent.extentLoggerPass("",
						"user can able to type on search field under Followers tab and result is displayed respective to the search data");
			} else {
				logger.info(
						"user can not able to type on search field under Followers tab and result is not displayed respective to the search data");
				extent.extentLoggerFail("",
						"user can not able to type on search field under Followers tab and result is not displayed respective to the search data");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1395(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1395_Logged In -Verify for click on displayed user name from the search result and navigation");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following  Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Neha", "Neha");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen, "User Name");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
				logger.info(
						"User able to tap on searched result from the list and it is navigated to user profile page");
				extent.extentLoggerPass("",
						"User able to tap on searched result from the list and it is navigated to user profile page");
			} else {
				logger.info(
						"User not able to tap on searched result from the list and it is not navigated to user profile page");
				extent.extentLoggerFail("",
						"User not able to tap on searched result from the list and it is not navigated to user profile page");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1396(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1396_Logged In User - Verify following list user click and navigation");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following  Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Neha", "Neha");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen, "User Name");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
				logger.info("On tap any user from the following list it is navigating to user profile page");
				extent.extentLoggerPass("",
						"On tap any user from the following list it is navigating to user profile page");
			} else {
				logger.info("On tap any user from the following list it is not navigating to user profile page");
				extent.extentLoggerFail("",
						"On tap any user from the following list it is not navigating to user profile page");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1397(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1397_Logged In User - Verify for followers tab of user list page");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			List<WebElement> FollowButton = findElements(IOSHipiNeoProfilePage.objiosListOfFollowBtnInFollowerScreen);
			int List = FollowButton.size();
			int i = 1;
			if (i <= List) {
				logger.info(
						"On tap followers tab user is getting list of followers list of that user on his followers page");
				extent.extentLoggerPass("",
						"On tap followers tab user is getting list of followers list of that user on his followers page");
			} else {
				logger.info(
						"On tap followers tab user is not getting list of followers list of that user on his followers page");
				extent.extentLoggerFail("",
						"On tap followers tab user is not getting list of followers list of that user on his followers page");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1398(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1398_Logged In User- Verify for search field on the user followers tab");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field")) {
				logger.info("user is getting search field on the Followers tab");
				extent.extentLoggerPass("", "user is getting search field on the Followers tab");
			} else {
				logger.info("user is not getting search field on the Followers tab");
				extent.extentLoggerFail("", "user is not getting search field on the Followers tab");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1400(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1400_Logged In User - Verify followers list user click and navigation");
			System.out.println("T1400_Logged In User - Verify followers list user click and navigation");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(Text1);
			click(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen, "User Name");
			waitTime(3000);
			String Text2 = getText(IOSHipiNeoProfilePage.objiOSProfileNamesInProfileDetailsPage);
			System.out.println(Text2);
			if (Text1.equalsIgnoreCase(Text2)) {
				logger.info("On tap user from the follower list it is navigate to that respective user profile page");
				extent.extentLoggerPass("",
						"On tap user from the follower list it is navigate to that respective user profile page");
			} else {
				logger.info(
						"On tap user from the follower list it is not navigate to that respective user profile page");
				extent.extentLoggerFail("",
						"On tap user from the follower list it is not navigate to that respective user profile page");
			}
			NavigateToHomPage();
		}
	}
	// 17/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1402(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1402_Logged In User- Verify back button and its click on the user profile page");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosBackArrowInSoundTab, userType);
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Users"),
					"Users Tab")) {
				logger.info(
						"User able to tap on back button placed at left side upper corner and navaigate to respective page");
				extent.extentLoggerPass("",
						"User able to tap on back button placed at left side upper corner and navaigate to respective page");
			} else {
				logger.info(
						"User not able to tap on back button placed at left side upper corner and not navaigate to respective page");
				extent.extentLoggerFail("",
						"User not able to tap on back button placed at left side upper corner and not navaigate to respective page");
			}
			NavigateToHomPage();
		}
	}
	// 18/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1399(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1399_Logged In User- Verify for followers tab user list");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button")) {
				logger.info("User able to see all the follwers of user on the respective tab");
				extent.extentLoggerPass("", "User able to see all the follwers of user on the respective tab");
			} else {
				logger.info("User not able to see all the follwers of user on the respective tab");
				extent.extentLoggerFail("", "User not able to see all the follwers of user on the respective tab");
			}
			NavigateToHomPage();
		}
	}
	// 18/01/21//
	// k===============================================Discover=P2==================================================

	public void Discover_T1382(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1382_Logged In User - Verify users Following /Followers Page");
			clickOnFirstSearchedResult("Mohit Yadav", "Yes", "Users");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen, "User Name");
			waitTime(3000);
			String text1 = getText(IOSHipiNeoProfilePage.objiosFollowerTabInFollowingScreen);
			String count = text1.substring(10, 13);

			Float count1 = Float.parseFloat(count);
			System.out.println(count);
			System.out.println(count1);
			int i = 0;
			if (i <= count1) {
				logger.info("Followers Tab with count is displayed");
				extent.extentLoggerPass("", "Followers Tab with count is displayed");
			} else {
				logger.info("Followers Tab with count is not displayed");
				extent.extentLoggerFail("", "Followers Tab with count is not displayed");
			}
			String text2 = getText(IOSHipiNeoProfilePage.objiosFollowingTabInFollowingScreen);
			String count2 = text2.substring(10, 11);
			System.out.println(count2);
			int count3 = Integer.parseInt(count2);
			System.out.println(count3);
			int q = 0;
			if (q <= count3) {
				logger.info("Following Tab with count is displayed");
				extent.extentLoggerPass("", "Following Tab with count is displayed");
			} else {
				logger.info("Following Tab with count is not displayed");
				extent.extentLoggerFail("", "Following Tab with count is not displayed");
			}
			int j = 0;
			List<WebElement> size1 = findElements(IOSHipiNeoProfilePage.objiosListOfFollowBtnInFollowerScreen);
			int size2 = size1.size();
			System.out.println(size2);
			if (j < size2) {
				logger.info("list of followers with follow button is displayed");
				extent.extentLoggerPass("", "list of followers with follow button is displayed");
			} else {
				logger.info("list of followers with follow button is not displayed");
				extent.extentLoggerFail("", "list of followers with follow button is not displayed");
			}
			click(IOSHipiNeoProfilePage.objiosFollowingTabInFollowingScreen, "Following Tab");
			waitTime(2000);

			List<WebElement> size3 = findElements(IOSHipiNeoProfilePage.objiosListOfFollowBtnInFollowerScreen);
			int size4 = size3.size();
			System.out.println(size4);
			if (j < size4) {
				logger.info("list of Following with follow button is displayed");
				extent.extentLoggerPass("", "list of Following with follow button is displayed");
			} else {
				logger.info("list of Following with follow button is not displayed");
				extent.extentLoggerFail("", "list of Following with follow button is not displayed");
			}
			NavigateToHomPage();
		}
	}

//-------------------------kirn--jan-27--profile--------------------------------------------------------------------------	

	// 19/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1120(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1120_Logged in user - Check user is able to see notification bell icon ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon")) {
				logger.info("User able to see the notification bell icon");
				extent.extentLoggerPass("", "User able to see the notification bell icon");
			} else {
				logger.info("User not able to see the notification bell icon");
				extent.extentLoggerFail("", "User not able to see the notification bell icon");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}
	// 19/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1121(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1121_Logged in user - Check user is able to tap on notification bell icon");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
			waitTime(2000);
			if (verifyElementPresent(
					IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("All Notifications"),
					"All Activity Dropdown")) {
				logger.info("User able to navigate to notification screen");
				extent.extentLoggerPass("", "User able to navigate to notification screen");
			} else {
				logger.info("User not able to navigate to notification screen");
				extent.extentLoggerFail("", "User not able to navigate to notification screen");
			}
			NavigateToHomPage();
		}
	}
	// 19/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1123(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1123_Logged in user - Check if user is able to tap on likes in  All Activity drop down");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("All Notifications"),
					"All Activity Dropdown");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Likes"), "Likes Icon");
			waitTime(2000);
			if (verifyElementPresent(
					IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Likes"),
					"Likes Icon")) {
				if (!verifyElementExist(IOSHipiNeoProfilePage.objiosNotificationsNotAvailableInBellScreen,
						"Notifications Not Available")) {
					if (verifyElementPresent(IOSHipiNeoProfilePage.objiosListOfLikedVideoInLikePage, "Liked Video")) {
						logger.info("User navigated to like page all liked video is displayed ");
						extent.extentLoggerPass("", "User navigated to like page all liked video is displayed ");
					} else {
						logger.info("User navigated to like page all liked video is not displayed ");
						extent.extentLoggerFail("", "User navigated to like page all liked video is not displayed ");
					}
				} else {
					logger.info("Notifications Not Available");
					extent.extentLoggerPass("", "Notifications Not Available");
				}
			} else {
				logger.info("User not able to navigated to like page all liked video is not displayed ");
				extent.extentLoggerFail("",
						"User not able to navigated to like page all liked video is not displayed ");
			}
			NavigateToHomPage();
		}
	}
	//// 19/01/21//
	//// k===============================================Profile=P2==================================================
//					
//					public void Profile_T1124(String userType) throws Exception {
//						if (userType.equalsIgnoreCase("NonSubscribedUser")) {			
//							extent.HeaderChildNode("T1124_Logged in user - Check if user is able to tap on Comments in All Activity drop down");
//							click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
//							waitTime(2000);	
//							click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
//							waitTime(2000);	
//							click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("All Activity"), "All Activity Dropdown");
//							waitTime(2000);	
//							click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Comments"), "Comments Icon");
//							waitTime(2000);	
//							if (verifyElementPresent(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Comments"), "Comments Icon")) {
//								if (!verifyElementExist(IOSHipiNeoProfilePage.objiosNotificationsNotAvailableInBellScreen, "Notifications Not Available")) {
//					//change Xpath  if (verifyElementPresent(IOSHipiNeoProfilePage.objiosListOfLikedVideoInLikePage, "Comments")) {
//									logger.info("User navigated to comment  page all commented  video is displayed ");
//									extent.extentLoggerPass("","User navigated to comment  page all commented  video is displayed ");
//								}else {
//									logger.info("User navigated to comment  page all commented  video is not displayed ");
//									extent.extentLoggerFail("","User navigated to comment  page all commented  video is not displayed ");
//								}
//								}
//							else {
//								logger.info("Notifications Not Available");
//								extent.extentLoggerPass("","Notifications Not Available");
//							}
//								}
//								else {
//									logger.info("User not able to navigated to like page all liked video is not displayed ");
//									extent.extentLoggerFail("","User not able to navigated to like page all liked video is not displayed ");
//								}
//								click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
//								waitTime(2000);
//							}
//						}					

	// 19/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1126(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1126_Logged in user - Check if user is able to tap on Followers in  All Activity drop down");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("All Notifications"),
					"All Activity Dropdown");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Followers"),
					"Followers Icon");
			waitTime(2000);
			if (verifyElementPresent(
					IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Followers"),
					"Followers Icon")) {
				if (!verifyElementExist(IOSHipiNeoProfilePage.objiosNotificationsNotAvailableInBellScreen,
						"Notifications Not Available")) {
					if ((verifyElementExist(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow Button"))
							|| (verifyElementExist(IOSHipiNeoProfilePage.objiosFriendsBtnInBellpage,
									"Friends Button"))) {
						logger.info("Non -followers or followers profile is displayed in followers page ");
						extent.extentLoggerPass("",
								"Non -followers or followers profile is displayed in followers page ");
					} else {
						logger.info("Non -followers or followers profile is not displayed in followers page ");
						extent.extentLoggerFail("",
								"Non -followers or followers profile is not displayed in followers page ");
					}
				} else {
					logger.info("Notifications Not Available");
					extent.extentLoggerPass("", "Notifications Not Available");
				}
			} else {
				logger.info(
						"User not able to navigated to followers page Non -followers or followers profile is not displayed ");
				extent.extentLoggerFail("",
						"User not able to navigated to followers page Non -followers or followers profile is not displayed ");
			}
			NavigateToHomPage();
		}
	}

	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1122(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1122_Logged in user - Check the UI of notification screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("All Activity"),
					"All Activity Dropdown");
			waitTime(2000);
			verifyElementExist(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			verifyElementPresent(
					IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("All Activity"),
					"All Activity Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Like"),
					"Like Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Comments"),
					"Comments Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Mentions"),
					"Mentions Icon");
			waitTime(2000);
			verifyElementPresent(
					IOSHipiNeoProfilePage.AllActivityLikeCommentsMentionsFollowersInBellScreen("Followers"),
					"Followers Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1132(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1132_Logged in user - Check  thumbnail of the video and profile picture of the user is displayed who liked the video");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
			waitTime(2000);
			Dimension Screen = getDriver().manage().window().getSize();
			int X = Screen.width / 2;
			WebElement Profile = findElement(IOSHipiNeoProfilePage.objiosProfileInBellPage);
			int ProfileX = Profile.getLocation().getX();
			if (ProfileX < X) {
				logger.info("profile picture of the user at left side");
				extent.extentLoggerPass("", "profile picture of the user at left side");
			} else {
				logger.info("profile picture of the user not at left side");
				extent.extentLoggerFail("", "profile picture of the user not at left side");
			}
			NavigateToHomPage();
		}
	}

	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1136(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1136_Logged in user - Check user navigated to profile screen by tapping back button ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBellIconInProfileScreen, "Bell Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dotsmenu")) {
				logger.info("User able to navigate to profile screen");
				extent.extentLoggerPass("", "User able to navigate to profile screen");
			} else {
				logger.info("User not able to navigate to profile screen");
				extent.extentLoggerFail("", "User not able to navigate to profile screen");
			}
			NavigateToHomPage();
		}
	}
	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1140(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1140_Logged in user - Check user is able to tap on bookmark icon ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosFavouriteTitleInBookmarkPage, "Favourite Title")) {
				logger.info("User able to navigate to favorites screen");
				extent.extentLoggerPass("", "User able to navigate to favorites screen");
			} else {
				logger.info("User not able to navigate to favorites screen");
				extent.extentLoggerFail("", "User not able to navigate to favorites screen");
			}
			NavigateToHomPage();
		}
	}
	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1141(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1141_Logged in user - Check user is able to see the UI of favorite screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Videos"), "Videos Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hashtags Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1138(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1138_Logged in user -Check  user is able to see the like counts in profile screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			WebElement Likes = findElement(IOSHipiNeoProfilePage.objiosTotalLikesInProfilePage);
			int LikesX = Likes.getLocation().getX();
			System.out.println(LikesX);
			int LikesY = Likes.getLocation().getY();
			System.out.println(LikesY);
			WebElement Followers = findElement(IOSHipiNeoProfilePage.objiosTotalFollowersInProfilePage);
			int FollowersX = Followers.getLocation().getX();
			System.out.println(FollowersX);
			int FollowersY = Followers.getLocation().getY();
			System.out.println(FollowersY);
			if ((FollowersX < LikesX) && (FollowersY == LikesY)) {
				logger.info("User able to see the like counts next to followers");
				extent.extentLoggerPass("", "User able to see the like counts next to followers");
			} else {
				logger.info("User not able to see the like counts next to followers");
				extent.extentLoggerFail("", "User not able to see the like counts next to followers");
			}
			NavigateToHomPage();
		}
	}
	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1139(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1139_Logged in user - Check user is able to see bookmark icon on profile");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			WebElement Editprofile = findElement(
					IOSHipiNeoProfilePage.objiosEditProfileBookmarkchatIcon("Edit Profile"));
			int EditprofileX = Editprofile.getLocation().getX();
			System.out.println(EditprofileX);
			int EditprofileY = Editprofile.getLocation().getY();
			System.out.println(EditprofileY);
			WebElement Bookmark = findElement(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab);
			int BookmarkX = Bookmark.getLocation().getX();
			System.out.println(BookmarkX);
			int BookmarkY = Bookmark.getLocation().getY();
			System.out.println(BookmarkY);
			if ((EditprofileX < BookmarkX) && (EditprofileY == BookmarkY)) {
				logger.info("User able to see the bookmark icon next to edit profile");
				extent.extentLoggerPass("", "User able to see the bookmark icon next to edit profile");
			} else {
				logger.info("User not able to see the bookmark icon next to edit profile");
				extent.extentLoggerFail("", "User not able to see the bookmark icon next to edit profile");
			}
			NavigateToHomPage();
		}
	}

	// 20/01/21//
	// k===============================================Profile=P2==================================================
	public void AddToFavouritesInSounds() throws Exception {
		clickOnFirstSearchedResult("Himanshi khurana", "No", "Sounds");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.TopTabInSideCategoriesResults("Sounds"), "Sounds Tab");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosAddToFavouritesInSoundTab, "Add To Favourites");
		waitTime(2000);
		NavigateToHomPage();
	}

	public void Profile_T1146(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1146_Logged in user - Check user is able to remove the sound from favorite tab");
			DeleteFavourite();
			AddToFavouritesInSounds();
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			if (!verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				logger.info("User able to remove favorites sound by tapping on Added to Favorites ");
				extent.extentLoggerPass("", "User able to remove favorites sound by tapping on Added to Favorites ");
			} else {
				logger.info("User not able to remove favorites sound by tapping on Added to Favorites ");
				extent.extentLoggerFail("",
						"User not able to remove favorites sound by tapping on Added to Favorites ");
			}
			NavigateToHomPage();
		}
	}

	// 20/01/21//
	// k===============================================Profile=P2==================================================

	public void Profile_T1147(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1147_Logged in user - Check whether sound is removed from favorite or not ");
			DeleteFavourite();
			AddToFavouritesInSounds();
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "ic bookmark");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Sounds"), "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosAddedToFavouritesInSoundTab, "Added To Favourites");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			if (!verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort Icon")) {
				logger.info("User not able to see the unfavorite sound in favorite screen");
				extent.extentLoggerPass("", "User not able to see the unfavorite sound in favorite screen");
			} else {
				logger.info("User able to see the unfavorite sound in favorite screen");
				extent.extentLoggerFail("", "User able to see the unfavorite sound in favorite screen");
			}
			NavigateToHomPage();
		}

	}

//--------N--jan-27--discover---------------------------------------------------------------------------------------------------	

	public void Discover_T1526_T1518(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1526_T1518_Guest User: Verify for user profile click and navigation");
			System.out.println("T1526_T1518_Guest User: Verify for user profile click and navigation");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			String Profilename = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"));
			waitTime(2000);
			extent.extentLogger("", "Profile name clicked :" + Profilename);
			click(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"),
					"First Profile in " + "Bollywood Zone");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosProfileNameBelowProfilePhotoInProfilePage, 20,
					"User name");
			waitTime(2000);
			String Profilename1 = getText(IOSHipiNeoProfilePage.objiosProfileNameBelowProfilePhotoInProfilePage);
			waitTime(2000);
			extent.extentLogger("", "Profile name in proflie page :" + Profilename1);
			if (Profilename.contains(Profilename1)) {
				logger.info(
						"Guest User is able to tap on any profile image and on click it is navigate to respective profile detail page.");
				extent.extentLoggerPass("Discover",
						"Guest User is able to tap on any profile image and on click it is navigate to respective profile detail page.");

			} else {
				logger.info(
						"Guest User is not able to tap on any profile image and on click it is not navigate to respective profile detail page.");
				extent.extentLoggerFail("Discover",
						"Guest User is not able to tap on any profile image and on click it is not navigate to respective profile detail page.");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1528(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1528_Guest User: Verify for follow button click on profile details page");
			System.out.println("T1528_Guest User: Verify for follow button click on profile details page");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objFollowButtononProfile, "Follow Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap follow button user is getting login pop up on the screen");
				extent.extentLoggerPass("Discover", "On tap follow button user is getting login pop up on the screen");

			} else {
				logger.info("On tap follow button user is not getting login pop up on the screen");
				extent.extentLoggerFail("Discover",
						"On tap follow button user is not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1530_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1530_Guest User- Verify Followers tab and its click on the user profile page");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap follow button user is getting login pop up on the screen");
				extent.extentLoggerPass("Discover", "On tap follow button user is getting login pop up on the screen");

			} else {
				logger.info("On tap follow button user is not getting login pop up on the screen");
				extent.extentLoggerFail("Discover",
						"On tap follow button user is not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// ==================10-01-2022===========================================

	public void Discover_T1531_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1531_Guest User- Verify Users followers list page");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap followers tab user is getting login pop up on the screen");
				extent.extentLoggerPass("Discover", "On tap followers tab user is getting login pop up on the screen");

			} else {
				logger.info("On tap follow button user is not getting login pop up on the screen");
				extent.extentLoggerFail("Discover",
						"On tap follow button user is not getting login pop up on the screen");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);

			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1540_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1540_Guest User - Verify for followes tab user list");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap followers tab user is getting login pop up");
				extent.extentLoggerPass("Discover", "On tap followers tab user is getting login pop up");

			} else {
				logger.info("On tap followers tab user is not getting login pop up");
				extent.extentLoggerFail("Discover", "On tap followers tab user is not getting login pop up");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1541_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1541_Guest user- Verify for search field on the user followers tab");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap followers tab user is getting login pop up");
				extent.extentLoggerPass("Discover", "On tap followers tab user is getting login pop up");

			} else {
				logger.info("On tap followers tab user is not getting login pop up");
				extent.extentLoggerFail("Discover", "On tap followers tab user is not getting login pop up");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1542_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1542_Guest User - Verify for click on search field");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap followers tab user is getting login pop up");
				extent.extentLoggerPass("Discover", "On tap followers tab user is getting login pop up");

			} else {
				logger.info("On tap followers tab user is not getting login pop up");
				extent.extentLoggerFail("Discover", "On tap followers tab user is not getting login pop up");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1543_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1543_Guest User - validate the auto suggestion list under followers tab respective to search input");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap followers tab user is getting login pop up");
				extent.extentLoggerPass("Discover", "On tap followers tab user is getting login pop up");

			} else {
				logger.info("On tap followers tab user is not getting login pop up");
				extent.extentLoggerFail("Discover", "On tap followers tab user is not getting login pop up");
			}
			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Cross Icon");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// =========================11-01-2022====================================================================
	// first user in rail=====
	public void navigateToFirstItemUnderAnyProfileTrayInDiscoverPage(String RailorTrayName, String FirstProfile)
			throws Exception {
		String Profilename = null;

		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosPageIndicator, "Banner");
		waitTime(2000);
		ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage(RailorTrayName), RailorTrayName);
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosRightFacingArrowForTray(RailorTrayName), RailorTrayName + "Arrow");
		waitTime(3000);

		if (FirstProfile.equalsIgnoreCase("Yes")) {

			Profilename = getText(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, " First Profile name");
			waitTime(3000);
			extent.extentLogger("", "Profile name clicked :" + Profilename);

			waitTime(2000);

		}

	}

	public void Discover_T1547_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1547_Guest User - Verify for following tab of user list page");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap following tab login pop up is appeared");
				extent.extentLoggerPass("Discover", "On tap following tab login pop up is appeared");

			} else {
				logger.info("On tap following tab login pop up is not appeared");
				extent.extentLoggerFail("Discover", "On tap following tab login pop up is not appeared");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1548_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1548_Guest User - Verify for search field on the user following tab");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap following tab login pop up is appeared");
				extent.extentLoggerPass("Discover", "On tap following tab login pop up is appeared");

			} else {
				logger.info("On tap following tab login pop up is not appeared");
				extent.extentLoggerFail("Discover", "On tap following tab login pop up is not appeared");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1549_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1549_Guest User - Verify for following tab user list");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap following tab login pop up is appeared");
				extent.extentLoggerPass("Discover", "On tap following tab login pop up is appeared");

			} else {
				logger.info("On tap following tab login pop up is not appeared");
				extent.extentLoggerFail("Discover", "On tap following tab login pop up is not appeared");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1550_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1550_Guest User - Verify following list user click and navigation");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login in to Hipi")) {
				logger.info("On tap following tab login pop up is appeared");
				extent.extentLoggerPass("Discover", "On tap following tab login pop up is appeared");

			} else {
				logger.info("On tap following tab login pop up is not appeared");
				extent.extentLoggerFail("Discover", "On tap following tab login pop up is not appeared");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1553_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1553_Logged In User -Verify for rail");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.NavigationBarTrayTitle("Bollywood Zone"),
					"Rail title Bollywood Zone");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosTrayselement("Bollywood Zone", 1),
					"Profile Name in Bollywood Zone");
			waitTime(3000);

			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1554(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1554_Logged In User -Verify swipe the rail to left and right");
			System.out.println("T1554_Logged In User -Verify swipe the rail to left and right");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Top Hipi Stars", "No");
			waitTime(3000);
			String expectedname1 = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			waitTime(3000);
			SwipeRailIOS(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Top Hipi Stars"), "Left");
			waitTime(3000);
			String actualname1 = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			waitTime(3000);
			if (expectedname1.equalsIgnoreCase(actualname1)) {
				logger.info("User not able to swipe the rail to left");
				extent.extentLoggerFail("", "User not able to swipe the rail to left");
			} else {
				logger.info("User able to swipe the rail to left");
				extent.extentLoggerPass("", "User able to swipe the rail to left");
			}
			SwipeRailIOS(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Top Hipi Stars"), "Right");
			waitTime(3000);
			String actualname2 = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Top Hipi Stars"));
			waitTime(3000);
			if (expectedname1.equalsIgnoreCase(actualname2)) {
				logger.info("User able to swipe the rail to Right");
				extent.extentLoggerPass("", "User able to swipe the rail to Right");
			} else {
				logger.info("User not able to swipe the rail to Right");
				extent.extentLoggerFail("", "User not able to swipe the rail to Right");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
		}
	}

	public void Discover_T1557(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1557_Logged In User -Verify for Profile click navigation");
			System.out.println("T1557_Logged In User -Verify for Profile click navigation");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			String Profilename = getText(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"));
			waitTime(2000);
			extent.extentLogger("", "Profile name clicked :" + Profilename);
			click(IOSHiPiNeoDiscoverPage.FirstItemNameInTrayInDiscoverPage("Bollywood Zone"),
					"First Profile in " + "Bollywood Zone");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosProfileNameBelowProfilePhotoInProfilePage, 20,
					"User name");
			waitTime(2000);
			String Profilename1 = getText(IOSHipiNeoProfilePage.objiosProfileNameBelowProfilePhotoInProfilePage);
			waitTime(2000);
			extent.extentLogger("", "Profile name in proflie page :" + Profilename1);
			if (Profilename.contains(Profilename1)) {
				logger.info("On tap profile from the rail user is navigated to respective profile details page");
				extent.extentLoggerPass("Discover",
						"On tap profile from the rail user is navigated to respective profile details page");

			} else {
				logger.info("On tap profile from the rail user is not navigated to respective profile details page");
				extent.extentLoggerFail("Discover",
						"On tap profile from the rail user is not navigated to respective profile details page");
			}

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// =================================12-01-2022=======================================================

	public void Discover_T1559_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1559_Logged In User -Verify for user profile list Page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"),
					"Rail title Bollywood Zone");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"),
					"Arrow Mark");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name with list");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(2), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(3), "Follow Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(4), "Follow Button")) {
				logger.info("user profile list page");
				extent.extentLoggerPass("", "user profile list page");
			} else {
				logger.info("user profile is not list page");
				extent.extentLoggerFail("", "user profile is not list page");
			}
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
		}
	}

	public void Discover_T1560_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1560_Logged In User -Verify for user profile list Page contains");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"),
					"Rail title Bollywood Zone");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"),
					"Arrow Mark");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name with list");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosusernamelist(1), "username");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosusernamelist(3), "follower count");
			waitTime(2000);
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Discover_T1562_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1562_Logged In User: Verify for click on profile image and name from the user list page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"),
					"Rail title Bollywood Zone");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"),
					"Arrow Mark");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name with list");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosusernamelist(1), "username");
			waitTime(3000);
			String userNameInList = getText(IOSHipiNeoProfilePage.objiosusernamelist(2));
			System.out.println(userNameInList);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "Profile Image");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosProfileNameBelowProfilePhotoInProfilePage, 20,
					"User name");
			waitTime(2000);
			String Profilename1 = getText(IOSHipiNeoProfilePage.objiosProfileNameBelowProfilePhotoInProfilePage);
			waitTime(2000);
			extent.extentLogger("", "Profile name in proflie page :" + Profilename1);
			if (userNameInList.contains(Profilename1)) {
				logger.info("On tap profile image  user is navigated to profile details page");
				extent.extentLoggerPass("Discover", "On tap profile image  user is navigated to profile details page");

			} else {
				logger.info("On tap profile image  user is not navigated to profile details page");
				extent.extentLoggerFail("Discover",
						"On tap profile image  user is not navigated to profile details page");
			}
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// ============================================13-01-2022=============================================================

	// navigate to search reasult

	public void clickOnFirstSearchedResult(String text, String ClickSearch, String ToporUsers) throws Exception {
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(5000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, text, text);
		waitTime(4000);
//		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
//		waitTime(3000);
		if (ClickSearch.equalsIgnoreCase("Yes")) {
			//click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
			waitTime(3000);
			keyboardaction("Enter");
			waitTime(3000);
			if(verifyElementExist(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button")) {
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
				waitTime(3000);
			}
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage(ToporUsers), ToporUsers);
			waitTime(3000);

			if (ToporUsers.equalsIgnoreCase("SOUNDS")) {
				click(IOSHiPiNeoDiscoverPage.UserNameInSoundsScreen(text, 1), text);
				waitTime(3000);
			} else {
				click(IOSHiPiNeoDiscoverPage.objiosFirstSearchedResultInDiscoverPage(text), "First result");
			}
			waitTime(3000);
		}

	}

	public void Discover_T1469(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1469_Logged in user - Check user is navigated to discover by tapping back button in serach bar");
			System.out.println(
					"T1469_Logged in user - Check user is navigated to discover by tapping back button in serach bar");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "in Search field");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon")) {
				logger.info("On tap profile image  user is navigated to profile details page");
				extent.extentLoggerPass("Discover", "On tap profile image  user is navigated to profile details page");

			} else {
				logger.info("On tap profile image  user is not navigated to profile details page");
				extent.extentLoggerFail("Discover",
						"On tap profile image  user is not navigated to profile details page");
			}
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1486(String userType) throws Exception {
		extent.HeaderChildNode(
				"T1486_Verify if user able to see and click on See more icon at the right corner of the rail");
		System.out
				.println("T1486_Verify if user able to see and click on See more icon at the right corner of the rail");
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(2000);
		type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "in Search field");
		waitTime(2000);
		click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
		waitTime(3000);
		String username = getText(IOSHiPiNeoDiscoverPage.objiosFirstSearchedResultInDiscoverPage("Himanshi Khurana"));
		System.out.println(username);
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSeeeMoreButton, "See more");
		waitTime(3000);
		String username1 = getText(IOSHiPiNeoDiscoverPage.objiosFirstSearchedResultInDiscoverPage("Himanshi Khurana"));
		System.out.println(username1);
		if (username.contains(username1)) {
			logger.info("By clicking on See More option user landed on the detailed info of the respective rail");
			extent.extentLoggerPass("Discover",
					"By clicking on See More option user landed on the detailed info of the respective rail");

		} else {
			logger.info("By clicking on See More option user not landed on the detailed info of the respective rail");
			extent.extentLoggerFail("Discover",
					"By clicking on See More option user not landed on the detailed info of the respective rail");
		}
		BackButton();
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

	}

	public void Discover_T1468_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1468_Logged in user - Check user is able to see hashtag  view count under hashtag tab");

			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi Khurana", "in Search field");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Hashtags"), "Hashtags Tab");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.HastagInDiscoverSearchTab(1), "Hashtag one");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosViewsInHashtagePage, "Number of views")) {
				logger.info("User is able see view counts of hashtag under hashtag tab");
				extent.extentLoggerPass("Discover", "User is able see view counts of hashtag under hashtag tab");

			} else {
				logger.info("User is  not able see view counts of hashtag under hashtag tab");
				extent.extentLoggerFail("Discover", "User is  not able see view counts of hashtag under hashtag tab");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}

	}

	// profile/////=-====-=-=-=-=-=-=-=

	public void Profile_T1211_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1211_Logged in user - Check user is navigate to facebook app");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Contact popup")) {
				click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "ok CTA");
			}
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosInviteFreinds, 20, "Invite Freinds page");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("Facebook"),
					"Facebook app")) {
				logger.info("FaceBook App is Present in device");
				click(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("Facebook"), "Facebook app");

			} else {

				logger.info("FaceBook App is  not Present in device");
			}

			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosFacebookApp, 20, "FaceBook Page")) {
				logger.info("User is navigated to facebook app");
				extent.extentLoggerPass("Profile", "User is navigated to facebook app");

			} else {
				logger.info("User is not navigated to facebook app");
				extent.extentLoggerFail("Profile", "User is not navigated to facebook app");
			}
			if (verifyElementExist(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage,
					"Done the Description")) {
				click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			}
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosNextBtn, "Next")) {
				click(IOSHipiNeoProfilePage.objiosNextBtn, "Next Button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosShareBtn, "Share button");
				waitTime(3000);
			}
			waitForElementDisplayediOS(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, 20, "Back button");

			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_T1180_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1180_Logged in user - Check UI of find friends screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindContactsInFindFriends, "Find Contacts");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}
	}

	public void Profile_T1183_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1183_Logged in user -  Check user is able to click on allow cta Allow Zee5 HiPi access your contact");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Contact popup")) {
				click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "ok CTA");

			}

			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosInviteFreinds, 20, "Invite Freinds page")) {
				logger.info("Pop-up is disappeared and users Friends list is displayed ");
				extent.extentLoggerPass("Profile", "Pop-up is disappeared and users Friends list is displayed ");

			} else {
				logger.info("Pop-up is not disappeared and users Friends list is not displayed ");
				extent.extentLoggerFail("Profile",
						"Pop-up is not disappeared and users Friends list is not displayed ");
			}
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}
	}

	public void Profile_T1188_T1192_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1188_T1192_Logged in user - Check whether permission pop-up gets displayed or not");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Contact popup")) {
				logger.info("hipi Would Like to Access Your Contacts PopUp is displayed.");
				extent.extentLoggerPass("Profile", "hipi Would Like to Access Your Contacts PopUp is displayed.");

			} else {
				logger.info("hipi Would Like to Access Your Contacts PopUp is not displayed.");
				extent.extentLoggerFail("Profile", "hipi Would Like to Access Your Contacts PopUp is not displayed.");
			}
			click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "ok CTA");
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_T1196_T1199_T1203_T1207_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1196_T1199_T1203_T1207_Logged in user - Check whether permission pop-up gets displayed or not");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosFindContactsInFindFriends, "Find Contacts");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Contact popup")) {
				logger.info("hipi Would Like to Access Your Contacts PopUp is displayed.");
				extent.extentLoggerPass("Profile", "hipi Would Like to Access Your Contacts PopUp is displayed.");

			} else {
				logger.info("hipi Would Like to Access Your Contacts PopUp is not displayed.");
				extent.extentLoggerFail("Profile", "hipi Would Like to Access Your Contacts PopUp is not displayed.");
			}
			click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "ok CTA");
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_T1198_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1198_Logged in user -  Check user is able to click on allow cta Allow Zee5 HiPi access your contact");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosAddPerson, "Add Person");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFindFriends, "Find Friends");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosFindContactsInFindFriends, "Find Contacts");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Contact popup")) {
				click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "ok CTA");

			}

			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosContactPage, 20, "Contacts page")) {
				logger.info("Pop-up is disappeared and users Friends list is displayed ");
				extent.extentLoggerPass("Profile", "Pop-up is disappeared and users Friends list is displayed ");

			} else {
				logger.info("Pop-up is not disappeared and users Friends list is not displayed ");
				extent.extentLoggerFail("Profile",
						"Pop-up is not disappeared and users Friends list is not displayed ");
			}
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

		}
	}

	// =====================================19-01-222---------------------------------------------------------------------

	public void Profile_1172_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1172_Logged in user -Check user is able to see share  button in private video or not");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 100, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoButtonInPostScreen, "Who Can View This Video Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Private"), "Private option");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 10, " posted tost message");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(2000);

			if (!waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage, 5,
					"Publishing In Process Message")) {
				for (int i = 1; i <= 20; i++) {
					if (!verifyElementExist(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage,
							"Publishing In Process Message")) {
						PartialSwipeiOS("DOWN", i);

					} else {
						break;
					}

				}

			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button")) {
				logger.info("Share option of the private video is displayed ");
				extent.extentLoggerPass("", "Share option of the private video is displayed ");
			} else {
				logger.info("Share option of the private video is not displayed ");
				extent.extentLoggerFail("", "Share option of the private video is not displayed ");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1171_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1171_Logged in user - Check  whether comment screen get closed by tapping cross button in private video");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton,
					"Cross Icon in comment screen");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "Cross Icon");
			if (!verifyElementExist(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "Cross Icon")) {
				logger.info("Comment screen is disappeared by tapping on cross button");
				extent.extentLoggerPass("", "Comment screen is disappeared by tapping on cross button");
			} else {
				logger.info("Comment screen is not disappeared by tapping on cross button");
				extent.extentLoggerFail("", "Comment screen is not disappeared by tapping on cross button");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// -------------------------------20-01-2022====================

	public void Profile_1168_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1168_Logged in user - Check user can  like private video or not  ");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(3500);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			String beforelike = getText(IOSHipiNeoHomePage.objiosTotalNumberOfLikes);
			System.out.println(beforelike);
			extent.extentLogger("", "Before number of likes "+beforelike);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(3000);
			String afterlike = getText(IOSHipiNeoHomePage.objiosTotalNumberOfLikes);
			System.out.println(afterlike);
			extent.extentLogger("", " number of likes after clicking on like button "+afterlike);
			if (beforelike.contentEquals(afterlike)) {
				logger.info("User is not able to like the private video");
				extent.extentLoggerFail("", "User is not able to like the private video");
			} else {
				logger.info("User is able to like the private video");
				extent.extentLoggerPass("", "User is able to like the private video");
			}
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1166_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1166_Logged in user - Check user can see the delete option in private video ");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete option")) {
				logger.info("User is able see the delete option on private video");
				extent.extentLoggerPass("", "User is able see the delete option on private video");
			} else {
				logger.info("User is not able see the delete option on private video");
				extent.extentLoggerFail("", "User is not able see the delete option on private video");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1159_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1159_Logged in user - Check user is able to see all  his private video");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(6000);
			List<WebElement> co = findElements(IOSHipiNeoProfilePage.objiosVideosInprivateButton);
			int totalvedios = co.size();
			System.out.println(totalvedios);
			if (totalvedios > 0) {
				logger.info("All private videos are displayed under private tab ");
				extent.extentLoggerPass("", "All private videos are displayed under private tab ");
			} else {
				logger.info("All private videos are not displayed under private tab ");
				extent.extentLoggerFail("", "All private videos are not displayed under private tab ");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1156_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1156_Logged in user - Check if there is an  option to delete an published videos");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosCreatedVideoInProfilePage(1));
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos in profile screen");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete option")) {
				logger.info("User is getting pop-up displayed with option delete");
				extent.extentLoggerPass("", "User is getting pop-up displayed with option delete");
			} else {
				logger.info("User is not getting pop-up displayed with option delete");
				extent.extentLoggerFail("", "User is not getting pop-up displayed with option delete");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1161_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1161_Logged in user - Check user is able to save the private video");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "Videos In private Button");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSsave_video, "Save video");

//				if(verifyElementExist(IOSHipiNeoHomePage.objiosNotificationAllowAccesssToPhotosPopup,"Save access")){
//					
//					click(IOSHipiNeoHomePage.objiosSaveVideoAccessPopUpAllowButton,"Allow Access to All Photos");
//				}else{
//					logger.info("Allow Access to All Photos popup is not displayed");
//				}
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSVideo_saved, 10, "Video Saved")) {
				logger.info("User is able to save video in his local memory by tapping on save video ");
				extent.extentLoggerPass("", "User is able to save video in his local memory by tapping on save video ");
			} else {
				logger.info("User is not able to save video in his local memory by tapping on save video ");
				extent.extentLoggerFail("",
						"User is not able to save video in his local memory by tapping on save video ");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1157_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1157_Logged in user - Check if there is an  option to delete an published videos");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosCreatedVideoInProfilePage(1));
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosCreatedVideoInProfilePage(1),
					"Videos in profile screen");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			String sound = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			System.out.println(sound);
			extent.extentLogger("", "The name the sound used is : " + sound);
			logger.info("The name the sound used is : " + sound);
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete option");
			click(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosDeleteButtonYes, "Yes button");
			waitTime(5000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosCreatedVideoInProfilePage(1),
					"Videos in profile screen");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			String sound1 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			System.out.println(sound1);
			extent.extentLogger("", "The name the sound used is : " + sound1);
			logger.info("The name the sound used is : " + sound1);
			if (sound.contentEquals(sound1)) {
				logger.info("Video is not deleted by tapping on yes");
				extent.extentLoggerFail("", "Video is not deleted by tapping on yes");
			} else {
				logger.info("Video is deleted by tapping on yes ");
				extent.extentLoggerPass("", "Video is deleted by tapping on yes ");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1154_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1154_Logged in user - Check if  tapping back button user will navigate to videos listing");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosCreatedVideoInProfilePage(1));
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosCreatedVideoInProfilePage(1),
					"Videos in profile screen");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sound used for video");
			extent.extentLogger("", "User is directed to full-screen player preview.");
			logger.info("User is directed to full-screen player preview.");
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage,
					"Private Video Button")) {
				logger.info("User is redirected to videos listing ");
				extent.extentLoggerPass("", "User is redirected to videos listing ");
			} else {
				logger.info("User is not redirected to videos listing ");
				extent.extentLoggerFail("", "User is not redirected to videos listing ");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1074_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1074_Logged in user - Check if on tapping 'cross' icon in 'search text field' entered text is removed and user is redirected back to followers list screen");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Follower"), "Follower Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosZeroFollowerTab, "Zero followers")) {
				logger.info("The user is haveing zero followers");
//							verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage,
//									"Search Field in Followers page");
//							waitTime(3000);
//							String before = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
//							extent.extentLogger("", "Text present in search field before Entering" + before);
//							logger.info("Text present in search field before Entering" + before);
//							type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Igs", "Search Field in Followers page");
//							waitTime(3000);
//							String during = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
//							extent.extentLogger("", "Text present in search field after Entering" + during);
//							logger.info("Text present in search field after Entering" + during);
//							click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
//							waitTime(3000);
//							String after = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
//							extent.extentLogger("", "Text present in search field after taping on cross icon" + after);
//							logger.info("Text present in search field after taping on cross icon" + after);
//							if (before.contentEquals(after)
//									&& verifyElementExist(IOSHipiNeoProfilePage.objiosZeroFollowerScreen, "No follower icon")) {
//								logger.info(
//										"On tapping cross icon in search text field, entered text is removed and user is redirected to follower list screen.");
//								extent.extentLoggerPass("",
//										"On tapping cross icon in search text field, entered text is removed and user is redirected to follower list screen.");
//							} else {
//								logger.info(
//										"On tapping cross icon in search text field, entered text is not removed and user is not redirected to follower list screen.");
//								extent.extentLoggerFail("",
//										"On tapping cross icon in search text field, entered text is not removed and user is not redirected to follower list screen.");
//							}
//							BackButton();
//							waitTime(3000);
//							verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
			} else {
				if (verifyElementExist(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button")) {
					click(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
					waitTime(3000);
				} else {
					logger.info("following button is displayed");
				}
				String name = getText(IOSHipiNeoProfilePage.objiosFirstFollowingUserNameInFollowersFollowingTab);
				System.out.println(name);
				waitTime(2000);
				verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage,
						"Search Field in Followers page");
				waitTime(3000);
				String before = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
				extent.extentLogger("", "Text present in search field before Entering " + before);
				logger.info("Text present in search field before Entering " + before);
				type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Igs", "Search Field in Followers page");
				waitTime(3000);
				String during = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
				extent.extentLogger("", "Text present in search field after Entering " + during);
				logger.info("Text present in search field after Entering " + during);
				waitTime(3000);
				click(IOSHiPiNeoDiscoverPage.objCloseIconInDiscoverPage, "Cross Icon");
				waitTime(3000);
				String after = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage);
				extent.extentLogger("", "Text present in search field after taping on cross icon " + after);
				logger.info("Text present in search field after taping on cross icon " + after);
				String name1 = getText(IOSHipiNeoProfilePage.objiosFirstFollowingUserNameInFollowersFollowingTab);
				System.out.println(name1);
				if ((before.contentEquals(after)) | (name.contentEquals(name1))) {
					logger.info(
							"On tapping cross icon in search text field, entered text is removed and user is redirected to follower list screen.");
					extent.extentLoggerPass("",
							"On tapping cross icon in search text field, entered text is removed and user is redirected to follower list screen.");
				} else {
					logger.info(
							"On tapping cross icon in search text field, entered text is not removed and user is not redirected to follower list screen.");
					extent.extentLoggerFail("",
							"On tapping cross icon in search text field, entered text is not removed and user is not redirected to follower list screen.");
				}
				BackButton();
				waitTime(3000);
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
			}

		}
	}

	public void Profile_1083_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1083_Logged in user - Check if on tapping 'cross' icon in 'search text field' entered text is removed and user is redirected back to following list screen");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosZeroFollowingTab, "Zero following")) {
				logger.info("The user is haveing zero following");

			} else {
				if (verifyElementExist(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button")) {
					click(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
					waitTime(3000);
				} else {
					logger.info("following button is displayed");
				}
				String name = getText(IOSHipiNeoProfilePage.objiosFirstFollowingUserNameInFollowersFollowingTab);
				System.out.println(name);
				verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage,
						"Search Field in Following page");
				waitTime(3000);
				String before = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
				extent.extentLogger("", "Text present in search field before Entering " + before);
				logger.info("Text present in search field before Entering " + before);
				type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Igs", "Search Field in Following page");
				waitTime(3000);
				String during = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
				extent.extentLogger("", "Text present in search field after Entering " + during);
				logger.info("Text present in search field after Entering " + during);
				waitTime(3000);
				click(IOSHiPiNeoDiscoverPage.objCloseIconInDiscoverPage, "Cross Icon");
				waitTime(3000);
				String after = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
				extent.extentLogger("", "Text present in search field after taping on cross icon " + after);
				logger.info("Text present in search field after taping on cross icon " + after);
				String name1 = getText(IOSHipiNeoProfilePage.objiosFirstFollowingUserNameInFollowersFollowingTab);
				System.out.println(name1);
				if ((before.contentEquals(after)) | (name.contentEquals(name1))) {
					logger.info(
							"On tapping cross icon in search text field, entered text is removed and user is redirected to following list screen.");
					extent.extentLoggerPass("",
							"On tapping cross icon in search text field, entered text is removed and user is redirected to following list screen.");
				} else {
					logger.info(
							"On tapping cross icon in search text field, entered text is not removed and user is not redirected to following list screen.");
					extent.extentLoggerFail("",
							"On tapping cross icon in search text field, entered text is not removed and user is not redirected to following list screen.");
				}
				BackButton();
				waitTime(3000);
				verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
			}

		}
	}

	// ===============================21-01-22===-------------------------------------------------------------

	public void Profile_1105_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1105_Logged in user- Check if user is able to view all his Draft videos");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPulicTabInDraftScreen, "Public Tab");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage);
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video");
			List<WebElement> count = findElements(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage);
			int totalvedios = count.size();
			System.out.println(totalvedios);
			BackButton();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "create button");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosRecordButon, 200, "recording icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 100, "next button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "next button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objSaveAsDraftButton, 50, "save as draft");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "save as draft");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosSavedAsDraft, 100,
					" Toast message video saved as draft");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video");
			List<WebElement> count1 = findElements(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage);
			int totalvedios1 = count1.size();
			System.out.println(totalvedios1);
			if (totalvedios == totalvedios1) {
				logger.info("User is not able to view all his Draft videos.");
				extent.extentLoggerFail("", "User is not able to view all his Draft videos.");
			} else {
				logger.info("User is able to view all his Draft videos.");
				extent.extentLoggerPass("", "User is able to view all his Draft videos.");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1106_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1106_Logged in user- Check if on tapping video will navigate the user to video uploading screen(post screen)");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPulicTabInDraftScreen, "Public Tab");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage);
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen, "First Draft Video");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen, "First Draft Video");
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 300, "Post button")) {
				logger.info("User is navigated to the uploading screen(post screen).");
				extent.extentLoggerPass("", "User is navigated to the uploading screen(post screen).");
			} else {
				logger.info("User is not navigated to the uploading screen(post screen).");
				extent.extentLoggerFail("", "User is not navigated to the uploading screen(post screen).");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1111_T1119_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1111_Logged in user- Check if drafted video is not deleted when he tap on No");

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "create button");
			PopupOfCameraAndMicrophone();
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosRecordButon, 200, "recording icon");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 100, "next button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "next button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 100, "Comment Box");
			click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "sky", "Comment Box");
			waitTime(3000);
			String Title = getText(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo);
			System.out.println(Title);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "save as draft");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosSavedAsDraft, 100,
					" Toast message video saved as draft");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage);
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen, "First Draft Video");
			waitTime(3000);
			String name = getText(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen);
			System.out.println(name);
			click(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete option");
			click(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosNoInDeleteDraft, "No button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button")) {
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			} else {
				verifyElementPresent(IOSHipiNeoProfilePage.objiosDraftPageInProfilePage, "Draft Page");
			}
			verifyElementExist(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen, "First Draft Video");
			waitTime(3000);
			String name1 = getText(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen);
			System.out.println(name1);
			if (name.contentEquals(name1)) {
				logger.info("Drafted video is not deleted when user tap on No .");
				extent.extentLoggerPass("", "Drafted video is not deleted when user tap on No .");
			} else {
				logger.info("Drafted video is deleted when user tap on No .");
				extent.extentLoggerFail("", "Drafted video is deleted when user tap on No .");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_1110_T1118_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1110_Logged in user - Check if drafted video is deleted when user taps on Yes on the delete popup");

			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			Dimension XY = getDriver().manage().window().getSize();
			int height = XY.height / 2;
			System.out.println(height);
			WebElement draft = findElement(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage);
			int draftY = draft.getLocation().getY();
			System.out.println(draftY);
			if (draftY > height) {
				extent.extentLogger("", "Video tab is selected by deafult on the lower half of the screen.");
				logger.info("Video tab is selected by deafult on the lower half of the screen.");
			} else {
				extent.extentLogger("", "Video tab is not selected by deafult on the lower half of the screen.");
				logger.info("Video tab is not selected by deafult on the lower half of the screen.");
			}
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Drafts videos in profile page");
			waitTime(3000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen, "First Draft Video");
			waitTime(3000);
			String name = getText(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen);
			System.out.println(name);
			click(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "Draft Video");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(2000);
			verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete option");
			click(IOSHipiNeoProfilePage.objiosDraftVideoDeleteButton, "Delete button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosDeleteButtonYes, "Yes button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button")) {
				click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			} else {
				waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosDraftPageInProfilePage, 100, "Draft Page");
			}
			verifyElementExist(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen, "First Draft Video");
			waitTime(3000);
			String name1 = getText(IOSHipiNeoProfilePage.objiosFirstVideoInDraftScreen);
			System.out.println(name1);
			if (!name.contentEquals(name1)) {
				logger.info("Drafted video is deleted when tap on yes button, and it is not visible in draft tab");
				extent.extentLoggerPass("",
						"Drafted video is deleted when tap on yes button, and it is not visible in draft tab");
			} else {
				logger.info("Drafted video is not deleted when tap on yes button, and it is visible in draft tab");
				extent.extentLoggerFail("",
						"Drafted video is not deleted when tap on yes button, and it is visible in draft tab");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Profile_T1155_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1155_Logged in user  - Check if video in publishing mode displays 'Publishing in process' label along with the video thumbnail ");
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
			waitTime(2000);
			PopupOfCameraAndMicrophone();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosRecordButon, "Create Icon");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 100, "Next Button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(3000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, 100, "Comment Box");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 10, " posted tost message");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage,
					"Publishing In Process Message")) {
				logger.info("Publishing in process' label is visible along with the video thumbnail ");
				extent.extentLoggerPass("", "Publishing in process' label is visible along with the video thumbnail ");
			} else {
				logger.info("Publishing in process' label is  not visible along with the video thumbnail ");
				extent.extentLoggerFail("",
						"Publishing in process' label is  not visible along with the video thumbnail ");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	// S------------------------------jan-27----------------------------------------------------------------

	public void Discover_T1555(String userType) throws Exception {
		extent.HeaderChildNode("T1555_Logged In User- Verify User profile on rail");
		verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
	}

	public void Discover_T1578_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1578_Logged In User - Verify followers list user click and navigation");
			System.out.println("T1578_Logged In User - Verify followers list user click and navigation");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosPageIndicator, "Banner");
			waitTime(2000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			String FirstFollower = getText(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList);
			System.out.println(FirstFollower);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList, "First Follower");
			waitTime(2000);

			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name in profile page");
			waitTime(2000);
			String UserName = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(UserName);
			waitTime(2000);
			if (FirstFollower.contentEquals(UserName)) {
				logger.info("user from the follower list it navigates to that respective user profile page");
				extent.extentLoggerPass("",
						"user from the follower list it navigates to that respective user profile page");
			} else {
				logger.info("user from the follower list is not navigates to that respective user profile page");
				extent.extentLoggerFail("",
						"user from the follower list is not navigates to that respective user profile page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
		}
	}

	public void Discover_T1589_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1589__Logged In User - Verify followers list user click and navigation");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosPageIndicator, "Banner");
			waitTime(2000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			String FirstFollower = getText(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList);
			System.out.println(FirstFollower);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList, "First Follower");
			waitTime(2000);

			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name in profile page");
			waitTime(2000);
			String UserName = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(UserName);
			waitTime(2000);
			if (FirstFollower.contentEquals(UserName)) {
				logger.info("user from the follower list it navigates to that respective user profile page");
				extent.extentLoggerPass("",
						"user from the follower list it navigates to that respective user profile page");
			} else {
				logger.info("user from the follower list is not navigates to that respective user profile page");
				extent.extentLoggerFail("",
						"user from the follower list is not navigates to that respective user profile page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
		}
	}

	public void Discover_T1588(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1588_Logged In User- Verify for followers tab user list");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosPageIndicator, "Banner");
			waitTime(2000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(2000);
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(2), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(3), "Follow Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(4), "Follow Button")) {
				logger.info("User should able to see all the follwers of user on the respective tab");
				extent.extentLoggerPass("", "User should able to see all the follwers of user on the respective tab");
			} else {
				logger.info("User should not able to see all the follwers of user on the respective tab");
				extent.extentLoggerFail("",
						"User should not able to see all the follwers of user on the respective tab");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	public void Discover_T1587(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1587_Logged In User- Verify for search field on the user followers tab");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
			waitTime(3000);
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Follower Search Field");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	/////////////////////////////////////////// 6-1-22///////////////////////////////////////////////////
	public void Discover_T1586_T1579_T1570(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1586_T1579_T1569_T1570 _Logged In User - Verify for followers tab of user list page");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(2), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(3), "Follow Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(4), "Follow Button")) {
				logger.info("followers tab user will get list of followers list of that user on his followers page");
				extent.extentLoggerPass("",
						"followers tab user will get list of followers list of that user on his followers page");
			} else {
				logger.info("followers tab user will get list of followers list of that user on his followers page");
				extent.extentLoggerFail("",
						"followers tab user will get list of followers list of that user on his followers page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	public void Discover_T1569_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1569_Logged In User - Verify for followers tab of user list page");
			System.out.println("T1569_Logged In User - Verify for followers tab of user list page");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(2), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(3), "Follow Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(4), "Follow Button")) {
				logger.info("followers tab user will get list of followers list of that user on his followers page");
				extent.extentLoggerPass("",
						"followers tab user will get list of followers list of that user on his followers page");
			} else {
				logger.info("followers tab user will get list of followers list of that user on his followers page");
				extent.extentLoggerFail("",
						"followers tab user will get list of followers list of that user on his followers page");
			}
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	public void Discover_T1575(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1575-Logged In User - Verify for click on search field");
			System.out.println("T1575-Logged In User - Verify for click on search field");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "sunny leone", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "user name");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowingInUserProfile, "Following in user page");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "sunny", "Text");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			String Firstname = getText(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage);
			System.out.println(Firstname);
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	public void Discover_T1583(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1583_Logged In User - Verify for User can search any followers user from the listd");
			verifyElementExist(IOSHipiNeoHomePage.objiosFollowIconInHomePage, "Home Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
			waitTime(3000);
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowerInUserProfile, "Followers page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage, "user", "Search Field");
			waitTime(2000);
			String username = getText(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage);
			System.out.println(username);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList, "First User");
			waitTime(2000);
			String FirstFollower = getText(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList);
			System.out.println(FirstFollower);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	//////////////////////////////// 7-1-22//////////////////////////////////////////
	public void Discover_T1574_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1574_Logged In User- Verify for search field on the user following tab");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "kundali bhagya", "Text");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "user name");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowingInUserProfile, "Following in user page");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	public void Discover_T1581_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1581_Logged In User- Verify for search field on the user following tab");
			System.out.println("T1581_Logged In User- Verify for search field on the user following tab");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "sunny leone", "Text");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "user name");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowingInUserProfile, "Following in user page");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowingPage, "Search Field");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");

		}
	}

	public void Discover_T1585(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1585_Logged In User - Verify following list user click and navigation");
			System.out.println("T1585_Logged In User - Verify following list user click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "sunny leone", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "user name");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowingInUserProfile, "Following in user page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage, "Star", "Text");
			waitTime(2000);
			String FirstFollower = getText(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList);
			System.out.println(FirstFollower);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList, "First User");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name in profile page");
			waitTime(2000);
			String UserName = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(UserName);
			waitTime(2000);
			if (FirstFollower.contentEquals(UserName)) {
				logger.info("user from the following list it navigate to user profile page");
				extent.extentLoggerPass("", "user user from the following list it navigate to user profile page");
			} else {
				logger.info("user from the following list is not navigate to user profile page");
				extent.extentLoggerFail("", "user from the following list is not navigate to user profile page");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Discover_T1577(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1577_Logged In User- Verify for User can search any following user from the list");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "kundali bhagya", "Text");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "user name");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFollowingInUserProfile, "Following in user page");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage, "Search Field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInFollwersPage, "bhagya", "Text");
			waitTime(2000);
			String username = getText(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList);
			System.out.println(username);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosFirstFollwerInUserList, "First User");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name in profile page");
			waitTime(2000);
			String UserName = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(UserName);
			waitTime(2000);
			if (username.contentEquals(UserName)) {
				logger.info(
						"user can type on search field under following tab and result should display respective to the search data");
				extent.extentLoggerPass("",
						"user can type on search field under following tab and result should display respective to the search data");
			} else {
				logger.info(
						"user can not type on search field under following tab and result should display respective to the search data");
				extent.extentLoggerFail("",
						"user can not type on search field under following tab and result should display respective to the search data");
			}
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	///////////////////////////////////////// 10-1-22/////////////////////////////////////////////////////////////////////////////

	public void Discover_T1571(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1571_Logged In User - Verify users Following /Followers Page");

			clickOnFirstSearchedResult("Himanshikhurana", "Yes", "Users");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers  Tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage, "Search Field");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowUsersNameDetailsInFollowerScreen, "User Name");
			waitTime(3000);
			String text1 = getText(IOSHipiNeoProfilePage.objiosFollowerTabInFollowingScreen);
			String count = text1.substring(10, 12);
			int count1 = Integer.parseInt(count);
			System.out.println(count);
			System.out.println(count1);
			int i = 0;
			if (i <= count1) {
				logger.info("Followers Tab with count is displayed");
				extent.extentLoggerPass("", "Followers Tab with count is displayed");
			} else {
				logger.info("Followers Tab with count is not displayed");
				extent.extentLoggerFail("", "Followers Tab with count is not displayed");
			}
			String text2 = getText(IOSHipiNeoProfilePage.objiosFollowingTabInFollowingScreen);
			String count2 = text2.substring(10, 11);
			System.out.println(count2);
			int count3 = Integer.parseInt(count2);
			System.out.println(count3);
			int q = 0;
			if (q <= count3) {
				logger.info("Following Tab with count is displayed");
				extent.extentLoggerPass("", "Following Tab with count is displayed");
			} else {
				logger.info("Following Tab with count is not displayed");
				extent.extentLoggerFail("", "Following Tab with count is not displayed");
			}
			int j = 0;
			List<WebElement> size1 = findElements(IOSHipiNeoProfilePage.objiosListOfFollowBtnInFollowerScreen);
			int size2 = size1.size();
			System.out.println(size2);
			if (j < size2) {
				logger.info("list of followers with follow button is displayed");
				extent.extentLoggerPass("", "list of followers with follow button is displayed");
			} else {
				logger.info("list of followers with follow button is not displayed");
				extent.extentLoggerFail("", "list of followers with follow button is not displayed");
			}
			click(IOSHipiNeoProfilePage.objiosFollowingTabInFollowingScreen, "Following Tab");
			waitTime(2000);

			List<WebElement> size3 = findElements(IOSHipiNeoProfilePage.objiosFollowingBtnInFollowingScreen);
			int size4 = size3.size();
			System.out.println(size4);
			if (j < size4) {
				logger.info("list of Following with follow button is displayed");
				extent.extentLoggerPass("", "list of Following with follow button is displayed");
			} else {
				logger.info("list of Following with follow button is not displayed");
				extent.extentLoggerFail("", "list of Following with follow button is not displayed");
			}
			NavigateToHomPage();
		}
	}

	public void Discover_T1565(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1565 _Logged In User: Verify for user profile click and navigation");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosPageIndicator, "Banner");
			waitTime(2000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"), "Bollywood Zone");
			waitTime(2000);
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.ProfileImageInAnyTray("Bollywood Zone", 1), "user profile");
			waitTime(4000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name");
			waitTime(3000);
			String user1 = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(user1);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Discover_T1524_T1563(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1524_Guest User: Verify for back button on user profile list page");
			System.out.println("T1524_Guest User: Verify for back button on user profile list page");
		} else {
			extent.HeaderChildNode("T1563_Logged In User: Verify for back button on user profile list page");
			System.out.println("T1563_Logged In User: Verify for back button on user profile list page");
		}
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"), "Bollywood Zone");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "search field");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
	}

	////////////////////////////////////// 11-1-22/////////////////////////////////////////////////////////////////////////////

	public void Discover_T1525(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1525_Guest User -Verify for profile details page");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "Yes");
			waitTime(5000);

			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Follower Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Likes"), "Likes Tab");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosVideosInProfile, "Videos")) {
				logger.info("video is present in the profile page");
				extent.extentLoggerPass("", "video is present in the profile page");
			} else {
				logger.info("video is not present in the profile page");
				extent.extentLoggerFail("", "video is not present in the profile page");
			}
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Discover_T1517(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1517_Guest User -Verify for Profile click navigation");
			System.out.println("T1517_Guest User -Verify for Profile click navigation");
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "YES");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name");
			waitTime(3000);
			String user2 = getText(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage);
			System.out.println(user2);
			waitTime(2000);
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Discover_T1520(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1520_Guest User -Verify for user profile list Page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"),
					"Rail title Bollywood Zone");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"),
					"Arrow Mark");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name with list");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(2), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(3), "Follow Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(4), "Follow Button")) {
				logger.info("user profile list page");
				extent.extentLoggerPass("", "user profile list page");
			} else {
				logger.info("user profile is not list page");
				extent.extentLoggerFail("", "user profile is not list page");
			}
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
		}
	}

	public void Discover_T1521(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1521_Guest User -Verify for user profile list Page content");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "No");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Bollywood Zone"),
					"Rail title Bollywood Zone");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"),
					"Arrow Mark");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name with list");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosusernamelist(1), "username");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosusernamelist(3), "follower");
			waitTime(2000);
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
		}
	}

	/////////////////////////////////////////// 12-1-22/////////////////////////////////////////////////////////////////////////////////////
	public void Discover_T1467(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1467_Logged in user - Check if hashtags are displaying in the hashtag tab related to the searched keyword");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			clickOnFirstSearchedResult("Himanshi Khurana", "Yes", "Hashtags");
			waitTime(3000);
			// verifyElementPresent(IOSHiPiNeoDiscoverPage.HastagInDiscoverSearchTab(1),
			// "HashTag in discover");
			// waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.HastagInDiscoverSearchTab(1), "HashTag in discover")) {
				logger.info("HashTag list is present");
				extent.extentLoggerPass("", "HashTag list is present");
			} else {
				logger.info("HashTag list is not present");
				extent.extentLoggerFail("", "HashTag list is not present");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}

	}

	public void navigateToFirstVideoInAnyTrayofDiscoverPage(String RailorTrayName, String FirstVideo) throws Exception {
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
		waitTime(3000);
		ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosPageIndicator, "Banner");
		waitTime(2000);
		ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage(RailorTrayName), RailorTrayName);
		waitTime(2000);

		// objiosFirstItemInAnyVideoTray
		if (FirstVideo.equalsIgnoreCase("Yes")) {
			click(IOSHiPiNeoDiscoverPage.objiosFirstItemInAnyVideoTray(RailorTrayName),
					"First Video in " + RailorTrayName);
			waitTime(2000);
		}

	}

	public void Discover_T1464(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1464_Logged in user - Check if user can tap on any hashtag trending video");
			navigateToFirstVideoInAnyTrayofDiscoverPage("#BollywoodMasala", "YES");
			waitTime(3000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInVideo, "Username")) {
				logger.info("User able to tap on hashtag trending videos");
				extent.extentLoggerPass("", "User able to tap on hashtag trending videos");
			} else {
				logger.info("User not able to tap on hashtag trending videos");
				extent.extentLoggerFail("", "User not able to tap on hashtag trending videos");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1460(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1460_Guest User - Check if user is able to view number on views on video in the Sound details page");
			clickOnFirstSearchedResult("Chandigarh Mein", "YES", "Sounds");
			// clickOnFirstSearchedResult("himanshi khurana", "Yes", "Sounds");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosViewsInSoundsVideos, "views in videos");
			waitTime(3000);
			String VideoViews = getText(IOSHiPiNeoDiscoverPage.objiosViewsInSoundsVideos);
			System.out.println(VideoViews);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1459(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1459_Guest User - Check if user is able to view number of likes on video in the Sound details page");
			clickOnFirstSearchedResult("Chandigarh Mein", "YES", "Sounds");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosViewsInSoundsVideos, "views in videos");
			waitTime(3000);
			String LikeVideos = getText(IOSHiPiNeoDiscoverPage.objiosViewsInSoundsVideos);
			System.out.println(LikeVideos);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1457_T1437(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1457_Guest User - Check if user is able to view relevant video in the Sound details page");
		} else {
			extent.HeaderChildNode(
					"T1437_Logged in User - Check if user is able to view any video in the Sound details page");
		}
		clickOnFirstSearchedResult("himanshi khurana", "YES", "Sounds");
		waitTime(3000);
		click(IOSHiPiNeoDiscoverPage.objiosSortIconInSoundTab, "Sort icon");
		waitTime(3000);

		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosViewsInSoundsVideos, "views in videos");
		waitTime(3000);
		if (verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "play icon")) {
			logger.info("User is able to view any video in the Sound details page");
			extent.extentLoggerPass("", "User is able to view any video in the Sound details page");
		} else {
			logger.info("User is not able to view any video in the Sound details page");
			extent.extentLoggerFail("", "User is not able to view any video in the Sound details page");
		}
		BackButton();
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}

	////////////////////////////////// 13-1-22///////////////////////////////////////////////////////////////////////////////////////

	public void Discover_T1305(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1305_Guest User: Verify for discovery page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search field");
			waitTime(3000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("Top Hipi Stars"), "Top Hipi Stars");
			waitTime(3000);
			ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
			waitTime(2000);
			ScrollToRailiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("#HipiGOAT"), "Trending/Hash Tag videos");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void Discover_T1405(String userType) throws Exception {
		extent.HeaderChildNode("T1405_Verify video tab of search result page");
		clickOnFirstSearchedResult("himanshi khurana", "YES", "Videos");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "PlayIcon");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.onjiosShopTabInVideo, "shop button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosLikeVideoIconInVideos, "Like/hand Icon");
		waitTime(3000);
		BackButton();
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}

	public void Discover_T1514(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T1514_Guest User -Verify for UI of rail contents");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage, "Bollywood Zone");
			waitTime(3000);
			String title = getText(IOSHiPiNeoDiscoverPage.objiosBollywoodZoneInSearchPage);
			System.out.println(title);
			click(IOSHiPiNeoDiscoverPage.objRightFacingArrowForTray("Bollywood Zone"), "Bollywood Zone");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage, "user name");
			waitTime(3000);
			String name = getText(IOSHiPiNeoDiscoverPage.objiosUsernameInUserPage);
			System.out.println(name);
			click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Discover_T1573(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1573_Logged In User- Verify for following tab of user list page");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Bollywood Zone", "YES");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Follower");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(1), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(2), "Follow Button");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(3), "Follow Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHiPiNeoDiscoverPage.FollowInFollwersForUser(4), "Follow Button")) {
				logger.info("user profile list page");
				extent.extentLoggerPass("", "user profile list page");
			} else {
				logger.info("user profile is not list page");
				extent.extentLoggerFail("", "user profile is not list page");
			}
			BackButton();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

//S----------profile------jan--27--------------------------------------------------------------------			

	public void Profile_T1056(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1056_Logged in user - Check if user is able to update name by entering less character");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(1), "Name");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "close Button");
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "1qazxsw23ed g", "Text");

			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "Name")) {
				logger.info("User should save the name by entering less character in the field");
				extent.extentLoggerPass("", "User should save the name by entering less character in the field");
			} else {
				logger.info("User is already having the name by entering less character in the field");
				extent.extentLoggerFail("", "User is already having the name by entering less character in the field");
			}

			String Expectedresult = getText(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen);
			System.out.println(Expectedresult);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");

			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosUserNameUpdatedSuccessfully, 25,
					"sucessfully updtaed less chaacter");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}

	}

	public void Profile_T1058(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1058_Logged in user -Check while editing user handle, an error is displayed if the user handle already exists");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(2), "User Name");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "cross Button");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "Starandstyle", "Text");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosNameAlreadyTaken, "Name is already present");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosCancelButton, "Cancel Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}

	}

	public void Profile_T1059(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1059_Logged in usert -Check on editing user handle, no error is displayed if the user handle added does not exist");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(2), "User name");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "cross Button");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "wsdrfyuisorhgt", "Text");
			waitTime(3000);
			String Newname = getText(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen);
			System.out.println(Newname);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(2000);
			String Changedname = getText(IOSHipiNeoProfilePage.nameUsernameDescription("Usern"));
			System.out.println(Changedname);
			waitTime(2000);
			if (Newname.contentEquals(Changedname)) {
				logger.info("No error message is displayed when adding new user handle");
				extent.extentLoggerPass("", "No error message is displayed when adding new user handle");
			} else {
				logger.info("error message is displayed when adding a new user handle");
				extent.extentLoggerFail("", "error message is displayed when adding a new user handle");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}

	}

	public void Profile_T1065(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1065_Logged in user -Check if user can enter less than or equal to 200 characters in User Bio field");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.usernameBioArrowMark("Bio"), "Bio");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "close Button");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "abcdefguyegfdhbwaejfgaFBACUWEGYHVCJSD", "Text");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "Bio Description")) {
				logger.info("User able to enter 200 charaters in Bio screen");
				extent.extentLoggerPass("", "User able to enter 200 charaters in Bio screen");
			} else {
				logger.info("User not able to enter the charaters in Bio screen");
				extent.extentLoggerFail("", "User not able to enter the charaters in Bio screen");
			}
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(3000);
			String Actualresult9 = getText(IOSHipiNeoProfilePage.objiosBioDescriptionInEditscreen);
			System.out.println(Actualresult9);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);

		}
	}

	public void Profile_T1067(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1067_Logged in user -Check if username are mandatory fields while editing a profile(i.e fields cannot be blank)");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(2), "User Name");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "cross Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			if(waitForElementDisplayedFastPolling(IOSHipiNeoProfilePage.objiosUserNameEmpty,20, "Error message")) {
				extent.extentLoggerPass("", "erorr msg -username cannot be empty is shown");
			}
			
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosCancelButton, "Cancel Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}

	}

	public void Profile_T1068(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1068_Logged in user -Check if  name are mandatory fields while editing a profile(i.e fields cannot be blank)");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(1), "Name");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "cross Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosNmaeEmptyErroe, "Error message");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosCancelButton, "Cancel Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}

	}

	public void Profile_T1070(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1070_Logged in user  - Check layout of Followers list screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Followers Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowrsPage,
					"Search Field in Follower page");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	public void Profile_T1079(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1079_Logged in user -  Check layout of Following list screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Followers"), "Following Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchFieldInFollowersPage,
					"Search Field in Following page");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow Button")) {
				logger.info("Follow Button is present");
				extent.extentLoggerPass("", "Follow Button is present");
			} else {
				logger.info("No follow is present");
				extent.extentLoggerFail("", "No follow is present");
			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	//////////////////////////////////////// 18-1-22////////////////////////////////////////////////////////////////////////////////////
	public void Profile_T1076(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1076_Logged in user - Check if all followed(following the follower) users will following tab have along with  user details on the list items");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosFollowingTabInUserFollowedList, "Following Tab")) {
				logger.info("User is able to see followed user have a Following tab along with the user details.");
				extent.extentLoggerPass("",
						"User is be able to see followed user have a Following tab along with the user details.");
			} else {
				logger.info("User is not able to see followed user have a Following tab along with the user details.");
				extent.extentLoggerFail("",
						"User is not able to see followed user have a Following tab along with the user details.");
			}
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	public void Profile_T1061(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1061_Logged in user -Check if on editing user handle with less than 20 character no error message should get displayed");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(2), "User Name");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "cross Button");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "ERGYFGREUGFJS", "Text");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			verifyElementPresent(IOSHipiNeoProfilePage.objiosUserNameUpdatedSuccessfully, "succesfull message");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}

	}

	public void Profile_T1066(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1066Logged in user -Check if user can enter more than  200 characters in User Bio field a toast message should get displayed");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.usernameBioArrowMark("Bio"), "Bio");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "close Button");
			waitTime(3000);
			String g = generateRandomString(205);
			System.out.println(g.length());
			type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, g, "Text");
			waitTime(3000);
			String typedBio = getText(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen);
			int count = typedBio.length();
			System.out.println(count);
			if (count <= 200) {
				logger.info("user is able to enter 200 character");
				extent.extentLoggerPass("", "user is able to enter 200 character");
			} else {
				logger.info("user is not able to enter more than 200 character");
				extent.extentLoggerFail("", "user is not able to enter more than 200 character");
			}
			click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}

	//////////////////////////////////////////////// 19-1-22////////////////////////////////////////////////////////////

	public void Profile_T1084(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1084_Logged in user - Check if user is able to search and verify the options displayed on entering text in search text field");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen, "first user name");
			waitTime(3000);
			String FirstName = getText(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen);
			System.out.println(FirstName);
			click(IOSHipiNeoProfilePage.objiosUserNameInFollowerAndFollowingScreen, "first user name");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosUserNameInUserProfilePage, "user name in user page");
			waitTime(3000);
			String username = getText(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage);
			System.out.println(username);
			if (FirstName.contentEquals(username)) {
				logger.info("User is navigate  to selected user profile detail screen.");
				extent.extentLoggerPass("", "User is navigate  to selected user profile detail screen.");
			} else {
				logger.info("User is not navigate  to selected user profile detail screen.");
				extent.extentLoggerFail("", "User is not navigate  to selected user profile detail screen.");
			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}
	// Chandigarh Mein
	/*
	 * To create video till editScreen with Filters,Effects,sound and post it
	 * 
	 */

	public void Creator_Video_TillEditScreen(String Filters, String Effects, String sound, String SoundName,
			String EditScreen, String Post) throws Exception {
		extent.extentLogger("", "-------To create video withFilters, sound,Effects Till edit Screen-----");
		logger.info("-------To create video withFilters, sound,Effects Till edit Screen-----");
		click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Icon");
		waitTime(2000);
		PopupOfCameraAndMicrophone();
		
		
		if (Effects.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st Effects");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.EffectsSelectedTrue, "Effects selected");
					break;
				}
			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
		}
		
		
		if (Filters.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st filter");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Filter selected");
					break;
				}
			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
		}
		
		
		if (sound.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = SoundName;
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound(SoundName), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
		}
		
		
		if (EditScreen.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
		
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 100, "Next Button");
			waitTime(3000);
		}
		
		
		if (Post.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, 100 ,"Post Video");
			waitTime(1500);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video");
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 150,
					"video posted sucessfully")) {
				logger.info("Video posted successfully");
				extent.extentLoggerPass("", "Video posted successfully");
			} else {
				logger.info("Video posted successfully not displayed");
				extent.extentLoggerFail("", "Video posted successfully not displayed");
			}

			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	
	
	
	/*
	 * To create video with sound and post it as either public or draft
	 */
	public void CreateVideo(String Sound, String SoundName, String draft) throws Exception {
		extent.extentLogger("", "-------To create video with sound and post it as either public or draft-----");
		logger.info("-------To create video with sound and post it as either public or draft-----");
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "create button");
		waitTime(3000);
		PopupOfCameraAndMicrophone();
		waitTime(3000);
		if (Sound.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = SoundName;
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound(SoundName), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
		}
		click(IOSHipiCreateVideoPage.iosRecordButon, "recording icon");
		waitTime(3000);
		waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, 100, "next button");
		waitTime(3000);
		click(IOSHipiCreateVideoPage.objiosNextButtoninVideoEdit, "next button");
		waitTime(5000);
		if (draft.equalsIgnoreCase("Yes")) {
			click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "save as draft");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosSavedAsDraft, 100, "video saved as draft");
		} else {
			waitTime(2000);
			click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 100,
					"video posted successfully");
			waitTime(2000);
		}
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
	}

	/*
	 * To open recently posted video in Profile page.
	 */
	public void OpenRecentlyPostedVideoOrLastCreatedVideo() throws Exception {
		extent.extentLogger("", "---Opening recently posted video----");
		logger.info("---Opening recently posted video----");
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
		waitTime(2000);
		if (!waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage, 5,
				"Publishing In Process Message")) {
			for (int i = 1; i <= 10; i++) {
				if (!verifyElementExist(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage,
						"Publishing In Process Message")) {
					PartialSwipeiOS("DOWN", 1);

				} else {
					click(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage, "Publishing In Process Message");
					waitTime(3000);
					break;
				}

			}

		}
		if (verifyElementExist(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage,
				"Publishing In Process Message")) {
			click(IOSHipiCreateVideoPage.objiosPublishingInProcessMessage, "Publishing In Process Message");
			waitTime(3000);
		} else {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosLastVideoCreatedInProfilePage, "Last created")) {
				click(IOSHipiNeoProfilePage.objiosLastVideoCreatedInProfilePage, "Last created");
				waitTime(3000);
			}
		}
		waitTime(3000);

	}
	
	

	/*
	 * To open recently posted video in Profile page.
	 */
	public void OpenRecentlyCreateddraftVideo() throws Exception {
		extent.extentLogger("", "---Opening recently Created draft Video----");
		logger.info("---Opening recently Created draft Video----");
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
		waitTime(2000);
		if (!waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, 5,
				"Draft videos in profile")) {
			for (int i = 1; i <= 10; i++) {
				if (!verifyElementExist(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage,
						"Draft videos in profile")) {
					PartialSwipeiOS("DOWN", i);

				} else {
					System.out.println("No draft video created");
					extent.extentLogger("", "No draft video created ");
					waitTime(3000);
					break;
				}

			}

		}
		

	}
	
	
	
	

	/*
	 * To create video with Filters,Effects,sound and post it as either public or
	 * draft with appropriate decription
	 */
	public void createVideoType(String Filters, String Effects, String sound, String SoundName, String type,
			String Comment, String post) throws Exception {
		click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");
		waitTime(3000);
		PopupOfCameraAndMicrophone();
		if (verifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {

			if (Effects.equalsIgnoreCase("Yes")) {
				click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects");
				waitTime(2000);
				// NvNodownloadButton
				for (int i = 0; i <= 5; i++) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st Effects");
					waitTime(15000);
					String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
					if (!value.equalsIgnoreCase("NvNodownloadButton")) {
						click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
						waitTime(3000);
						verifyElementPresent(IOSHipiCreateVideoPage.EffectsSelectedTrue, "Effects selected");
						break;
					}

				}
				tapiOSAtCenterOfScrreen(1);
				waitTime(3000);
			}
			if (Filters.equalsIgnoreCase("Yes")) {
				click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
				waitTime(2000);
				// NvNodownloadButton
				for (int i = 0; i <= 5; i++) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st filter");
					waitTime(15000);
					waitForElementDisplayediOS(IOSHipiCreateVideoPage.DownloadedFilterOrEffets(1), 200, "First filter downloaded");
					String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
					if (!value.equalsIgnoreCase("NvNodownloadButton")) {
						click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
						waitTime(3000);
						verifyElementPresent(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Filter selected");
						break;
					}

				}

				tapiOSAtCenterOfScrreen(1);

				waitTime(3000);
			}
			if (sound.equalsIgnoreCase("Yes")) {
				click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
				waitTime(4000);
				click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
				waitTime(2000);
				String Searched = SoundName;
				type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
				waitTime(2000);

				click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosFirstSearchedSound(SoundName), "First item in searched list");
				waitTime(6000);
				click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
				waitTime(3000);

			}

			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");

			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 30, "Next Button");
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(2500);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 100, "Post button");
			waitTime(2500);
			click(IOSHipiCreateVideoPage.objiosWhoCanViewThisVideoButtonInPostScreen,
					"Who Can View This Video Button In PostScreen");
			  waitTime(2500);
			if (type.equalsIgnoreCase("Private")) {
				click(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Private"), "Private");
				waitTime(3000);
				click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
				waitTime(2000);
				type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, Comment, "Comment Box");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done");
				waitTime(2000);
			} else if (type.equalsIgnoreCase("Public")) {
				click(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Public"), "Public");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, "Comment Box");
				waitTime(2000);
				type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, Comment, "Comment Box");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosDoneButtonInKeyBoard, "Done Button");
				waitTime(2000);
				hideKeyboard();
				waitTime(2000);
			} else if (type.equalsIgnoreCase("Friends")) {
				click(IOSHipiCreateVideoPage.WhoCanViewThisVideoScreenAllOptions("Friends"), "Friends");
				waitTime(2000);
				type(IOSHipiCreateVideoPage.iosAddDescriptiontoyourvideo, Comment, "Comment Box");
				waitTime(2000);
				hideKeyboard();
				waitTime(2000);
			}
			waitTime(2500);
			if (post.equalsIgnoreCase("yes")) {
				click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post");
				if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 250,
						"Video Upload Success Message")) {
					logger.info(type + " Video posted successfull");
					extent.extentLoggerPass("", type + " Video posted successfull");
				}
			} else {
				click(IOSHipiCreateVideoPage.objSaveAsDraftButton, "Save as Draft");
				if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosDraftToastMsg, 150,
						"Video saved as Draft Success Message")) {
					logger.info(type + " Video saved as Draft successfull");
					extent.extentLoggerPass("", type + "Video saved as Draft successfull");
				}
			}

		}
	}

	
	/*
	 * To create video with required time
	 * 
	 */
	public void create_Video_Of_Specific_Time( int k) throws Exception {
		waitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar,100, "Create button");
		click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");
		waitTime(3000);
		PopupOfCameraAndMicrophone();
		if (!verifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");	
			waitTime(3000);
		}
		
		
		if (verifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {

			click(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn(k+"s"), k+"s");
			waitTime(3000);
verifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInBelowRecordingBtnSelectedTrue(k+"s"), k+"s  selected");
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");

			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 250, "Next Button");
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
			waitTime(2500);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 100, "Post button");
			waitTime(2500);
			
			

		}
	}
	
	
	public void Profile_T1088_T1113(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1088_T1113Logged in user- Check if user is able to resume video from draft list of logged in user for upload");
			// click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			// DeleteDraftVideos();
			waitTime(3000);
			CreateVideo("No", "No", "Yes");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosAddCaptionInDraftVideo, "add caption");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objioscommentsection, "welocme to a new world", "Description of video");
			waitTime(3000);
			String DescribeVideo = getText(IOSHipiCreateVideoPage.objioscommentsection);
			System.out.println(DescribeVideo);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done the Description");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiCreateVideoPage.objiosPostVideoInPostPage, "Post Video");
			waitTime(2000);
			if (waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 100,
					"video posted sucessfully")) {
				logger.info("Video posted successfully");
				extent.extentLoggerPass("", "Video posted successfully");
			} else {
				logger.info("Video posted successfully not displayed");
				extent.extentLoggerFail("", "Video posted successfully not displayed");
			}
			waitTime(3000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
		}
	}

	public void Profile_T1092(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1092_Logged in user - Check if user is redirected to Account detail screen when tapped on back");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			DeleteDraftVideos();
			waitTime(3000);
			CreateVideo("No", "No", "Yes");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOSUserNameInProfileDetailsPage, "user name")) {
				logger.info("user is redirected to Account detail screen when tapped on back from draft screen");
				extent.extentLoggerPass("",
						"user is redirected to Account detail screen when tapped on back from draft screen");
			} else {
				logger.info("user is not redirected to Account detail screen when tapped on back from draft screen");
				extent.extentLoggerFail("",
						"user is not redirected to Account detail screen when tapped on back from draft screen");
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}
	}

	public void Profile_T1089_T1114(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1089_T1114_Logged in user- Check if user is able to delete a single video saved in draft");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			DeleteDraftVideos();
			waitTime(3000);
			CreateVideo("No", "No", "Yes");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "draft video play");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDeleteButtonIndraftsVideo, "Delete Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDeleteButtonYes, "Delete Button Yes");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	/////////////////////////////////////////// 20-1-22/////////////////////////////////////////////////////////////////////////////////////////////

	public void Profile_T1091_T1116(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1091_T1116_Logged in user- Check draft video is not deleted when tapped on No");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			DeleteDraftVideos();
			waitTime(3000);
			CreateVideo("No", "No", "Yes");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDraftVideoInProfilePage, "Draft Tab");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosVideoButtonPlayInDraftsPage, "draft video play");
			waitTime(3000);
			tapiOS_Middlepoint(1);
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosDeleteButtonIndraftsVideo, "Delete Popup");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosNoInDeleteDraft, "No in draft video");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button")) {
				logger.info("drafted video is not deleted when tapped on No");
				extent.extentLoggerPass("", "drafted video is not deleted when tapped on No");
			} else {
				logger.info("drafted video is deleted when tapped on No");
				extent.extentLoggerFail("", "drafted video is deleted when tapped on No");
			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1112(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1112_Logged in user -Check the video saved as draft is displayed in profile/account detail screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			DeleteDraftVideos();
			waitTime(3000);
			CreateVideo("No", "No", "Yes");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosDraftPageInProfilePage, "Draft video")) {
				logger.info("video saved is displayed in profile/account detail screen");
				extent.extentLoggerPass("", " video saved is displayed in profile/account detail screen");
			} else {
				logger.info(" video is not displayed in profile/account detail screen");
				extent.extentLoggerFail("", " video is not displayed in profile/account detail screen");
			}
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	/////////////////////////////////////////////////// 21-1-22//////////////////////////////////////////////////
	public void Profile_T1149(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1149_Logged in user - Check the hashtag is added  to profile favourites");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#TrendingonHipi"),
					"#TrendingonHipi");
			waitTime(3000);
			String before = getText(
					IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#TrendingonHipi"));
			verifyElementPresentAndClick(
					IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#TrendingonHipi"),
					"#TrendingonHipi");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite")) {

				click(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite");
			} else {
				logger.info("Already Added to favourite");

			}
			waitTime(3000);
			BackButton();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "Book Mark");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFavouriteUnderBookmark, "Favourite tab");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hash Tag");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosfavouriteHipiGoat, "Added to favourite");
			waitTime(3000);
			String after = getText(IOSHipiNeoProfilePage.objiosfavouriteHipiGoat);
			if (before.contentEquals(after)) {
				logger.info("Hashtag is added to  profile favourites ");
				extent.extentLoggerPass("", " Hashtag is added to  profile favourites ");
			} else {
				logger.info("Hashtag is not added to  profile favourites");
				extent.extentLoggerFail("", "Hashtag is not added to  profile favourites");
			}
			BackButton();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1148(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1148_Logged in user - Check the hashtag is removed from profile favourites");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#HipiGOAT"),
					"hashtag hipigoat");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#HipiGOAT"),
					"hashtag hipigoat");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite")) {
				click(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite");
			} else {
				logger.info("Already Added to favourite");
			}
			waitTime(3000);
			BackButton();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "Book Mark");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFavouriteUnderBookmark, "Favourite tab");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hash Tag");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosfavouriteHipiGoat, "Added to favourite")) {
				click(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite");
			} else {
				logger.info("It is removed from added to favourite");
			}
			BackButton();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1145(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1145_Logged in user - Check whether hashtag is removed from favorite or not ");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#HipiGOAT"),
					"hashtag hipigoat");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#HipiGOAT"),
					"hashtag hipigoat");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite")) {
				click(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite");
			} else {
				logger.info("Already Added to favourite");

			}
			waitTime(3000);
			BackButton();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSavedBookmarkVideoInProfileTab, "Book Mark");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFavouriteUnderBookmark, "Favourite tab");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoProfilePage.VideosHashTagsSoundsInFavourite("Hashtags"), "Hash Tag");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosfavouriteHipiGoat, "Added to favourite")) {
				click(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite");
			} else {
				logger.info("It is removed from added to favourite");
			}
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosfavouriteHipiGoat, "Added to favourite")) {
				logger.info("User is not able to see the unfavorite hashtag in favorite screen");
				extent.extentLoggerPass("", " User is not able to see the unfavorite hashtag in favorite screen ");
			} else {
				logger.info("User is able to see the unfavorite hashtag in favorite screen");
				extent.extentLoggerFail("", "User is able to see the unfavorite hashtag in favorite screen");
			}
			BackButton();
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1144(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1144_Logged in user - Check user is able to remove hashtag from favorites ");
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#HipiGOAT"),
					"hashtag hipigoat");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("#HipiGOAT"),
					"hashtag hipigoat");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite")) {
				click(IOSHiPiNeoDiscoverPage.objiosfavouriteInHastag, "Add to favourite");
			} else {
				logger.info("Already Added to favourite");

			}
			if (verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosfavouriteHipiGoat, "Added to favourite")) {
				logger.info("User is able to remove favorites hashtag  by tapping on Added to Favorites");
				extent.extentLoggerPass("",
						"User is able to remove favorites hashtag  by tapping on Added to Favorites");
			} else {
				logger.info("User is not able to remove favorites hashtag  by tapping on Added to Favorites");
				extent.extentLoggerFail("",
						"User is not able to remove favorites hashtag  by tapping on Added to Favorites");
			}
			BackButton();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
		}
	}

	public void Profile_T1057(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1057_ Logged in user -Check if a default user name  is displayed ");
			LoginToAccount("hipipost@mailnesia.com", "123456");
			waitTime(2000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.ArrowMarkInEditProfile(2), "User Name");
			waitTime(3000);
			String username7 = getText(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen);
			System.out.println(username7);
			click(IOSHipiNeoProfilePage.objiosCancelButton, "cancel button");
			waitTime(3000);
			BackButton();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
			waitTime(3000);
			LoginAndNivigateToHipi("NonSubscribedUser");

		}
	}

//------------------------------------------------feb-18----------impediment fixed code--------------------------

	// ==============================================Impedement==========================================================

	// =============================================Feed_P2=======================================================

	public void ClickOnSignUp() throws Exception {
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosSignUpButtonInLogInToHipiPopUp, "Sign Up Button");
		waitTime(2000);
	}

	@SuppressWarnings({ "unused", "rawtypes" })
	public void swipeDatePicker(By byLocator, String box) throws IOException  {
		{
			WebElement element = getDriver().findElement(byLocator);

			TouchAction action = new TouchAction(getDriver());

			int pointX = element.getLocation().getX();
			int pointY = element.getLocation().getY();
			System.out.println(element.getLocation());
			// 222,350
			int incY = pointY + 250;
			// 222,600
			waitTime(2000);
			SwipeAnElement(element, pointX, 1500);
			logger.info("Swiped the " + box);
			extent.extentLogger("", "Swiped the " + box);

		}
//	} catch (IOException e) {
//		// TODO Auto-generated catch block
//		e.printStackTrace();
	}

	@SuppressWarnings("unused")
	public void swipeDatePickerUp(By byLocator, String box) throws IOException {
		WebElement element = getDriver().findElement(byLocator);
		@SuppressWarnings({ "rawtypes", "unused" })
		TouchAction action = new TouchAction(getDriver());

		int pointX = element.getLocation().getX();
		int pointY = element.getLocation().getY();
		System.out.println(element.getLocation());
		waitTime(2000);
		SwipeAnElement(element, pointX, 0);
		logger.info("Swiped the " + box);
		extent.extentLogger("", "Swiped the " + box);

	}

	public void datePicker() throws Exception {
		String pastyear = null;
		String presentyear = null;
		int year;
		if (verifyElementExist(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email")) {
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);

		}
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year in Sign up Screen")) {

			pastyear = getText(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen);
			logger.info("Present year Before swiping:" + pastyear);
			extent.extentLogger("", "Present year Before swiping: " + pastyear);
			for (int i = 1; i <= 15; i++) {
				swipeDatePicker(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year box");
				waitTime(2000);
				presentyear = getText(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen);
				year = Integer.parseInt(presentyear);
				logger.info("For swipe " + i + " Present year is :" + year);
				extent.extentLogger("", "For swipe " + i + "Present year is :" + year);
				if (year < 2004) {
					logger.info("Swiped more than 18 years");
					extent.extentLogger("", "Swiped more than 18 years");
					break;
				} else {
					logger.info("Year present less than 18 years looking for next swipe");
					extent.extentLogger("", "Year present less than 18 years looking for next swipe");
				}

			}

		}
		waitTime(2000);

	}

	public void ScrollYear(int J, String Direction) throws Exception {
		if (Direction.equalsIgnoreCase("Down")) {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year in Sign up Screen")) {
				for (int i = 1; i <= J; i++) {
					swipeDatePicker(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year box");
					waitTime(2000);
				}
			}
		} else {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year in Sign up Screen")) {
				for (int i = 1; i <= J; i++) {
					swipeDatePickerUp(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year box");
					waitTime(2000);
				}
			}
		}
	}

	public void ScrollMonth(int J, String Direction) throws Exception {
		if (Direction.equalsIgnoreCase("Down")) {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen, "Month in Sign up Screen")) {
				for (int i = 1; i <= J; i++) {
					swipeDatePicker(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen, "Month box");
					waitTime(2000);
				}
			}
		} else {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen, "Month in Sign up Screen")) {
				for (int i = 1; i <= J; i++) {
					swipeDatePickerUp(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen, "Month box");
					waitTime(2000);
				}
			}
		}
	}

	public void ScrollDate(int J, String Direction) throws Exception {
		if (Direction.equalsIgnoreCase("Down")) {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen, "Date in Sign up Screen")) {
				for (int i = 1; i <= J; i++) {
					swipeDatePicker(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen, "Date box");
					waitTime(2000);
				}
			}
		} else {
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen, "Date in Sign up Screen")) {
				for (int i = 1; i <= J; i++) {
					swipeDatePickerUp(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen, "Date box");
					waitTime(2000);
				}
			}
		}
	}

	public void LoginSignupScreen_T857(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T857_Check the UI of the 'Sign up for HiPi' pop-up");
			System.out.println("T857_Check the UI of the 'Sign up for HiPi' pop-up");
			
			ClickOnSignUp();
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosContinuewithTheFacebook, "Continue with Facebook");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpForHipiTextInLogInToHipiPopUp,
					"Sign Up For Hipi Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosCreateAProfileTextInLogInToHipiPopUp,
					"Create a Profile Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLogInLinkInLogInToHipiPopUp, "Log In Link");
			waitTime(2000);
			Dimension display = getDriver().manage().window().getSize();
			int X1 = display.width / 2;
			System.out.println(X1);
			WebElement loc = findElement(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton);
			int X2 = loc.getLocation().getX();
			System.out.println(X2);
			if (X1 < X2) {
				logger.info("Cross icon is at the right side of the corner");
				extent.extentLoggerPass("", "Cross icon is at the right side of the corner");
			} else {
				logger.info("Cross icon is not at the right side of the corner");
				extent.extentLoggerFail("", "Cross icon is not at the right side of the corner");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Croos Icon");
			waitTime(2000);
		}
	}

	public void LoginSignupScreen_T860(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T860_Check the UI of the Sign up screen for Phone Number");
			System.out.println("T860_Check the UI of the Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T965(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T965_Check the UI of the Sign up screen");
			System.out.println("T965_Check the UI of the Sign up screen");
			
			ClickOnNextButtonAfterEnteringGmail("kittykiran@gmail.com");
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosTellUsMoreTexInSignUpScreen, "Tell us more Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosUseYourNameTexInSignUpScreen, "Use your Name Tex");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Full Name Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosMaleGenderInSignUpScreen, "Male Gender");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen, "Password Text Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosCompleteButtonInSignUpScreen, "Complete Button");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T915(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T915_Check if the 'Age should be above 18 year' message is displayed when user select less than 18 years ");
			System.out.println("T915_Check if the 'Age should be above 18 year' message is displayed when user select less than 18 years ");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(1, "Down");
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosAgeToastMessageInSignUpPage, 15,
					"Toast Messae")) {
				logger.info(
						"User able to get the 'Age should be above 18 year' message when selects less than 18 years");
				extent.extentLoggerPass("",
						"User able to get the 'Age should be above 18 year' message when selects less than 18 years");
			} else {
				logger.info(
						"User not able to get the 'Age should be above 18 year' message when selects less than 18 years");
				extent.extentLoggerFail("",
						"User not able to get the 'Age should be above 18 year' message when selects less than 18 years");
			}
			NavigateToHomPage();
		}
	}

	// =============================================Feed_P0=======================================================

	public void LoginSignupScreen_T855(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T855_Check if user is able to see the Sign up link in Login in to HiPi pop-up");
			System.out.println("T855_Check if user is able to see the Sign up link in Login in to HiPi pop-up");
			
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpButtonInLogInToHipiPopUp, "Sign Up Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Croos Icon");
			waitTime(2000);
		}
	}

	public void LoginSignupScreen_T856(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T856_Check if user is able to see the Sign up for HiPi pop-up after tapping on Sign up link in Login in to HiPi pop-up");
			System.out.println("T856_Check if user is able to see the Sign up for HiPi pop-up after tapping on Sign up link in Login in to HiPi pop-up");
			
			ClickOnSignUp();
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpForHipiTextInLogInToHipiPopUp,
					"Sign Up For Hipi Text")) {
				logger.info("User  navigate to Sign up for HiPi pop-up after tapping on Log in link");
				extent.extentLoggerPass("", "User  navigate to Sign up for HiPi pop-up after tapping on Log in link");
			} else {
				logger.info("User not navigate to Sign up for HiPi pop-up after tapping on Log in link");
				extent.extentLoggerFail("",
						"User not navigate to Sign up for HiPi pop-up after tapping on Log in link");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Croos Icon");
			waitTime(2000);
		}
	}

	public void LoginSignupScreen_T858(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T858_Check if user is able to close the Sign up for HiPi pop-up by tapping on cross icon");
			System.out.println("T858_Check if user is able to close the Sign up for HiPi pop-up by tapping on cross icon");
			
			ClickOnSignUp();
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Croos Icon");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiNeoProfilePage.objiosSignUpForHipiTextInLogInToHipiPopUp,
					"Sign Up For Hipi Text")) {
				logger.info("User able to close the Sign up for HiPi pop-up by tapping on cross icon");
				extent.extentLoggerPass("", "User able to close the Sign up for HiPi pop-up by tapping on cross icon");
			} else {
				logger.info("User not able to close the Sign up for HiPi pop-up by tapping on cross icon");
				extent.extentLoggerFail("",
						"User not able to close the Sign up for HiPi pop-up by tapping on cross icon");
			}
		}
	}

	public void LoginSignupScreen_T859_T946(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T859_T946_Check if user is able to navigate to Sign up screen after tapping on Use Phone or Email CTA");
			System.out.println("T859_T946_Check if user is able to navigate to Sign up screen after tapping on Use Phone or Email CTA");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Text")) {
				logger.info("User navigate to Sign up screen after tapping on Use Phone or Email CTA");
				extent.extentLoggerPass("", "User navigate to Sign up screen after tapping on Use Phone or Email CTA");
			} else {
				logger.info("User not navigate to Sign up screen after tapping on Use Phone or Email CTA");
				extent.extentLoggerFail("",
						"User not navigate to Sign up screen after tapping on Use Phone or Email CTA");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T869_T916(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T869_T916_Check if user navigate to sign up with phone number screen after tapping on Next CTA");
			System.out.println("T869_T916_Check if user navigate to sign up with phone number screen after tapping on Next CTA");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			if ((verifyElementExist(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage,
					"Phone Number Text field"))
					&& (verifyElementExist(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Screen"))) {
				logger.info("User navigate to Sign up with Phone number screen after tapping on Next CTA");
				extent.extentLoggerPass("",
						"User navigate to Sign up with Phone number screen after tapping on Next CTA");
			} else {
				logger.info("User not navigate to Sign up with Phone number screen after tapping on Next CTA");
				extent.extentLoggerFail("",
						"User not navigate to Sign up with Phone number screen after tapping on Next CTA");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T918(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T918_Check if user is able to see the Select country/region screen after tapping on +91 in Sign up screen for Phone Number");
			System.out.println("T918_Check if user is able to see the Select country/region screen after tapping on +91 in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "+91 Dropdown");
			waitTime(2000);
			if ((verifyElementExist(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField, "Afghanistan"))
					|| (verifyElementExist(IOSHipiNeoProfilePage.objiosAlbaniaPhoneNumberTextField, "Albania"))
					|| (verifyElementExist(IOSHipiNeoProfilePage.objiosAlgeriaPhoneNumberTextField, "Algeria"))) {
				logger.info("User able to see the Select country/region screen on tapping +91");
				extent.extentLoggerPass("", "User able to see the Select country/region screen on tapping +91");
			} else {
				logger.info("User not able to see the Select country/region screen on tapping +91");
				extent.extentLoggerFail("", "User not able to see the Select country/region screen on tapping +91");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInSelectCountryRegion, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T925(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T925_Check if user is able to remove the entered new phone number by tapping on cross icon in Sign up screen for Phone Number");
			System.out.println("T925_Check if user is able to remove the entered new phone number by tapping on cross icon in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957406", "9845957406");
			waitTime(2000);
			String expectedText = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosClearTextInPhoneNumberTextField, "Cross Icon");
			waitTime(2000);
			String ActualText = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			waitTime(2000);
			if (!expectedText.equalsIgnoreCase(ActualText)) {
				logger.info("User able to remove the entered new phone number by tapping on cross icon");
				extent.extentLoggerPass("",
						"User able to remove the entered new phone number by tapping on cross icon");
			} else {
				logger.info("User no able to remove the entered new phone number by tapping on cross icon");
				extent.extentLoggerFail("",
						"User no able to remove the entered new phone number by tapping on cross icon");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T957(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T957_Check if user is able to navigate to Email Address screen by tapping on Email option in Sign up screen");
			System.out.println("T957_Check if user is able to navigate to Email Address screen by tapping on Email option in Sign up screen");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage,
					"EmailAddressTextField")) {
				logger.info(
						"User able to navigate to Email Address screen by tapping on Email option in Sign up screen");
				extent.extentLoggerPass("",
						"User able to navigate to Email Address screen by tapping on Email option in Sign up screen");
			} else {
				logger.info(
						"User not able to navigate to Email Address screen by tapping on Email option in Sign up screen");
				extent.extentLoggerFail("",
						"User not able to navigate to Email Address screen by tapping on Email option in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T959(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T959_Check if user naviagte to Sign up for Email screen by tapping on back button");
			System.out.println("T959_Check if user naviagte to Sign up for Email screen by tapping on back button");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "KITTYKIRAN@GMAIL.COM",
					"KITTYKIRAN@GMAIL.COM");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab")) {
				logger.info("User naviagte to Sign up for Email screen by tapping on back button");
				extent.extentLoggerPass("", "User naviagte to Sign up for Email screen by tapping on back button");
			} else {
				logger.info("User not naviagte to Sign up for Email screen by tapping on back button");
				extent.extentLoggerFail("", "User not naviagte to Sign up for Email screen by tapping on back button");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T961(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T961_Check if user is able to enter the New Email Address in Email Address field in Sign up screen");
			System.out.println("T961_Check if user is able to enter the New Email Address in Email Address field in Sign up screen");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Text Field");
			waitTime(2000);
			String expectedText = "KITTYKIRAN@GMAIL.COM";
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, expectedText, "KITTYKIRAN@GMAIL.COM");
			waitTime(2000);
			String ActualText = getText(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage);
			waitTime(2000);
			if (expectedText.equalsIgnoreCase(ActualText)) {
				logger.info("User able to enter the New Email Address in Email Address field in Sign up screen");
				extent.extentLoggerPass("",
						"User able to enter the New Email Address in Email Address field in Sign up screen");
			} else {
				logger.info("User not able to enter the New Email Address in Email Address field in Sign up screen");
				extent.extentLoggerFail("",
						"User not able to enter the New Email Address in Email Address field in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T966(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T966_Check if user is able to enter Full Name in Sign up screen");
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "KITTYKIRAN@GMAIL.COM",
					"KITTYKIRAN@GMAIL.COM");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Full Name Text Field");
			waitTime(2000);
			String expectedText = "Kiran Kumar";
			type(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, expectedText, expectedText);
			String ActualText = getText(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen);
			waitTime(2000);
			if (expectedText.equalsIgnoreCase(ActualText)) {
				logger.info("User able to enter Full Name in Sign up screen");
				extent.extentLoggerPass("", "User able to enter Full Name in Sign up screen");
			} else {
				logger.info("User not able to enter Full Name in Sign up screen");
				extent.extentLoggerFail("", "User not able to enter Full Name in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T969(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T969_Check if user is able to change the Gender field by tapping on up and down arrow in sign up screen");
			System.out.println("T969_Check if user is able to change the Gender field by tapping on up and down arrow in sign up screen");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "KITTYKIRAN@GMAIL.COM",
					"KITTYKIRAN@GMAIL.COM");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Full Name Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Kiran Kumar", "Kiran Kumar");
			waitTime(2000);
			String ExpectedText = getText(IOSHipiNeoProfilePage.objiosGenderTextFieldInSignUpScreen);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosGenderDropDownInSignUpScreen, "Gender Dropdown");
			waitTime(2000);
			String ActualText = getText(IOSHipiNeoProfilePage.objiosGenderTextFieldInSignUpScreen);
			waitTime(2000);
			if (!ExpectedText.equalsIgnoreCase(ActualText)) {
				logger.info("User able to change the Gender field by tapping on up and down arrow in sign up screen");
				extent.extentLoggerPass("",
						"User able to change the Gender field by tapping on up and down arrow in sign up screen");
			} else {
				logger.info(
						"User not able to change the Gender field by tapping on up and down arrow in sign up screen");
				extent.extentLoggerFail("",
						"User not able to change the Gender field by tapping on up and down arrow in sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T970(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T970_Check if user is able to enter Passowrd in Sign up screen");
			System.out.println("T970_Check if user is able to enter Passowrd in Sign up screen");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			datePicker();
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "KITTYKIRAN@GMAIL.COM",
					"KITTYKIRAN@GMAIL.COM");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Full Name Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Kiran Kumar", "Kiran Kumar");
			waitTime(2000);
			String ExpectedText = "Kitty";
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen, "Password Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen, ExpectedText, ExpectedText);
			waitTime(2000);
			String ActualText = getText(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen);
			waitTime(2000);
			if (!ExpectedText.equalsIgnoreCase(ActualText)) {
				logger.info("User able to enter Passowrd in Sign up screen");
				extent.extentLoggerPass("", "User able to enter Passowrd in Sign up screen");
			} else {
				logger.info("User not able to enter Passowrd in Sign up screen");
				extent.extentLoggerFail("", "User not able to enter Passowrd in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T979(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T979_Check if user is able to see the 'Continue with Facebook' CTA in Sign up for HiPi pop-up");
			System.out.println("T979_Check if user is able to see the 'Continue with Facebook' CTA in Sign up for HiPi pop-up");
			
			ClickOnSignUp();
			if (verifyElementExist(IOSHipiNeoHomePage.objiosContinuewithTheFacebook, "Continue with Facebook Button")) {
				logger.info("User able to see the 'Continue with Facebook' CTA in Sign up for HiPi pop-up");
				extent.extentLoggerPass("",
						"User able to see the 'Continue with Facebook' CTA in Sign up for HiPi pop-up");
			} else {
				logger.info("User not able to see the 'Continue with Facebook' CTA in Sign up for HiPi pop-up");
				extent.extentLoggerFail("",
						"User not able to see the 'Continue with Facebook' CTA in Sign up for HiPi pop-up");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Cross Icon");
			waitTime(2000);
		}
	}

	public void LoginSignupScreen_T1008(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T1008_Check if user is able to see the 'Continue with Google' CTA in 'Sign up for HiPi' pop-up");
			System.out.println("T1008_Check if user is able to see the 'Continue with Google' CTA in 'Sign up for HiPi' pop-up");
			
			ClickOnSignUp();
			if (verifyElementExist(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google Button")) {
				logger.info("User able to see the 'Continue with Google' CTA in Sign up for HiPi pop-up");
				extent.extentLoggerPass("",
						"User able to see the 'Continue with Google' CTA in Sign up for HiPi pop-up");
			} else {
				logger.info("User not able to see the 'Continue with Google' CTA in Sign up for HiPi pop-up");
				extent.extentLoggerFail("",
						"User not able to see the 'Continue with Google' CTA in Sign up for HiPi pop-up");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Cross Icon");
			waitTime(2000);
		}
	}

	public void ClickOnNextButtonAfterEnteringGmail(String Gmail) throws Exception {
		ClickOnSignUp();
		datePicker();
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "Email Text Field");
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, Gmail, Gmail);
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
	}

	public void ClickOnNextButtonAfterEnteringDateMoreThen18Years() throws Exception {
		ClickOnSignUp();
		datePicker();
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
	}

	// =============================================Feed_P1=======================================================
	public void LoginSignupScreen_T870_P1(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T870_Check the UI of the Sign up screen for Phone Number");
			System.out.println("T870_Check the UI of the Sign up screen for Phone Number");
			
			ClickOnNextButtonAfterEnteringDateMoreThen18Years();
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Arrow Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneTabInLogInPage, "Phone Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objios91DropownInLogInPage, "+91");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosTermsOfUseInLogInPage, "Terms of Use Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPrivacyPolicyInLogInPage, "Privacy Policy Link");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T917_p0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T917_Check the UI of the Sign up screen for Phone Number");
			System.out.println("T917_Check the UI of the Sign up screen for Phone Number");
			
			ClickOnNextButtonAfterEnteringDateMoreThen18Years();
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Arrow Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneTabInLogInPage, "Phone Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Field");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objios91DropownInLogInPage, "+91");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosTermsOfUseInLogInPage, "Terms of Use Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPrivacyPolicyInLogInPage, "Privacy Policy Link");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T881(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T881_Check the UI of the Login with Phone Number");
			System.out.println("T881_Check the UI of the Login with Phone Number");
			
			ClickOnNextButtonAfterEnteringDateMoreThen18Years();
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			String num = "9" + RandomIntegerGenerator(9);
			waitTime(2000);
			String ExpectedText = num;
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, ExpectedText, ExpectedText);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneTabInLogInPage, "Phone Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objios91DropownInLogInPage, "+91");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginWithPasswordInSignUpPage,
					"Log in With Password Link");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosLoginTextInSignUpPage, "Login Text");
			waitTime(2000);
			String ActualText = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			if (ExpectedText.equalsIgnoreCase(ActualText)) {
				logger.info(" Entered Phone Number is Present");
				extent.extentLoggerPass("", " Entered Phone Number is Present");
			} else {
				logger.info(" Entered Phone Number is not Present");
				extent.extentLoggerFail("", " Entered Phone Number is not Present");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T883(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T883_Check if user navigate to Verification screen after tapping on Send OTP CTA in Login with Phone number screen");
			System.out.println("T883_Check if user navigate to Verification screen after tapping on Send OTP CTA in Login with Phone number screen");
			
			ClickOnNextButtonAfterEnteringDateMoreThen18Years();
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			String num = "9" + RandomIntegerGenerator(9);
			waitTime(2000);
			String ExpectedText = num;
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, ExpectedText, ExpectedText);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosVerifyOtpButtonInSignUpPage, "Verify OTP Button")) {
				logger.info("User navigate to verification screen after tapping on Send OTP CTA");
				extent.extentLoggerPass("", "User navigate to verification screen after tapping on Send OTP CTA");
			} else {
				logger.info("User not navigate to verification screen after tapping on Send OTP CTA");
				extent.extentLoggerFail("", "User not navigate to verification screen after tapping on Send OTP CTA");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T907(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T907_Check the UI of the Sign up screen for Phone Number");
			System.out.println("T907_Check the UI of the Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSignUpTextInSignUpScreen, "Sign Up Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	@SuppressWarnings("unused")
	public void LoginSignupScreen_T897(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T897_Check if user is able to remove the entered phone number by tapping on cross icon in forgot Password Reset Screen for Phone number");
			System.out.println("T897_Check if user is able to remove the entered phone number by tapping on cross icon in forgot Password Reset Screen for Phone number");
			
			ClickOnNextButtonAfterEnteringDateMoreThen18Years();
			waitTime(3000);
			String num = "9" + RandomIntegerGenerator(9);
			waitTime(2000);
			String ExpectedText = num;
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, num);
			waitTime(2000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosLoginWithPasswordInSignUpPage, "Log in With Password Link");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Clear Button");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage);
			waitTime(2000);
			if (!Text1.equalsIgnoreCase(Text2)) {
				logger.info("User able to remove the entered phone number by tapping on cross icon in Reset screen");
				extent.extentLoggerPass("",
						"User able to remove the entered phone number by tapping on cross icon in Reset screen");
			} else {
				logger.info(
						"User not able to remove the entered phone number by tapping on cross icon in Reset screen");
				extent.extentLoggerFail("",
						"User not able to remove the entered phone number by tapping on cross icon in Reset screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T968(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T968_Check if user is able to remove entered Full Name by tapping on cross icon in Sign up screen");
			System.out.println("T968_Check if user is able to remove entered Full Name by tapping on cross icon in Sign up screen");
			
			ClickOnNextButtonAfterEnteringGmail("kittykiran@gmail.com");
			click(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Full Name Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Kiran", "Full Name Text Field");
			waitTime(2000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Clear Button");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen);
			waitTime(2000);
			if (!Text1.equalsIgnoreCase(Text2)) {
				logger.info("User able to remove entered Full Name by tapping on cross icon in Sign up screen");
				extent.extentLoggerPass("",
						"User able to remove entered Full Name by tapping on cross icon in Sign up screen");
			} else {
				logger.info("User not able to remove entered Full Name by tapping on cross icon in Sign up screen");
				extent.extentLoggerFail("",
						"User not able to remove entered Full Name by tapping on cross icon in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T971(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T971_Check if user is able to remove entered Password by tapping on cross icon in Sign up screen");
			System.out.println("T971_Check if user is able to remove entered Password by tapping on cross icon in Sign up screen");
			
			ClickOnNextButtonAfterEnteringGmail("kittykiran@gmail.com");
			click(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen, "Password Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen, "Kiran", "Full Name Text Field");
			waitTime(2000);
			String Text1 = getText(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen);
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosClearBtnInPhoneNumberTextField, "Clear Button");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoProfilePage.objiosPasswordTextFieldInSignUpScreen);
			waitTime(2000);
			if (!Text1.equalsIgnoreCase(Text2)) {
				logger.info("User able to remove entered Password by tapping on cross icon in Sign up screen");
				extent.extentLoggerPass("",
						"User able to remove entered Password by tapping on cross icon in Sign up screen");
			} else {
				logger.info("User not able to remove entered Password by tapping on cross icon in Sign up screen");
				extent.extentLoggerFail("",
						"User not able to remove entered Password by tapping on cross icon in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T893(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T893_Check if user navigate to forgot Password Reset Screen after tapping the \"Forgot password? in Phone tab screen");
			System.out.println("T893_Check if user navigate to forgot Password Reset Screen after tapping the \"Forgot password? in Phone tab screen");
			
			ClickOnNextButtonAfterEnteringDateMoreThen18Years();
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "1111111111", "1111111111");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosLoginWithPasswordInSignUpPage, "Log in With Password Link");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot Password Link");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Text")) {
				logger.info(
						"User navigate to Reset screen after tapping on Forgot password? in login with Phone number");
				extent.extentLoggerPass("",
						"User navigate to Reset screen after tapping on Forgot password? in login with Phone number");
			} else {
				logger.info(
						"User not navigate to Reset screen after tapping on Forgot password? in login with Phone number");
				extent.extentLoggerFail("",
						"User not navigate to Reset screen after tapping on Forgot password? in login with Phone number");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T868_T955(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T868_T955_Check if the 'Age should be above 18 year' message is displayed when user select less than 18 years ");
			System.out.println("T868_T955_Check if the 'Age should be above 18 year' message is displayed when user select less than 18 years ");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(1, "Down");
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosAgeToastMessageInSignUpPage, 15,
					"Toast Messae")) {
				logger.info(
						"User able to get the 'Age should be above 18 year' message when selects less than 18 years");
				extent.extentLoggerPass("",
						"User able to get the 'Age should be above 18 year' message when selects less than 18 years");
			} else {
				logger.info(
						"User not able to get the 'Age should be above 18 year' message when selects less than 18 years");
				extent.extentLoggerFail("",
						"User not able to get the 'Age should be above 18 year' message when selects less than 18 years");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T864_T911_T951(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T864_T911_T951_Check if user is able to scroll down the date in Sign up screen for Phone Number");
			System.out.println("T864_T911_T951_Check if user is able to scroll down the date in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(1, "Down");
			String Date1 = getText(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen);
			waitTime(2000);
			System.out.println(Date1);
			ScrollDate(1, "Down");
			String Date2 = getText(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen);
			waitTime(2000);
			System.out.println(Date2);
			if (!Date1.equalsIgnoreCase(Date2)) {
				logger.info("User able to scroll down the date field in Sign up screen");
				extent.extentLoggerPass("", "User able to scroll down the date field in Sign up screen");
			} else {
				logger.info("User not able to scroll down the date field in Sign up screen");
				extent.extentLoggerFail("", "User not able to scroll down the date field in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T865_T912_T952(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T865_T912_T952_Check if user is able to scroll down the month in Sign up screen for Phone Number");
			System.out.println("T865_T912_T952_Check if user is able to scroll down the month in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(1, "Down");
			String Month1 = getText(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen);
			waitTime(2000);
			System.out.println(Month1);
			ScrollMonth(2, "Down");
			String Month2 = getText(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen);
			waitTime(2000);
			System.out.println(Month2);
			if (!Month1.equalsIgnoreCase(Month2)) {
				logger.info("User able to scroll down the Month field in Sign up screen");
				extent.extentLoggerPass("", "User able to scroll down the Month field in Sign up screen");
			} else {
				logger.info("User not able to scroll down the Month field in Sign up screen");
				extent.extentLoggerFail("", "User not able to scroll down the Month field in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T866_T913_T953(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T866_T913_T953_Check if user is able to scroll down the Year in Sign up screen for Phone Number");
			System.out.println("T866_T913_T953_Check if user is able to scroll down the Year in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			String Year1 = getText(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen);
			waitTime(2000);
			System.out.println(Year1);
			ScrollYear(1, "Down");
			String Year2 = getText(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen);
			waitTime(2000);
			System.out.println(Year2);
			if (!Year1.equalsIgnoreCase(Year2)) {
				logger.info("User able to scroll down the Year field in Sign up screen");
				extent.extentLoggerPass("", "User able to scroll down the Year field in Sign up screen");
			} else {
				logger.info("User not able to scroll down the Year field in Sign up screen");
				extent.extentLoggerFail("", "User not able to scroll down the Year field in Sign up screen");
			}
			NavigateToHomPage();
		}
	}

	public void LoginSignupScreen_T861_T908_T948(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T861_Check if user is able to scroll up the date in Sign up screen for Phone Number");
			System.out.println("T861_Check if user is able to scroll up the date in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(1, "Down");
			String Date1 = getText(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen);
			System.out.println(Date1);
			ScrollDate(1, "Up");
			String Date2 = getText(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen);
			System.out.println(Date2);
			if (!Date1.equalsIgnoreCase(Date2)) {
				logger.info("User able to scroll up the date field in Sign up screen");
				extent.extentLoggerPass("", "User able to scroll up the date field in Sign up screen");
			} else {
				logger.info("User not able to scroll up the date field in Sign up screen");
				extent.extentLoggerFail("", "User not able to scroll up the date field in Sign up screen");
			}
			NavigateToHomPage();

		}
	}

	public void LoginSignupScreen_T862_T909_T949(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T862_Check if user is able to scroll up the Month in Sign up screen for Phone Number");
			System.out.println("T862_Check if user is able to scroll up the Month in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(1, "Down");
			String Month1 = getText(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen);
			System.out.println(Month1);
			ScrollMonth(1, "Up");
			String Month2 = getText(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen);
			System.out.println(Month2);
			if (!Month1.equalsIgnoreCase(Month2)) {
				logger.info("User able to scroll up the Month field in Sign up screen");
				extent.extentLoggerPass("", "User able to scroll up the Month field in Sign up screen");
			} else {
				logger.info("User not able to scroll up the Month field in Sign up screen");
				extent.extentLoggerFail("", "User not able to scroll up the Month field in Sign up screen");
			}
			NavigateToHomPage();

		}
	}

	public void LoginSignupScreen_T863_T910_T950(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T863_Check if user is able to scroll up the Year in Sign up screen for Phone Number");
			System.out.println("T863_Check if user is able to scroll up the Year in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Phone or Email Button");
			waitTime(2000);
			ScrollYear(2, "Down");
			String Year1 = getText(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen);
			System.out.println(Year1);
			ScrollYear(1, "Up");
			String Year2 = getText(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen);
			System.out.println(Year2);
			if (!Year1.equalsIgnoreCase(Year2)) {
				logger.info("User able to scroll up the Year field in Sign up screen");
				extent.extentLoggerPass("", "User able to scroll up the Year field in Sign up screen");
			} else {
				logger.info("User not able to scroll up the Year field in Sign up screen");
				extent.extentLoggerFail("", "User not able to scroll up the Year field in Sign up screen");
			}
			NavigateToHomPage();

		}
	}

	// ----------------------------------s-----------------------------------------feb-18--------------------------------------------------------
	public void FeedScreen_T065(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T065_Guest User - Check if user is able to navigate to user profile page by tapping on Profile picture in For You tab");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(5000);
			
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "for you");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosprofilepicture, "profile picture");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage, "username ");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void FeedScreen_T070(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T070_Guest User -  Check if user is able to see the " + " (Follow) icon For You screen");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "for you");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowBtn, "plus icon");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T072(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T072_Guest User -  Check if user is able to see the Like icon For You screen");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "for you");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T129(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T129_Logged in User - Check if user is able to see the user name in For You tab");
			
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "for you");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "user name");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T125(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			System.out.println("T125_Logged in User - Check if 'Profile details' screen is displayed when tapped on Profile picture of a video");
			extent.HeaderChildNode(
					"T125_Logged in User - Check if 'Profile details' screen is displayed when tapped on Profile picture of a video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosprofilepicture, "profile picture");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage, "username ");
			String username = getText(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage);
			System.out.println(username);
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	/////////////////////////////////// 10-2-22///////////////////////////////////////////////

	public void FeedScreen_T074(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T074_Guest User -  Check if user is able to view number of likes on played/paused video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosTotalLikesInProfilePage, "Total Likes ")) {
				logger.info("User is be able to view number of likes for played video");
				extent.extentLoggerPass("", "User is be able to view number of likes for played video");
			} else {
				logger.info("User is not able to view number of likes for played video");
				extent.extentLoggerFail("", "User is not able to view number of likes for played video");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T126(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T126_Logged in User - Check if user is able to see profile picture on the video screen of feed");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosprofilepicture, "profile picture ")) {
				logger.info("User is able to see the profile picture");
				extent.extentLoggerPass("", "User is able to see the profile picture");
			} else {
				logger.info("User is not able to see the profile picture");
				extent.extentLoggerFail("", "User is not able to see the profile picture");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T132(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T132_Logged in User - Check if user is able to view number of comments on played/paused video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosTotalComments, "Total comments ")) {
				logger.info("User is able to view number of comments for played video");
				extent.extentLoggerPass("", "User is able to view number of comments for played video");
			} else {
				logger.info("User is not able to view number of comments for played video");
				extent.extentLoggerFail("", "User is not able to view number of comments for played video");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T407(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T407_Logged in User - Check if user is able to see the list of actionable items for a video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosprofilepicture, "profile picture ");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosTotalComments, "Total comments ");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCommentBtn, "comment Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosTotalComments, "Total comments ");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button ");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "user name");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "music icon");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	////////////////////////////////////////// 11-2-22/////////////////////////////////////////////////////////////////

	public void FeedScreen_T095(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T095_Logged in User - Check if 'Like Icon' is turned to red when tapped on Like Video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button")) {
				click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			} else {
				System.out.println("already video is liked");
			}
			verifyElementPresent(IOSHipiNeoHomePage.objiosLikedVideo, "Liked icon");
			waitTime(2000);
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	@SuppressWarnings("unused")
	public void FeedScreen_T094(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T094_Logged in User - Check if user is able to like a video on played/paused video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			
			DeepLinkURLForShopButton("No", "filterandeffectlink", FilterAndEffect);
			waitTime(8000);
			if(verifyElementExist(IOSHipiNeoHomePage.objiosLikedVideo, "Liked Button")) {
				click(IOSHipiNeoHomePage.objiosLikedVideo, "Liked Button");
				waitTime(5000);
			}
			verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			String LikeButton = getText(IOSHipiNeoHomePage.objiosTotalNumberOfLikes);
			waitTime(2000);
			int like=Integer.parseInt(LikeButton);
			extent.extentLogger("", "the like count before clicking on like button is :--- " + like);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosLikedVideo, "Liked Button");
			waitTime(2000);
			String LikedButton = getText(IOSHipiNeoHomePage.objiosTotalNumberOfLikes);
			int liked=Integer.parseInt(LikedButton);
			extent.extentLogger("", "the like count after clicking on like button is :--- " + liked);
			
			if (!(like==liked)) {
				logger.info("Like icon the video gets liked and the Like count gets increases");
				extent.extentLoggerPass("", "Like icon the video gets liked and the Like count gets increases");
			} else {
				logger.info("Like icon the video gets not liked and the Like count not increased");
				extent.extentLoggerFail("", "Like icon the video gets not liked and the Like count not increased");
			}
			NavigateToHomPage();
		}
	}

	public void FeedScreen_T464(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T464_Logged in User - Check if 'Profile details' screen is displayed when tapped on Profile picture of a video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "user name");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage, "username ")) {
				logger.info("Profile details screen is to be displayed");
				extent.extentLoggerPass("", "Profile details screen is to be displayed");
			} else {
				logger.info("Profile details screen is not be displayed");
				extent.extentLoggerFail("", "Profile details screen is not be displayed");
			}
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void FeedScreen_T463(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T463_Logged in User - Check if user is able to view Network Error when he taps on Profile Picture without internet");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			wifi("off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiosProfilePictureFollowing, "Profile Picture");
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 15, "Network error")) {
				logger.info("User get network error message when he taps on Profile picture without internet");
				extent.extentLoggerPass("",
						"User get network error message when he taps on Profile picture without internet");
			} else {
				logger.info("User not get network error message when he taps on Profile picture without internet");
				extent.extentLoggerFail("",
						"User not get network error message when he taps on Profile picture without internet");
			}
			wifi("on");
			NavigateToHomPage();
		}

	}

	public void FeedScreen_T462(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T462_Logged in User - Check if user is able to see profile picture on the video screen of feed");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosProfilePictureFollowing, "profile picture ")) {
				logger.info("User is able to see the profile picture");
				extent.extentLoggerPass("", "User is able to see the profile picture");
			} else {
				logger.info("User is not able to see the profile picture");
				extent.extentLoggerFail("", "User is not able to see the profile picture");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	////////////////////////////////// 14-2-22////////////////////////////////////////////////////

	public void FeedScreen_T440(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T440_Logged in User - Check if user is already followed then follow icon is no longer seen on Profile icon");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtn, "puls icon  tab")) {
				logger.info("As the user is already followed - Follow icon should no longer  be seen on profile icon");
				extent.extentLoggerFail("",
						"As the user is already followed - Follow icon should no longer  be seen on profile icon");
			} else {
				logger.info("user is already followed then follow icon is no longer seen on Profile icon");
				extent.extentLoggerPass("", "user is already followed then follow icon is no longer seen on Profile icon");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T128(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T128_Logged in User - Check if user is able to navigate to user profile page by tapping on User name in For You tab");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "for you");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "user name");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage, "username ")) {
				logger.info("Profile details screen is  displayed");
				extent.extentLoggerPass("", "Profile details screen is displayed");
			} else {
				logger.info("Profile details screen is not be displayed");
				extent.extentLoggerFail("", "Profile details screen is not be displayed");
			}
			NavigateToHomPage();
		}
	}

	public void FeedScreen_T148(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T148_Logged in User - Check if count of comments is matched in both For You & comments screen");
			commentcount(2);
			String comments = getText(IOSHipiNeoHomePage.objiosTotalComments);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "comment Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosCommentCount, "Comment count");
			waitTime(2000);
			String comment2 = getText(IOSHipiNeoHomePage.objiosCommentCount);
			String[] comment3 = comment2.split(" ");
			int count9 = Integer.parseInt(comment3[0]);
			if (comments.equals(count9)) {
				logger.info("Count of comments match in both HiPi home screen & comments screen");
				extent.extentLoggerPass("", "Count of comments match in both HiPi home screen & comments screen");
			} else {
				logger.info("Count of comments is not match in both HiPi home screen & comments screen");
				extent.extentLoggerFail("",
						"Count of comments is not match in both HiPi home screen & comments screen");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

//------------------------------N----feb-18---login--p2----------------------------------------------------------------------------------------

	public void LoginOrSignupScreen_T1593_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T1593_Verify if UI/UX are as per the designs");
		System.out.println("T1593_Verify if UI/UX are as per the designs");
		
		verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "Feed Screen");
		waitTime(3000);
		navigateToFirstItemUnderAnyProfileTrayInDiscoverPage("Top Hipi Stars", "No");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.TrayInDiscoverPage("#HipiGOAT"), "#HipiGOAT Hashtag");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
		waitTime(2000);
		BackButton();
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
	}
	}

	public void LoginOrSignupScreen_T880_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T880_Check if Already have an account with this numbner message is displayed and navigate to Login with Phone number scrren Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screenCheck if Already have an account with this numbner message is displayed and navigate to Login with Phone number scrren Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screen");
			System.out.println("T880_Check if Already have an account with this numbner message is displayed and navigate to Login with Phone number scrren Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screenCheck if Already have an account with this numbner message is displayed and navigate to Login with Phone number scrren Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screen");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9481755495", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosAlreadyhaveAnAccountWithThisNumber, 50,
					"Already have An Account With This Number Taost message")) {
				logger.info(
						"Already have an account with this number message is displayed and navigate to Login with Phone Number screen by tapping on Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screen");
				extent.extentLoggerPass("",
						"Already have an account with this number message is displayed and navigate to Login with Phone Number screen by tapping on Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screen");
			} else {
				logger.info(
						"Already have an account with this number message is not displayed and not navigate to Login with Phone Number screen by tapping on Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screen");
				extent.extentLoggerFail("",
						"Already have an account with this number message is not displayed and not navigate to Login with Phone Number screen by tapping on Send OTP CTA when user enter existing Phone number in Sign up with Phone Number screen");
			}

			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T879_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T879_Check if Send OTP CTA is highlighted with red colour when user enter the valid Phone Number in Sign up with Phone Number");
			System.out.println("T879_Check if Send OTP CTA is highlighted with red colour when user enter the valid Phone Number in Sign up with Phone Number");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9481755495", "Phone Number Type");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSendOTPCTAEnabledInLoginWithOTPPage,
					"Send OTP Button Enabled")) {
				logger.info(
						"User is able to see the Send OTP CTA is highlighted  when he entered valid phone number in Sign up with phone number");
				extent.extentLoggerPass("",
						"User is able to see the Send OTP CTA is highlighted  when he entered valid phone number in Sign up with phone number");
			} else {
				logger.info(
						"User is able to see the Send OTP CTA is not highlighted  when he entered valid phone number in Sign up with phone number");
				extent.extentLoggerFail("",
						"User is able to see the Send OTP CTA is not highlighted  when he entered valid phone number in Sign up with phone number");
			}

			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T878_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T878_Check if user is able to remove the entered phone number by tapping on cross icon in Sign up screen for Phone Number");
			System.out.println("T878_Check if user is able to remove the entered phone number by tapping on cross icon in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			String before = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			extent.extentLogger("", "Text present in Phone Number Field before Entering " + before);
			logger.info("Text present in Phone Number Field before Entering " + before);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9481755495", "Phone Number Type");
			waitTime(3000);
			String during = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			extent.extentLogger("", "Text present in Phone Number Field after Entering " + during);
			logger.info("Text present in Phone Number Field after Entering " + during);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCrossIconInPhoneNumberTexFieldInSignUppage, "Cross Icon");
			waitTime(3000);
			String after = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			System.out.println(after);
			extent.extentLogger("", "Text present in Phone Number Field after taping on cross icon " + after);
			logger.info("Text present in Phone Number Field after taping on cross icon " + after);
			waitTime(3000);
			if (before.contentEquals(after)) {
				logger.info("User is able to remove the entered phone number by tapping on cross icon");
				extent.extentLoggerPass("", "User is able to remove the entered phone number by tapping on cross icon");
			} else {
				logger.info("User is not able to remove the entered phone number by tapping on cross icon");
				extent.extentLoggerFail("",
						"User is not able to remove the entered phone number by tapping on cross icon");
			}

			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T877_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T877_Check if user is able to enter the Phone Number in Phone Number field in Sign up screen for Phone Number");
			System.out.println("T877_Check if user is able to enter the Phone Number in Phone Number field in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			String before = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			extent.extentLogger("", "Text present in Phone Number Field before Entering " + before);
			logger.info("Text present in Phone Number Field before Entering " + before);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9481755495", "Phone Number Type");
			waitTime(3000);
			String during = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			extent.extentLogger("", "Text present in Phone Number Field after Entering " + during);
			logger.info("Text present in Phone Number Field after Entering " + during);
			if (before.contentEquals(during)) {
				logger.info("User is not able to enter the Phone Number in the Phone Number field in Sign up screen");
				extent.extentLoggerFail("",
						"User is not able to enter the Phone Number in the Phone Number field in Sign up screen");
			} else {
				logger.info("User is  able to enter the Phone Number in the Phone Number field in Sign up screen");
				extent.extentLoggerPass("",
						"User is  able to enter the Phone Number in the Phone Number field in Sign up screen");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInPhoneNumberTexFieldInSignUppage, "Cross Icon");
			waitTime(3000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T876_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T876_Check if user is navigate to Sign up with Phone Number screen by tapping on cross icon in Select country/region screen");
			System.out.println("T876_Check if user is navigate to Sign up with Phone Number screen by tapping on cross icon in Select country/region screen");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSignUppage, "Sign up Screen")) {
				logger.info("User is navigated to Sign up with Phone number screen by tapping on cross icon");
				extent.extentLoggerPass("",
						"User is navigated to Sign up with Phone number screen by tapping on cross icon");
			} else {
				logger.info("User is not navigated to Sign up with Phone number screen by tapping on cross icon");
				extent.extentLoggerFail("",
						"User is not navigated to Sign up with Phone number screen by tapping on cross icon");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T875_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T875_Check if user is able remove the searched text in search bar by tapping on cross icon in Select country/region screen");
			System.out.println("T875_Check if user is able remove the searched text in search bar by tapping on cross icon in Select country/region screen");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			String before = getText(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage);
			extent.extentLogger("", "Text present in Search Field before Entering " + before);
			logger.info("Text present in Search Field before Entering " + before);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField ");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "India", "Search TextField ");
			waitTime(3000);
			String during = getText(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage);
			extent.extentLogger("", "Text present in Search Field before Entering " + during);
			logger.info("Text present in Search Field before Entering " + during);
			click(IOSHiPiNeoDiscoverPage.objCloseIconInDiscoverPage, "Cross Icon");
			waitTime(3000);
			String after = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
			System.out.println(after);
			extent.extentLogger("", "Text present in Phone Number Field after taping on cross icon " + after);
			logger.info("Text present in Phone Number Field after taping on cross icon " + after);
			if (before.contentEquals(after)) {
				logger.info(
						"User is able to remove the searched text by tapping on cross icon in Select country/region screen");
				extent.extentLoggerPass("",
						"User is able to remove the searched text by tapping on cross icon in Select country/region screen");
			} else {
				logger.info(
						"User is not able to remove the searched text by tapping on cross icon in Select country/region screen");
				extent.extentLoggerFail("",
						"User is not able to remove the searched text by tapping on cross icon in Select country/region screen");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T874_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T874_Check if user is able to search any country/region in Select country/region screen");
			System.out.println("T874_Check if user is able to search any country/region in Select country/region screen");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField ");
			waitTime(3000);
			type(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "India", "Search TextField ");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button In Keyboard");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosIndiaPhoneNumberTextField,
					"Select country region screen")) {
				logger.info("User is able to search any country/region in Select country/region screen");
				extent.extentLoggerPass("Feed",
						"User is able to search any country/region in Select country/region screen");
			} else {
				logger.info("User is not able to search any country/region in Select country/region screen");
				extent.extentLoggerFail("Feed",
						"User is not able to search any country/region in Select country/region screen");
			}
			click(IOSHipiNeoSettingsPage.objiosLogOutButtonInLogoutPOpUp, "Cancel Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home icon");
		}
	}

	// ============================31-01-2022===========================================================

	public void LoginOrSignupScreen_T871_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T871_Check if user is able to see the Select country/region screen after tapping on +91 in Sign up screen for Phone Number");
			System.out.println("T871_Check if user is able to see the Select country/region screen after tapping on +91 in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen")) {
				logger.info("User is able to see the Select country/region screen on tapping +91");
				extent.extentLoggerPass("", "User is able to see the Select country/region screen on tapping +91");
			} else {
				logger.info("User is not able to see the Select country/region screen on tapping +91");
				extent.extentLoggerFail("", "User is not able to see the Select country/region screen on tapping +91");
			}
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(2000);
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T872_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T872_Check if user is able to close the Select country/region screen by tapping on cross icon");
			System.out.println("T872_Check if user is able to close the Select country/region screen by tapping on cross icon");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosSignUppage, "Sign up Screen")) {
				logger.info("User is able to close the Select country/region screen by tapping on cross icon");
				extent.extentLoggerPass("",
						"User is able to close the Select country/region screen by tapping on cross icon");
			} else {
				logger.info("User is not able to close the Select country/region screen by tapping on cross icon");
				extent.extentLoggerFail("",
						"User is not able to close the Select country/region screen by tapping on cross icon");
			}
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginOrSignupScreen_T873_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T873_Check the UI of the Select country/region screen by tapping on +91 in Sign up screen for Phone Number");
			System.out.println("T873_Check the UI of the Select country/region screen by tapping on +91 in Sign up screen for Phone Number");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, " +91 Dropdown Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosIndiaPhoneNumberTextField, "Select country region screen");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoDiscoverPage.objSearchTextFieldInDiscoverPage, "Search TextField ");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField,
					"Select country region screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAlbaniaPhoneNumberTextField,
					"Select country region screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAlgeriaPhoneNumberTextField,
					"Select country region screen");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "Cross icon");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close Button");
			BackButton();
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");
		}
	}

	public void LoginSignupScreen_T884_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T884_Check the UI of verication screen");
			System.out.println("T884_Check the UI of verication screen");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(2000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957234", "Phone Number Type");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosEnter4DigitCodeTextInOTPVerificationPage,
					"Enter 4-digit code text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosYouCodeWasMessagedTextInOTPVerificationPage,
					"Your Code Was Messaged");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP CTA");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPField(1), "OTP Field")) {

				for (int i = 1; i <= 4; i++) {
					verifyElementPresent(IOSHipiNeoProfilePage.objiosOTPField(i), "OTP Field : " + i);
					waitTime(2000);
				}
			}
			verifyElementPresent(IOSHipiNeoProfilePage.objiosHavenotRecivedOTPTextInOTPVerificationPage,
					"Haven't Recieved OTP Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosSendAgainLinkInOTPVerificationPage, "Send again link");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

	public void LoginSignupScreen_T886_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T886_Check the Either OTP is not valid or has expired message is displayed by tapping on Verify OTP when user entered invalid OTP ");
			System.out.println("T886_Check the Either OTP is not valid or has expired message is displayed by tapping on Verify OTP when user entered invalid OTP ");
			
			ClickOnSignUp();
			waitTime(2000);
			datePicker();
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next button after DOB selection");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9845957234", "Phone Number Type");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPField(1), "OTP Field")) {

				for (int i = 1; i <= 4; i++) {
					type(IOSHipiNeoProfilePage.objiosOTPField(i), "0", "OTP Field : " + i);
					waitTime(3000);
				}
			}
			click(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP Button");
			waitTime(500);
			if (verifyElementPresent(IOSHipiNeoProfilePage.objiosOTPErrorToastMessageInLoginPage,
					"OTP Error Message")) {
				logger.info(
						"User is getting the Either OTP is not valid or has expired message by tapping on Verify OTP CTA when user entered invalid OTP");
				extent.extentLoggerPass("Login",
						"User is getting the Either OTP is not valid or has expired message by tapping on Verify OTP CTA when user entered invalid OTP");
			} else {
				logger.info(
						"User is not getting the Either OTP is not valid or has expired message by tapping on Verify OTP CTA when user entered invalid OTP");
				extent.extentLoggerFail("Login",
						"User is not getting the Either OTP is not valid or has expired message by tapping on Verify OTP CTA when user entered invalid OTP");
			}
			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);

			click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
			waitTime(3000);
			verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
		}
	}

//----------------k--------------------feb-19----------------------------------------------------------------------------------------------------------------------------------------------------------

	// ==========================================================Feed_P0============================================

	public void FeedScreen_T097(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T097_Logged in User - Check if user is able to Like/Dislike a multiple video");
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Button")) {
				waitTime(2000);
				PartialSwipeiOS("Up", 1);
				click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Button");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtnInFeedScreen, "Like Button")) {
					logger.info("User able to like/dislike multiple videos");
					extent.extentLoggerPass("", "User able to like/dislike multiple videos");
				} else {
					logger.info("User not able to like/dislike multiple videos");
					extent.extentLoggerFail("", "User not able to like/dislike multiple videos");
				}
			}
		}
	}

	public void FeedScreen_T431(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T431_Logged in User - Check if user is able to view number of likes on played/paused video");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(4000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSTotalLikesBtn, "Total Like")) {
				logger.info("User able to view number of likes for played video");
				extent.extentLoggerPass("", "User able to view number of likes for played video");
			} else {
				logger.info("User not able to view number of likes for played video");
				extent.extentLoggerFail("", "User not able to view number of likes for played video");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Button");
			waitTime(2000);
		}
	}

	public void ScrollUntillFollowButtonDisplay() throws Exception {
		for (int i = 1; i <= 15; i++) {
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button")) {
				PartialSwipeiOS("Up", 1);
			} else {
				System.out.println("Follow Icon (+) is Present");
				break;
			}
		}
	}

	public void FeedScreen_T123(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T123_Logged in User - Check if as a viewer, user is able to follow the creator");
			ScrollUntillFollowButtonDisplay();
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button");
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedTrueInFeedScreen, "Followed Button")) {
				logger.info("Viewer, user able to follow the creator");
				extent.extentLoggerPass("", "Viewer, user able to follow the creator");
			} else {
				logger.info("Viewer, user not able to follow the creator");
				extent.extentLoggerFail("", "Viewer, user not able to follow the creator");
			}
		}
	}

//==========================================================Feed_P2============================================		

	public void FeedScreen_T069_T130(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T069_Guest User - Check if user is able to view \"Network Error\" when he taps on User Name without internet");
		} else {
			extent.HeaderChildNode(
					"T130_Logged in User - Check if user is able to view \"Network Error\" when he taps on User Name without internet");
		}
		wifi("off");
		waitTime(15000);
		click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 15, "Network error")) {
			logger.info("User get network error message when he taps on User Name without internet");
			extent.extentLoggerPass("", "User get network error message when he taps on User Name without internet");
		} else {
			logger.info("User not get network error message when he taps on User Name without internet");
			extent.extentLoggerFail("",
					"User not get network error message when he taps on User Name without internet");
		}
		wifi("on");
		NavigateToHomPage();
	}

	public void FeedScreen_T067_T127(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T067_Guest User - Check if user is able to view \"Network Error\" when he taps on Profile picture without internet");
		} else {
			extent.HeaderChildNode(
					"T127_Logged in User - Check if user is able to view \"Network Error\" when he taps on Profile Picture without internet");
		}
		wifi("off");
		waitTime(15000);
		click(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile Picture");
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError, 15, "Network error")) {
			logger.info("User get network error message when he taps on Profile picture without internet");
			extent.extentLoggerPass("",
					"User get network error message when he taps on Profile picture without internet");
		} else {
			logger.info("User not get network error message when he taps on Profile picture without internet");
			extent.extentLoggerFail("",
					"User not get network error message when he taps on Profile picture without internet");
		}
		wifi("on");
		NavigateToHomPage();
	}

	public void FeedScreen_T068(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T068_Guest User - Check if user is able to navigate to user profile page by tapping on User name in \"For You\" tab");
			String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			waitTime(2000);
			System.out.println(UserName1);
			click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
			waitTime(2000);
			String UserName2 = getText(IOSHipiNeoProfilePage.objiosUserNameBelowNameInFollowerAndFollowingScreen);
			waitTime(2000);
			System.out.println(UserName2);
			if (UserName1.equalsIgnoreCase(UserName2)) {
				logger.info("User navigate to Profile details page by tapping on user name in \"For You\" screen");
				extent.extentLoggerPass("",
						"User navigate to Profile details page by tapping on user name in \"For You\" screen");
			} else {
				logger.info("User not navigate to Profile details page by tapping on user name in \"For You\" screen");
				extent.extentLoggerFail("",
						"User not navigate to Profile details page by tapping on user name in \"For You\" screen");
			}
			NavigateToHomPage();
		}
	}

	public void FeedScreen_T071(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T071_Guest User -  Check if user is not able to follow any profile");
			click(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login Pop Up")) {
				logger.info("Login in to HiPi pop up is displayed");
				extent.extentLoggerPass("", "Login in to HiPi pop up is displayed");
			} else {
				logger.info("Login in to HiPi pop up is not displayed");
				extent.extentLoggerFail("", "Login in to HiPi pop up is not displayed");
			}
			click(IOSHipiNeoProfilePage.objiosCrossIconInLoginSignUpPopUp, "Cross Icon");
			waitTime(2000);
		}
	}

	public void FeedScreen_T078(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T078_Guest User -  Check if user is able to see the total 'Comment' count in Feed screen");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen, "Total Comments")) {
				logger.info("User able to see the Comment count in For You tab");
				extent.extentLoggerPass("", "User able to see the Comment count in For You tab");
			} else {
				logger.info("User not able to see the Comment count in For You tab");
				extent.extentLoggerFail("", "User not able to see the Comment count in For You tab");
			}
		}
	}

	public void FeedScreen_T028(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T028_Logged in User - Check if user is able to see the list of actionable items for a video");
			deleteFollowingInFollowingScreen();
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "+ Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSTotalLikesBtn, "Total Like");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen, "Total Comment");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "Hashtag");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save Look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSSaveLookIcon, "Heart Icon");
			waitTime(2000);
		}
	}

//S				public void FeedScreen_T128(String userType) throws Exception {
//					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
//						extent.HeaderChildNode("T128_Logged in User - Check if user is able to navigate to user profile page by tapping on User name in \"For You\" tab");
//						click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
//						waitTime(2000);
//						if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
//							logger.info( "Profile details screen is displayed");
//							extent.extentLoggerPass("","Profile details screen is displayed");
//						}else {
//							logger.info("Profile details screen is not displayed");
//							extent.extentLoggerFail("", "Profile details screen is not displayed");
//						}
//						NavigateToHomPage();
//					}
//				}

	public void FeedScreen_T093(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T093_Logged in User - Check if user is able to view number of likes on played/paused video");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSTotalLikesBtn, "Total number Of Like");
			waitTime(2000);
		}
	}

	public void FeedScreen_T101(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T101_Logged in User - Check if user is able to follow the user by tapping + icon present on right top of Profile picture");
			System.out.println("T101_Logged in User - Check if user is able to follow the user by tapping + icon present on right top of Profile picture");
			deleteFollowingInFollowingScreen();
			click(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button")) {
				logger.info("Logged in user able to start following by tapping user profile");
				extent.extentLoggerPass("", "Logged in user able to start following by tapping user profile");
			} else {
				logger.info("Logged in user not able to start following by tapping user profile");
				extent.extentLoggerFail("", "Logged in user not able to start following by tapping user profile");
			}
		}
	}

	public void FeedScreen_T102(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T102_Logged in User - Check if user is already followed then follow icon is no longer seen on \"Profile\" icon");
			deleteFollowingInFollowingScreen();
			click(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedTrueInFeedScreen, "Followed Button")) {
				logger.info(
						"Logged in User - user is already followed then follow icon is no longer seen on Profile icon");
				extent.extentLoggerPass("",
						"Logged in User - user is already followed then follow icon is no longer seen on Profile icon");
			} else {
				logger.info(
						"Logged in User - user is already followed then also follow icon is displayed on Profile icon");
				extent.extentLoggerFail("",
						"Logged in User - user is already followed then also follow icon is displayed on Profile icon");
			}
		}
	}

	public void FeedScreen_T096(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T096_Logged in User - Check if user is able to Dislike a video on played/paused video");
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtnInFeedScreen, "Like Button")) {
				logger.info("User able to dislike the video");
				extent.extentLoggerPass("", "User able to dislike the video");
			} else {
				logger.info("User not able to dislike the video");
				extent.extentLoggerFail("", "User not able to dislike the video");
			}
		}
	}

	public void FeedScreen_T014(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T014_Guest User - Check vertical scrolling of \"For you Tab\" section is infinte");
			PartialSwipeiOS("Up", 10);
			waitTime(4000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile Picture")) {
				logger.info("User able to see the videos Unlimited in For You tab ");
				extent.extentLoggerPass("", "User able to see the videos Unlimited in For You tab ");
			} else {
				logger.info("User not able to see the videos Unlimited in For You tab ");
				extent.extentLoggerFail("", "User not able to see the videos Unlimited in For You tab ");
			}

		}
	}

	public void FeedScreen_T066(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T066_Guest User - Check if user is able to see profile picture on the video screen of feed");
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile Picture")) {
				logger.info("User able to see the profile picture");
				extent.extentLoggerPass("", "User able to see the profile picture");
			} else {
				logger.info("User not able to see the profile picture");
				extent.extentLoggerFail("", "User not able to see the profile picture");
			}
		}
	}

	public void FeedScreen_T050(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T050_Logged in User - Check if user is able to view video created by \"original sound\"");
			for (int i = 1; i <= 15; i++) {
//				String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
//				System.out.println(UserName1);
//				String User1 = UserName1.substring(1);
//				System.out.println(User1)
			
				String UserName2 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
				System.out.println(UserName2);
				String[] User2 = UserName2.split("•");
				System.out.println(User2[1]);
				extent.extentLogger("", "the music on feed is "+UserName2);
				if (User2[1].contains("Original")) {
					logger.info("user able to view video created by Userhandle sound ");
					extent.extentLoggerPass("", "user able to view video created by Userhandle sound ");
					break;
				} else {
					PartialSwipeiOS("Up", 1);

				}
			}
		}
	}

	public void FeedScreen_T051(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T051_Logged in User - Check if user is able to view video created by 'existing sound'");
			clickOnFirstSearchedResult("badhaai do", "No", userType);
			waitTime(2000);
			//click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			hideKeyboard();
			waitTime(2000);
			keyboardaction("Enter");
			waitTime(3000);
			
			click(IOSHiPiNeoDiscoverPage.objiosSoundTabInSearchPage, "Sounds Tab");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.SortIconsInSoundTab(2), "sounds");
			waitTime(6000);
			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "video");
			waitTime(2000);
			String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			System.out.println(UserName1);
			String User1 = UserName1.substring(1);
			System.out.println(User1);
			String UserName2 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			System.out.println(UserName2);
			String[] User2 = UserName2.split("- ");
			System.out.println(User2[1]);
			if (!User1.equalsIgnoreCase(User2[1])) {
				logger.info("User able to view video created by existing sound");
				extent.extentLoggerPass("", "User able to view video created by existing sound");
			}
			NavigateToHomPage();
		}
	}

	public void FeedScreen_T396(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T396_Logged in User - Check if user is able view \"Following\" screen");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen, "Following Tab")) {
				logger.info("User able to view Following screen with logged in user");
				extent.extentLoggerPass("", "User able to view Following screen with logged in user");
			} else {
				logger.info("User not able to view Following screen with logged in user");
				extent.extentLoggerFail("", "User not able to view Following screen with logged in user");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T400(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T400_Logged in User - Check the tabs present in Feed key section and also verify Following tab is selected when user tapping on \"Following\" tab");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen, "Following Tab")) {
				logger.info("Following tab is selected");
				extent.extentLoggerPass("", "Following tab is selected");
			} else {
				logger.info("Following tab is not selected");
				extent.extentLoggerFail("", "Following tab is not selected");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T405(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T405_Logged in User -  Check the UI of the \"Following\" tab in \"Feed\" screen");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSShareBtn, "Share Icon");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "Hashtag");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Music");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T427(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T427_Logged in User - Check if user is able to view video created by \"original sound\"");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			for (int i = 1; i <= 15; i++) {
				String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
				System.out.println(UserName1);
				String User1 = UserName1.substring(1);
				System.out.println(User1);
				String UserName2 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
				System.out.println(UserName2);
				String[] User2 = UserName2.split("- ");
				System.out.println(User2[1]);
				if (User1.equalsIgnoreCase(User2[1])) {
					logger.info("user able to view video created by original sound");
					extent.extentLoggerPass("", "user able to view video created by original sound");
					break;
				} else {
					PartialSwipeiOS("Up", 1);

				}
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T432(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T432_Logged in User - Check if user is able to like a video on played/paused video");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			String Like1 = getText(IOSHipiNeoHomePage.objiOSTotalLikesBtn);
			waitTime(2000);
			int Count1 = Integer.parseInt(Like1);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			String Like2 = getText(IOSHipiNeoHomePage.objiOSTotalLikesBtn);
			waitTime(2000);
			int Count2 = Integer.parseInt(Like2);
			if ((verifyElementExist(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Icon"))
					&& (Count1 < Count2)) {
				logger.info("On tapping on  Like icon the video gets liked and  Like count increased");
				extent.extentLoggerPass("", "On tapping on  Like icon the video gets liked and  Like count increased");
			} else {
				logger.info("On tapping on  Like icon the video not gets liked and  Like count not increased");
				extent.extentLoggerFail("",
						"On tapping on  Like icon the video not gets liked and  Like count not increased");
			}
		}
	}

	public void FeedScreen_T433(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T433_Logged in User - Check if user is able to like a video on played/paused video");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Icon")) {
				logger.info("User able to like the video");
				extent.extentLoggerPass("", "User able to like the video");
			} else {
				logger.info("User not able to like the video");
				extent.extentLoggerFail("", "User not able to like the video");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T435(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T435_Logged in User - Check if user is able to Dislike a video on played/paused video");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtnInFeedScreen, "Like Icon")) {
				logger.info("User able to dislike the video");
				extent.extentLoggerPass("", "User able to dislike the video");
			} else {
				logger.info("User not able to dislike the video");
				extent.extentLoggerFail("", "User not able to dislike the video");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T437(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T437_Logged in User - Check if user is able to Like/Dislike a multiple video");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Button");
			waitTime(2000);
			PartialSwipeiOS("Up", 1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikeBtnInFeedScreen, "Like Icon")) {
				logger.info("User able to like/dislike multiple videos");
				extent.extentLoggerPass("", "User able to like/dislike multiple videos");
			} else {
				logger.info("User not able to like/dislike multiple videos");
				extent.extentLoggerFail("", "User not able to like/dislike multiple videos");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T039(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T039_Logged in User - Check that user can switch between the \"Following\" and \"For You\" Section");
			if ((verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button"))
					|| (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedTrueInFeedScreen,
							"Followed Button"))) {
				click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Followin Button");
				waitTime(2000);
				if ((!verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow Button"))
						|| (!verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedTrueInFeedScreen,
								"Followed Button"))) {
					logger.info("User able to switch between both the section");
					extent.extentLoggerPass("", "User able to switch between both the section");
				} else {
					logger.info("User not able to switch between both the section");
					extent.extentLoggerFail("", "User not able to switch between both the section");
				}
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T022(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T022_Logged in User - Check the tabs present in Feed key section and also verify default tab of Feed key section");
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you Tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Tab");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you Tab")) {
				logger.info("For You tab selected by default");
				extent.extentLoggerPass("", "For You tab selected by default");
			} else {
				logger.info("For You tab is not selected by default");
				extent.extentLoggerFail("", "For You tab is not selected by default");
			}
		}
	}

	public void FeedScreen_T010(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T010_Guest User - Check that guest user only can see \"For You\" section videos");
			if ((verifyElementExist(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you Tab"))
					&& (verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen,
							"Follow Button"))) {
				logger.info("Guest user able to see for You section on the feed");
				extent.extentLoggerPass("", "Guest user able to see for You section on the feed");
			} else {
				logger.info("Guest user not able to see for You section on the feed");
				extent.extentLoggerFail("", "Guest user not able to see for You section on the feed");
			}
		}
	}

	public void FeedScreen_T008(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T008_Guest User - Check if \"For You\" tab selected by default in \"Feed\" screen");
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you Tab")) {
				logger.info("User able to see the For You tab selected by default");
				extent.extentLoggerPass("", "User able to see the For You tab selected by default");
			} else {
				logger.info("User not able to see the For You tab selected by default");
				extent.extentLoggerFail("", "User not able to see the For You tab selected by default");
			}
		}
	}

	public void FeedScreen_T461(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T461_Logged in User - Check if 'Profile details' screen is displayed when tapped on Profile picture of a video");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSProfilePictureInFeedScreen, "Profile Picture");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
				logger.info("Profile details screen is displayed");
				extent.extentLoggerPass("", "Profile details screen is displayed");
			} else {
				logger.info("Profile details screen is not displayed");
				extent.extentLoggerFail("", "Profile details screen is not displayed");
			}
			click(IOSHipiNeoProfilePage.objiosBackArrowInPrivateVideo, "Back Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T352_T363(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T352_Guest User -Verify for user is able to view less data for the product by clicking the Less drop down on the panel on Saved moment tab.");
			System.out.println("T352_Guest User -Verify for user is able to view less data for the product by clicking the Less drop down on the panel on Saved moment tab.");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T363_Logged In user -Verify for user is able to view less data for the product by clicking the Less drop down on the panel on Saved moment tab.");
			System.out.println("T363_Logged In user -Verify for user is able to view less data for the product by clicking the Less drop down on the panel on Saved moment tab.");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "save look Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage, "Delete Button");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T018(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T018_Logged in User - Check if user is able view \"Feed\" screen");
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSFeedScreen, "Feed Screen")) {
				logger.info("User able to see the 'Feed' screen,Expected Behaviour");
				extent.extentLoggerPass("", "User able to see the 'Feed' screen,Expected Behaviour");
			} else {
				logger.info("User not able to see the 'Feed' screen");
				extent.extentLoggerFail("", "User not able to see the 'Feed' screen");
			}
		}
	}

	public void FeedScreen_T024(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T024_Logged in User - Check vertical scrolling of \"For you Tab\" section is infinte");
			String Music1 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			waitTime(2000);
			PartialSwipeiOS("Up", 5);
			String Music2 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			waitTime(2000);
			if (!Music1.equalsIgnoreCase(Music2)) {
				logger.info("User able to view any video present and able to perform infinte vertical scrolling");
				extent.extentLoggerPass("",
						"User able to view any video present and able to perform infinte vertical scrolling");
			} else {
				logger.info(
						"User not able to view any video present and not able to perform infinte vertical scrolling");
				extent.extentLoggerFail("",
						"User not able to view any video present and not able to perform infinte vertical scrolling");
			}
		}
	}

	public void FeedScreen_T402_T406(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T402_T406_Logged in User - Check vertical scrolling of \"Following tab\" section is infinte");
			follow();
			click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button");
			waitTime(2000);
			String Music1 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			waitTime(2000);
			PartialSwipeiOS("Down", 5);
			PartialSwipeiOS("Up", 5);
			String Music2 = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
			waitTime(2000);
			if (!Music1.equalsIgnoreCase(Music2)) {
				logger.info("User able to view any video present and able to perform infinte vertical scrolling");
				extent.extentLoggerPass("",
						"User able to view any video present and able to perform infinte vertical scrolling");
			} else {
				logger.info(
						"User not able to view any video present and not able to perform infinte vertical scrolling");
				extent.extentLoggerFail("",
						"User not able to view any video present and not able to perform infinte vertical scrolling");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	public void FeedScreen_T237_T238(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T237_Guest User - Verify for user able to delete saved items idividually after saving multuple products");
		} else {
			extent.HeaderChildNode(
					"T238_User should be able to remove particular product from save moment tab on shop details page.");
		}
		deleteProductsInSavedMoments();
		waitTime(5000);

		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save The Discover");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
		waitTime(2000);
		if (verifyElementPresent(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Shop page pop up")) {
			waitTime(2000);
			verifyElementPresentAndClick(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
			waitTime(2000);
			String totalProducts = getDriver()
					.findElement(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage).getText();
			logger.info("the total number of products in Saved Moments are : " + totalProducts);
			int count = 0;
			for (;;) {
				if (verifyElementDisplayed(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage)) {
					waitTime(2000);
					click(IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage,
							"Deleted Product no :" + count++);
					waitTime(2000);
				} else {
					logger.info("No products found in Saved Moments");
					logger.info("User able to remove particular product from save moment tab on shop details page.");
					extent.extentLoggerPass("",
							"User able to remove particular product from save moment tab on shop details page.");
					break;
				}
			}
		}
		CloseTheShopBar();
		waitTime(2000);
	}

	public void FeedScreen_T231_T196_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T231_Logged In User- Verify for able to save video objects from multiple shoppable videos");
		} else {
			extent.HeaderChildNode(
					"T196_Guest User- Verify for able to save video objects from multiple shoppable videos");
		}

		deleteProductsInSavedMoments();
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save The Discover");
		waitTime(2000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save The Discover");
		waitTime(3000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save The Discover");
		waitTime(2000);
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Save The Discover");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop button");
		waitTime(2000);
		String totalProducts = getDriver().findElement(IOSHiPiNeoShopPage.objiosTotalNosBesideSavedMomentsInShopPage).getText();
		int Products = Integer.parseInt(totalProducts);
		waitTime(2000);
		if (4 <= Products) {
			logger.info(
					"User able to save multiple video objects from different videos and it is saved on Save moments tab in the shop detail page.");
			extent.extentLoggerPass("",
					"User able to save multiple video objects from different videos and it is saved on Save moments tab in the shop detail page.");
		} else {
			logger.info(
					"User not able to save multiple video objects from different videos and it is not saved on Save moments tab in the shop detail page.");
			extent.extentLoggerFail("",
					"User not able to save multiple video objects from different videos and it is not saved on Save moments tab in the shop detail page.");
		}
		CloseTheShopBar();
		waitTime(2000);

	}

//-------------feb--19-------------s---login-----------------------------------------------------------------

	public void Login_SignupScreen_T947(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode("T947_Check the UI of the Sign up screen for Email ");
		System.out.println("T947_Check the UI of the Sign up screen for Email ");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosWhensYourBirthday, "when is your birthday");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosDateBoxInSignupScreen, "date in Sign up Screen");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosMonthBoxInSignupScreen, "Month in Sign up Screen");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosYearBoxInSignupScreen, "Year in Sign up Screen");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage,
				"Back Button in Sign up Screen");
		waitTime(2000);
		verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Button");
	}
	}

	public void Login_SignupScreen_T956(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode("T956_Check if user navigate to sign up with Email screen after tapping on Next CTA");
		System.out.println("T956_Check if user navigate to sign up with Email screen after tapping on Next CTA");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSignupScreen, "Signup screen");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T958(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T958_Check the UI of the Sign up screen for Email");
		System.out.println("T958_Check the UI of the Sign up screen for Email");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSignupScreen, "Signup screen");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Tab");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email Tab");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage,
				"Back Button in Sign up Screen");
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	////////////////////////////////// 1-2-22/////////////////////////////////////////////////////////////////////////
	public void Login_SignupScreen_T960(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T960_Check the Please use valid Email Address message is displayed when user enter invalid email in Sign up screen");
		System.out.println("T960_Check the Please use valid Email Address message is displayed when user enter invalid email in Sign up screen");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
		waitTime(2000);
		type(IOSHipiNeoHomePage.objiOSEmailIdField, "hipineo@gmail.com", "Email Field");
		waitTime(2000);
		hideKeyboard();
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "next button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
		waitTime(2000);
		hideKeyboard();
		type(IOSHipiNeoHomePage.objiosPasswordField, "123456", "Password field");
		waitTime(2000);
		hideKeyboard();
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosInvalidDetails, "Invalid Details");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T962(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T962_Check if user is able to remove the entered Email address by tapping on cross icon in Sign up screen");
		System.out.println("T962_Check if user is able to remove the entered Email address by tapping on cross icon in Sign up screen");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
		waitTime(2000);
		type(IOSHipiNeoHomePage.objiOSEmailIdField, "hipineo@mailnesia.com", "Email Field");
		verifyElementPresent(IOSHipiNeoProfilePage.objiosClearTextInLoginScreen, "clear text");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T963(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T963_Chech the Next CTA is highlited with red colour when user enter new email address in sign up screen");
		System.out.println("T963_Chech the Next CTA is highlited with red colour when user enter new email address in sign up screen");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
		waitTime(2000);
		type(IOSHipiNeoHomePage.objiOSEmailIdField, "hipineo@mailnesia.com", "Email Field");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "next button");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T972(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T972_Check the Complete CTA is highlited with red colour in Sign up screen when user enter valid data");
		System.out.println("T972_Check the Complete CTA is highlited with red colour in Sign up screen when user enter valid data");
		
		waitTime(2000);
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
		waitTime(2000);
		type(IOSHipiNeoHomePage.objiOSEmailIdField, "hipineo123@mailnesia.com", "Email Field");
		waitTime(2000);
		hideKeyboard();
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "next button");
		waitTime(2000);
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
		waitTime(2000);
		type(IOSHipiNeoHomePage.objiosPasswordField, "123456", "Password field");
		waitTime(2000);
		hideKeyboard();
		verifyElementPresent(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");
		waitTime(2000);
		NavigateToHomPage();
	}
	}
	/////////////////////////////// 2-2-22//////////////////////////////////////////////
	public void Login_SignupScreen_T921(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T921_Check if user is able to search any country/region in Select country/region screen");
		System.out.println("T921_Check if user is able to search any country/region in Select country/region screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSelectCountryInSignUpScreen,
				"Select country region screen");
		waitTime(3000);
		// click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown
		// Button");
		// waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchCountry, "search countrty");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close");
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T922(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T922_Check if user is able remove the searched text in search bar by tapping on cross icon in Select country/region screen");
		System.out.println("T922_Check if user is able remove the searched text in search bar by tapping on cross icon in Select country/region screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosSelectCountryInSignUpScreen,
				"Select country region screen");
		waitTime(3000);
		// click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown
		// Button");
		// waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchCountry, "search countrty");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosSearchCountry, "India", "search field");
		waitTime(3000);
		verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosClearTextInLoginScreen, "Clear text");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosCancelInCountry, "Cancel");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close");
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T923(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T923_Check if user is navigate to Sign up with Phone Number screen by tapping on cross icon in Select country/region screen");
		System.out.println("T923_Check if user is navigate to Sign up with Phone Number screen by tapping on cross icon in Select country/region screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown Button");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchCountry, "search countrty");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSignupScreen, "Signup screen");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T924(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T924_Check if user is able to enter the new Phone Number in Phone Number field in Sign up screen for Phone Number");
		System.out.println("T924_Check if user is able to enter the new Phone Number in Phone Number field in Sign up screen for Phone Number");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "94823456", "Phone Number Type");
		waitTime(3000);
		String PhoneNum = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
		System.out.println(PhoneNum);
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T925(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T925_Check if Send OTP CTA is highlighted with red colour when user enter the valid Phone Number in Sign up with Phone Number");
		System.out.println("T925_Check if Send OTP CTA is highlighted with red colour when user enter the valid Phone Number in Sign up with Phone Number");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "94823456", "Phone Number Type");
		waitTime(3000);
		String PhoneNum = getText(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage);
		System.out.println(PhoneNum);
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T926(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T926_Check if user navigative to Verification screen by tapping on Send OTP CTA");
		System.out.println("T926_Check if user navigative to Verification screen by tapping on Send OTP CTA");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		String num = "0" + RandomIntegerGenerator(9);
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(3000);
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP Button")) {
			logger.info("User is navigated to verification screen after tapping on Send OTP CTA");
			extent.extentLoggerPass("Login", "User is navigated to verification screen after tapping on Send OTP CTA");
		} else {
			logger.info("User is not navigated to verification screen after tapping on Send OTP CTA");
			extent.extentLoggerFail("Login",
					"User is not navigated to verification screen after tapping on Send OTP CTA");
		}
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T902_T931_T932(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T902_T931_T932Check the Either OTP is not valid or has expired message is displayed by tapping on Verify OTP when user entered invalid OTP ");
		System.out.println("T902_T931_T932Check the Either OTP is not valid or has expired message is displayed by tapping on Verify OTP when user entered invalid OTP ");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		// click(IOSHipiNeoProfilePage.objiosLoginWithOTPLinkInLogInPage, "Log in With
		// OTP Link");
		// waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		String num = "0" + RandomIntegerGenerator(9);
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPField(1), "OTP Field")) {
			for (int i = 1; i <= 4; i++) {
				type(IOSHipiNeoProfilePage.objiosOTPField(i), "0", "OTP Field : " + i);
				waitTime(3000);
			}
		}
		click(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "Verify OTP Button");
		waitTime(500);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosOTPErrorToastMessageInLoginPage, "OTP Error Message")) {
			logger.info("User not get the valid code message after tapping on Verify OTP CTA in Verification screen");
			extent.extentLoggerFail("Login",
					"User not get the valid code message after tapping on Verify OTP CTA in Verification screen");
		} else {
			logger.info("User get the Invalid code message after tapping on Verify OTP CTA in Verification screen");
			extent.extentLoggerPass("Login",
					"User get the Invalid code message after tapping on Verify OTP CTA in Verification screen");
		}
		verifyElementPresent(IOSHipiNeoProfilePage.objiosInvalidOtp, "Invaid otp");
		waitTime(3000);
		NavigateToHomPage();
	}
	}
	

	//////////////////////////////////////////////////// 3-2-21/////////////////////////////////////////////////////////////////
	public void Login_SignupScreen_T906(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T906_Check if user is able to navigate to Sign up screen after tapping on Use Phone or Email CTA ");
		System.out.println("T906_Check if user is able to navigate to Sign up screen after tapping on Use Phone or Email CTA ");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSignupScreen, "Signup screen");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T919(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T919_Check if user is able to close the Select country/region screen by tapping on cross icon ");
		System.out.println("T919_Check if user is able to close the Select country/region screen by tapping on cross icon ");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown Button");
		waitTime(3000);
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close")) {
			logger.info("User is able to close the Select country/region screen by tapping on cross icon");
		} else {
			logger.info("User is not able to close the Select country/region screen by tapping on cross icon");
		}
		click(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T920(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T920_Check the UI of the Select country/region screen by tapping on +91 in Sign up screen for Phone Number	");
		System.out.println("T920_Check the UI of the Select country/region screen by tapping on +91 in Sign up screen for Phone Number	");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosDropdownBtndInLogInPage, "Dropdown Button");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSearchCountry, "search countrty");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosAfghanistanPhoneNumberTextField, "Afghanistan");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosAlbaniaPhoneNumberTextField, "Albania")) {
			logger.info("countrys list are present");
		} else {
			logger.info("country list is not present");
		}
		verifyElementPresentAndClick(IOSHipiNeoProfilePage.objiosCloseButtonInCountryRegionDropdown, "close");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T964(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T964_Check if user navigate to Sign up screen by tapping on Next CTA in SIgn up screen");
		System.out.println("T964_Check if user navigate to Sign up screen by tapping on Next CTA in SIgn up screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosEmailTabInLogInPage, "Email");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosEmailAddressTextFieldInLogInPage, "kittykiran@gmail.com", "user name");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "next button");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSignupScreen, "sign up screen")
				&& (verifyElementPresent(IOSHipiNeoProfilePage.objiosFullNameTextFieldInSignUpScreen, "Fullname"))) {
			logger.info("User able to navigate to sign up page");
			extent.extentLoggerPass("", "User able to navigate to sign up page");

		} else {
			logger.info("User is not  able to navigate to sign up page");
			extent.extentLoggerFail("", "User is not  able to navigate to sign up page");
		}
		NavigateToHomPage();
		}
	}
	/////////////////////////// 4-1-22/////////////////////////////////////////////////////////////////

	public void Login_SignupScreen_T887(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode("T887_Check if user get OTP by tapping on Send again link in verification screen");
		System.out.println("T887_Check if user get OTP by tapping on Send again link in verification screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		String num = "0" + RandomIntegerGenerator(9);
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainCode,100, "send again");
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSendAgainCode, "Send again code")) {
			click(IOSHipiNeoProfilePage.objiosSendAgainCode, "Send again code");
		}
		waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainCode,100, "send again");
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosSendAgainCode, "Send again code")) {
			logger.info("User able to get the OTP by tapping on Send again link");
			extent.extentLoggerPass("", "User able to get the OTP by tapping on Send again link");
		} else {
			logger.info("User not able to get the OTP by tapping on Send again link");
			extent.extentLoggerFail("", "User not able to get the OTP by tapping on Send again link");
		}
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T890(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T890_Check if user is able to see the Resend code along with time in verification screen");
		System.out.println("T890_Check if user is able to see the Resend code along with time in verification screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "94823456", "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainCode, 100, "send again");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosSendAgainCode, "send again")) {
			String text = getText(IOSHipiNeoProfilePage.objiosSendAgainCode);
			String text2 = text.substring(16, 17);
			System.out.println(text2);
		}
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T894_T898(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T894_T898_Check the UI of the forgot Password Reset Screen for Phone number");
		System.out.println("T894_T898_Check the UI of the forgot Password Reset Screen for Phone number");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9482310747", "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		click(IOSHipiNeoProfilePage.objiosLoginWithPasswordLinkInLogInPage, "Login with password");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot paassword");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosForgotPasswordTextInResetpage,
				"Forgot password in reset poge");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosSMSYouTextInResetpage, "SMS Text");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosResetCTAEnabledInResetpage, "Reset Button Enabled");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objios91Textindropdown, "+91");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosClearTextInLoginScreen, "clear text");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInResetPage, "Phone Number Text Field");
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T899(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T899_Check if user navigate to Verification screen after tapping on Reset CTA in Reset with Phone number screen");
		System.out.println("T899_Check if user navigate to Verification screen after tapping on Reset CTA in Reset with Phone number screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9482310758", "Phone Number Type");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		click(IOSHipiNeoProfilePage.objiosBackButtonInLoginPage, "Back Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosLoginWithPasswordLinkInLogInPage, "Login with password");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot paassword");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset Page");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset button");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosResendCode, "Resend code")) {
			logger.info("User is navigate to verification screen after tapping on Reset CTA");
			extent.extentLoggerPass("", "User is navigate to verification screen after tapping on Reset CTA");

		} else {
			logger.info("User is not navigate to verification screen after tapping on Reset CTA");
			extent.extentLoggerFail("", "User is not navigate to verification screen after tapping on Reset CTA");
		}
		NavigateToHomPage();

	}
	}

	public void Login_SignupScreen_T900(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T900_Check the UI of verification screen for OTP");
		System.out.println("T900_Check the UI of verification screen for OTP");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9482310747", "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		click(IOSHipiNeoProfilePage.objiosLoginWithPasswordLinkInLogInPage, "Login with password");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosForgotPasswordLinkInLoginPage, "Forgot paassword");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosResetInResetPage, "Reset button");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosEnter4DigitCodeTextInOTPVerificationPage, "4 digit code");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "verify otp");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosResendCode, "Resend Code");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	//////////////////////////////////// 7-2-22/////////////////////////////////////////////////////////////////////////
	public void Login_SignupScreen_T928(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T928_Check the UI of verification screen for OTP");
		System.out.println("T928_Check the UI of verification screen for OTP");
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		String num = "0" + RandomIntegerGenerator(9);
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosResendCode, "Resend Code");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosEnter4DigitCodeTextInOTPVerificationPage, "4 digit code");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosVerifyOTPButtonInLoginPage, "verify otp");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosYourCodeWasMessagesInSignUpScreen, "Your code message");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T1010(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T1010_Check the UI of the list of google account which are present on the device.");
		System.out.println("T1010_Check the UI of the list of google account which are present on the device.");
		
		ClickOnSignUp();
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
		waitTime(2000);
		ThirdpartyAppSignInPopup();
		verifyElementPresent(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts, "google Account");
		waitTime(3000);
		String GoogleAccountList = getText(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts);
		System.out.println(GoogleAccountList);
		verifyElementPresent(IOSHipiNeoHomePage.objiosTermofSerivceInGoogleAccount, "Term Of Service");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiosUseAnotherAccount, "use another account");
		waitTime(2000);
		verifyElementPresent(IOSHipiNeoHomePage.objiosPrivacyPolicy, "Privacy Policy");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T1009(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T1009_Check if user is able to see the list of google account pop-up which are present on the device by tapping on Continue with Google CTA");
		System.out.println("T1009_Check if user is able to see the list of google account pop-up which are present on the device by tapping on Continue with Google CTA");
		
		ClickOnSignUp();
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
		waitTime(2000);
		ThirdpartyAppSignInPopup();
		verifyElementPresent(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts, "google Account");
		waitTime(3000);
		String GoogleAccountList = getText(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts);
		System.out.println(GoogleAccountList);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosVerifyListofGoogleAccounts, "google Account")) {
			logger.info("User is able to see the list of google account which are present on the device.");
			extent.extentLoggerPass("",
					"User is able to see the list of google account which are present on the device.");

		} else {
			logger.info("User is not able to see the list of google account which are present on the device.");
			extent.extentLoggerFail("",
					"User is not able to see the list of google account which are present on the device.");
		}
		click(IOSHipiNeoHomePage.objiosCancelTheGoogle, "cancel the page");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
		waitTime(2000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T930_P0(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode("T930Check if user is able to request multiple OTPs");
		System.out.println("T930Check if user is able to request multiple OTPs");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		String num = "0" + RandomIntegerGenerator(9);
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, num, "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainCode, 100, "send again");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosSendAgainCode, "send again")) {
			logger.info("User is able to request multiple OTPs");
			extent.extentLoggerPass("", "User is able to request multiple OTPs");

		} else {
			logger.info("User is not able to request multiple OTPs");
			extent.extentLoggerFail("", "User is not able to request multiple OTPs");
		}
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T888_P2(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T888_Check if user is able to request multiple OTPs");
		System.out.println("T888_Check if user is able to request multiple OTPs");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "94345678", "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(8000);
		waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSendAgainCode, 100, "send again");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosSendAgainCode, "send again")) {
			logger.info("User is able to request multiple OTPs");
			extent.extentLoggerPass("", "User is able to request multiple OTPs");

		} else {
			logger.info("User is not able to request multiple OTPs");
			extent.extentLoggerFail("", "User is not able to request multiple OTPs");
		}
		NavigateToHomPage();
	}
	}

	//////////////////////////// 8-2-22///////////////////////////////////////////////
	public void LoginSignupScreen_T981(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode("T981_Check the UI of Login Page of Facebook ");
		System.out.println("T981_Check the UI of Login Page of Facebook ");
		
		ClickOnSignUp();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosContinueWithFacebookButtonInLoginInToHiPIPopUp,
				"Continue With Facebook Button");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosFBallowPopUpContinueCTA, "Continue Button in popup");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosMobileNumberOrEmailId, "Phone Number orEmail id");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosfacebookPassword, "facebook password");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosLogInFacebook, "LogIn faceboook account");
		waitTime(3000);
		verifyElementPresent(IOSHipiNeoProfilePage.objiosCreateAccountInFacebookPage, "Create Account");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosfacebookSiteCancelCTAInHipi, "cancel");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "CloseBtn");
		waitTime(3000);
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T889(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		extent.HeaderChildNode(
				"T889_Check if user is able to see the Resend code along with time in verification screen");
		System.out.println("T889_Check if user is able to see the Resend code along with time in verification screen");
		
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9876576545", "Phone Number Type");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosOtpSentSuccessfully, 50 ,"objiosOtpSentSuccessfully")) {
			logger.info("User get the message OTP sent successfully by tapping on Send again link");
			extent.extentLoggerPass("", "User get the message OTP sent successfully by tapping on Send again link");

		} else {
			logger.info("User is not get the message OTP sent successfully by tapping on Send again link");
			extent.extentLoggerFail("",
					"User is not get the message OTP sent successfully by tapping on Send again link");
		}
		NavigateToHomPage();
	}
	}

	public void Login_SignupScreen_T867_T914_T954(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode(
				"T867_T914_T954Check if Next CTA is highlighted with red colour when user scroll any fileld like date month and year in sign up screen");
		System.out.println("T867_T914_T954Check if Next CTA is highlighted with red colour when user scroll any fileld like date month and year in sign up screen");
		
		ClickOnSignUp();
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "phone or email");
		waitTime(2000);
		ScrollYear(2, "down");
		ScrollYear(1, "up");
		waitTime(2000);
		if (verifyElementPresent(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button")) {
			logger.info("User is able to see the Next CTA is highlighted");
			extent.extentLoggerPass("", "User is able to see the Next CTA is highlighted");
		} else {
			logger.info("User is not able to see the Next CTA is highlighted");
			extent.extentLoggerFail("", "User is not able to see the Next CTA is highlighted");
		}
		NavigateToHomPage();
		}
	}
		
		

//--------------------------------------------------------------------------------------------------------------
	public void FeedScreen_T134(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T134_Logged in User - Check if user is able to add and post comment by entering description in text field");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(8000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
//							click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//							waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			String[] Text2 = Comment.split(" ");
			System.out.println(Text2[0]);
			System.out.println(Text2[1]);
			System.out.println(Text2[2]);
			System.out.println(Text2[3]);
			String Text3 = Text2[1] + " " + Text2[2] + " " + Text2[3];
			System.out.println(Text3);
			String Time = "few seconds ago";
			if ((Text1.equalsIgnoreCase(Text2[0])) && (Time.equalsIgnoreCase(Text3))) {

				logger.info(
						"Comment is added with the typed description on the top [with time display as - just now or few seconds ago]");
				extent.extentLoggerPass("",
						"Comment is added with the typed description on the top [with time display as - just now or few seconds ago]");
			} else {
				logger.info(
						"Comment is not added with the typed description on the top [with time display as - just now or few seconds ago]");
				extent.extentLoggerFail("",
						"Comment is not added with the typed description on the top [with time display as - just now or few seconds ago]");

			}
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T136(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T136_Logged in User - Check if user is able to perform vertical scroll");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			PartialSwipeiOS("Up", 1);
			waitTime(10000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			PartialCommentsSwipe("DOWN", 5);
			waitTime(3000);
			String Text1 = getText(IOSHipiNeoHomePage.UserNameInCommentScreen(1));
			System.out.println(Text1);
			PartialSwipeiOS("Up", 1);
			if (!verifyElementExist(IOSHipiNeoHomePage.UserNameXpath(Text1), "User Name")) {
				logger.info("User allowed to perform vertical scroll.");
				extent.extentLoggerPass("", "User allowed to perform vertical scroll.");
			} else {
				logger.info("User not allowed to perform vertical scroll.");
				extent.extentLoggerFail("", "User not allowed to perform vertical scroll.");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}
	/* comment count needed */

	public void commentcount(int k) throws Exception {
		extent.extentLogger("", "Selecting comment where comment count is more than :" + k);
		logger.info("Selecting comment where comment count is more than :" + k);
		for (int i = 1; i <= 20; i++) {

			String comment = getText(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen);
			System.out.println(comment);
			String[] com = comment.split(" ");
			System.out.println(com[0]);
			int comment1 = Integer.parseInt(com[0]);
			if (k < comment1) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(2000);
				extent.extentLogger("", "clicked on comment where comment count is more than :" + k);
				logger.info("clicked on comment where comment count is more than :" + k);
				break;
			} else {
				PartialSwipeiOS("Up", 1);
			}
		}
	}

	public void FeedScreen_T144(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {

			extent.HeaderChildNode(
					"T144_Logged in User - On existing comments check 'time' on every comment present on the video");
			System.out.println(
					"T144_Logged in User - On existing comments check 'time' on every comment present on the video");

//			for (int i = 1; i <= 20; i++) {
//				String comment = getText(IOSHipiNeoHomePage.objiosCommentCount);
//				System.out.println(comment);
//				String[] com = comment.split(" ");
//				System.out.println(com[0]);
//				int comment1 = Integer.parseInt(com[0]);
//				if (3 < comment1) {
//					click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
//					waitTime(2000);
//					break;
//				} else {
//					PartialSwipeiOS("Up", 1);
//				}
//			}
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
			if ((verifyElementExist(IOSHipiNeoHomePage.objiOSHoursAgoInCommentScreen, "Hours"))
					|| (verifyElementExist(IOSHipiNeoHomePage.objiOSMonthsAgoInCommentScreen, "Months"))
					|| (verifyElementExist(IOSHipiNeoHomePage.objiOSDaysAgoInCommentScreen, "days"))) {
				logger.info("User able to view time of comment of another viewer");
				extent.extentLoggerPass("", "User able to view time of comment of another viewer");
			} else {
				logger.info("User not able to view time of comment of another viewer");
				extent.extentLoggerFail("", "User not able to view time of comment of another viewer");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T145(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T145_Logged in User - Check display of latest comment appears on top and time is changed after few min");
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			clickOnCommentBtn();
			waitTime(3000);
//							click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//							waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(3000);
			PartialCommentsSwipe("Down", 1);
			waitTime(3000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSJustNowInCommentScreen, "Few seconds ago")) {
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
				waitTime(60000);
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(2000);

				if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, 50, "Minutes")) {
					logger.info("Display of comment time is changed from 'just now' to <numberof min> minutes ago");
					extent.extentLoggerPass("",
							"Display of comment time is changed from 'just now' to <numberof min> minutes ago");
				} else {
					logger.info("Display of comment time is not changed from 'just now' to <numberof min> minutes ago");
					extent.extentLoggerFail("",
							"Display of comment time is not changed from 'just now' to <numberof min> minutes ago");
				}
			} else {
				logger.info("Just Now is not displayed");
				extent.extentLoggerFail("", "Just Now is not displayed");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T077(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T077_Guest User -  Check if user is able to tap on 'Comment' icon in 'Feed' scrren and login pop-up is display");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
				logger.info("Login in to HiPi is displayed");
				extent.extentLoggerPass("", "Login in to HiPi is displayed");
			} else {
				logger.info("Login in to HiPi is not displayed");
				extent.extentLoggerFail("", "Login in to HiPi is not displayed");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T137(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T137_Logged in User - Check if user is able to add multiple comments");
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
//						click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//						waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment1 = Comment.split(" ");
			System.out.println(Comment1[0]);
			waitTime(4000);
//						click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//						waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen, "ABCD", "ABCD");
			waitTime(10000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment2 = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment3 = Comment2.split(" ");
			System.out.println(Comment3[0]);
			waitTime(2000);
			if ((Text1.equalsIgnoreCase(Comment1[0])) && (Text2.equalsIgnoreCase(Comment3[0]))) {
				logger.info("User able to add multiple comments");
				extent.extentLoggerPass("", "User able to add multiple comments");
			} else {
				logger.info("User not able to add multiple comments");
				extent.extentLoggerFail("", "User not able to add multiple comments");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T151(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T151_Logged in User - Check if user is able to tag user in comment and then post comment");
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "@Himanshi",
					"@Himanshi is first half name of the user need to tag");
			waitTime(5000);

			type(IOSHipiNeoHomePage.objiOSAddedCommentBoxInCommentScreen, "khur",
					"khur is second half name of the user need to tag");
			waitTime(4000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSSuggestedUserNameInCommentScreen("@Himanshikhurana"));
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSSuggestedUserNameInCommentScreen("@Himanshikhurana"), "User Name");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(2000);
			String text2 = Text2.trim();
			System.out.println(text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment1 = Comment.split(" ");
			System.out.println(Comment1[0]);
			waitTime(4000);
			if ((Text1.equalsIgnoreCase(text2)) && (text2.equalsIgnoreCase(Comment1[0]))) {
				logger.info("User able to tag user in comment and then post comment");
				extent.extentLoggerPass("", "User able to tag user in comment and then post comment");
			} else {
				logger.info("User not able to tag user in comment and then post comment");
				extent.extentLoggerFail("", "User not able to tag user in comment and then post comment");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T152(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T152_Logged in User - Check if related hashtag suggestion displayed while adding a hashtag and then post comment");
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "#Himanshi",
					"#Himanshi is first half name of the user need to tag");
			waitTime(5000);
			type(IOSHipiNeoHomePage.objiOSAddedCommentBoxInCommentScreen, "khur",
					"khur is second half name of the user need to tag");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSSuggestedHashTagInCommentScreen("#HimanshiKhurana"));
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSSuggestedHashTagInCommentScreen("#HimanshiKhurana"), "User Name");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(2000);
			String text2 = Text2.trim();
			System.out.println(text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment1 = Comment.split(" ");
			System.out.println(Comment1[0]);
			waitTime(4000);
			if ((Text1.equalsIgnoreCase(text2)) && (text2.equalsIgnoreCase(Comment1[0]))) {
				logger.info("User able to add a hashtag and post comment");
				extent.extentLoggerPass("", "User able to add a hashtag and post comment");
			} else {
				logger.info("User not able to add a hashtag and post comment");
				extent.extentLoggerFail("", "User not able to add a hashtag and post comment");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}
	
	public void clickOnCommentBtn() throws Exception {
		
		for(int i = 1; i <= 15; i++) {
			if(!verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button")) {
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			}else {
				break;
			}
			}
		
		
	}

	public void FeedScreen_T156(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T156_Logged in User - Check if user is able to see like count of a comment");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);

			for (int i = 1; i <= 20; i++) {
				String comment = getText(IOSHipiNeoHomePage.objiosCommentCount);
				System.out.println(comment);
				String[] com = comment.split(" ");
				System.out.println(com[0]);
				int comment1 = Integer.parseInt(com[0]);
				if (3 < comment1) {
					waitTime(5000);
					click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
					
					waitTime(2000);
					break;
				} else {
					PartialSwipeiOS("Up", 1);
				}
			}
			
			clickOnCommentBtn();
			
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSTotalLikesInCommentScreen, "Like Counts")) {
				logger.info("User able to see like count of a comment");
				extent.extentLoggerPass("", "User able to see like count of a comment");
			} else {
				logger.info("User not able to see like count of a comment");
				extent.extentLoggerFail("", "User not able to see like count of a comment");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T161(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T161_Logged in User - Check if user is able to view 'Network Error' when he taps on Comment icon without internet");
			wifi("Off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,10,"Network Error")) {
				logger.info("User getting network error message when he taps on Comment icon without internet");
				extent.extentLoggerPass("",
						"User getting network error message when he taps on Comment icon without internet");
			} else {
				logger.info("User not getting network error message when he taps on Comment icon without internet");
				extent.extentLoggerFail("",
						"User not getting network error message when he taps on Comment icon without internet");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			wifi("On");
			waitTime(2000);
		}
	}

	public void FeedScreen_T157(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T157_Logged in User - Check if user is able to like/dislike mutiple comments");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			PartialCommentsSwipeiOS("down", 1);
			unlikeComments(5);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "Like Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikedIconInCommentScreen(2), "Liked Icon");
			waitTime(2000);
			if ((verifyElementExist(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "Like Icon"))
					&& (verifyElementExist(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon"))) {
				logger.info("User able to like/dislike");
				extent.extentLoggerPass("", "User able to like/dislike");
			} else {
				logger.info("User not able to like/dislike");
				extent.extentLoggerFail("", "User not able to like/dislike");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void unlikeComments(int Count) throws Exception {
		for (int i = 1; i <= Count; i++) {
			if (verifyElementExist(IOSHipiNeoHomePage.LikedIconInCommentScreen(i), "Liked Icon")) {
				click(IOSHipiNeoHomePage.LikedIconInCommentScreen(i), "Liked Icon");
				waitTime(1000);
			} else {
				logger.info("No liked Icon");
				extent.extentLogger("", "No liked Icon");
			}
		}
	}

	public void FeedScreen_T160(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T160_Logged in User - Check user is able to view existing comments added by creator about a month ago");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			for (int i = 1; i <= 50; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSMonthsAgoInCommentScreen, "Months")) {
					logger.info("User is able to view existing comments added by creator about a month ago");
					extent.extentLoggerPass("",
							"User is able to view existing comments added by creator about a month ago");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T159(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T159_Logged in User - Check user is able to view existing comments added by creator about a week ago");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSWeekAgoInCommentScreen, "Week")) {
					logger.info("User is able to view existing comments added by creator about a week ago");
					extent.extentLoggerPass("",
							"User is able to view existing comments added by creator about a week ago");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
		}
	}

	public void FeedScreen_T133(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T133_Logged in User - Check the layout of comment screen");
			logger.info("T133_Logged in User - Check the layout of comment screen");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you tab selected");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			String comment = getText(IOSHipiNeoHomePage.objiosCommentCount);
			System.out.println(comment);
			String[] com = comment.split(" ");
			System.out.println(com[0]);
			int comment1 = Integer.parseInt(com[0]);
			logger.info("The total comment counts in comment section is : " + comment1);
			extent.extentLoggerPass("", "The total comment counts in comment section is : " + comment1);
			waitTime(3000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSWeekAgoInCommentScreen, "Week")) {
					logger.info("User is able to view existing comments added by creator about a week ago");
					extent.extentLoggerPass("",
							"User is able to view existing comments added by creator about a week ago");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);

			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, generateRandomString(5), "Random String");
			waitTime(4000);
			String comt = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			logger.info("The typed comment in Add comment section is : " + comt);
			extent.extentLoggerPass("", "The typed comment in Add comment section is : " + comt);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
			waitTime(4000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSJustNowInCommentScreen, " Latest comment");
			String Comment1 = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			String[] TextF = Comment1.split(" ");
			System.out.println(TextF[0]);
			System.out.println(TextF[1]);
			System.out.println(TextF[2]);
			System.out.println(TextF[3]);
			String Textg = TextF[1] + TextF[2] + TextF[3];
			System.out.println(Textg);
			extent.extentLoggerPass("", "For the comment added just now the time is showing as " + Textg
					+ " in top of the comment section");

			verifyElementPresent(IOSHipiNeoHomePage.UserNameInCommentScreen(1), "Username in comment section");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1),
					"comment Description in comment section");
			waitTime(3000);

			String Comment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1)).getAttribute("value");

			String[] Text2 = Comment.split(" ");
			System.out.println(Text2[0]);
			System.out.println(Text2[1]);
			System.out.println(Text2[2]);
			System.out.println(Text2[3]);
			String Text3 = Text2[1] + Text2[2] + Text2[3];
			logger.info("The comment time mentioned beside the comment is " + Text3);
			extent.extentLogger("", "The comment time mentioned beside the comment is " + Text3);
			waitTime(3000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.AnyLikeIconInCommentScreen, "Like button")) {
					logger.info("User is able to view Like button beside comments added by creators");
					extent.extentLoggerPass("", "User is able to view Like button beside comments added by creators");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.AnyLikedIconInCommentScreen, "Like button")) {
					logger.info("User is able to view Liked button beside comments added by creators");
					extent.extentLoggerPass("", "User is able to view Liked button beside comments added by creators");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);

			verifyElementPresent(IOSHipiNeoHomePage.AnyLikecountbelowComment, "Like count");
			waitTime(3000);
			String LikeCount = getText(IOSHipiNeoHomePage.LikecountbelowComment(2));
			logger.info("Like count given under like button is " + LikeCount);
			extent.extentLoggerPass("", "Like count given under like button is " + LikeCount);
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add Comment label");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T138(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T138_Logged in User - Check if user is able to add a smilie and post comment");
			logger.info("T138_Logged in User - Check if user is able to add a smilie and post comment");
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {
					click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add comment");
					waitTime(3000);
					click(IOSHipiNeoHomePage.EmojiInKeyBoardBtn, "Emoji in Keyboard");
					waitTime(3000);
					click(IOSHipiNeoHomePage.OneOFEmojisInKeyBoardBtn(1), "First emoji");
					waitTime(3000);
					String emoji = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
					logger.info("the added emoji in comment text field is :" + emoji);
					extent.extentLogger("", "the added emoji in comment text field is :" + emoji);
					waitTime(2000);
					click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
					waitTime(3000);

					String Comment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1))
							.getAttribute("value");

					String[] Text2 = Comment.split(" ");
					System.out.println(Text2[0]);
					System.out.println(Text2[1]);
					System.out.println(Text2[2]);
					System.out.println(Text2[3]);
					String Text3 = Text2[0];
					if (Text3.equalsIgnoreCase(emoji)) {
						logger.info("user able to add a smilie and post comment successfully");
						extent.extentLoggerPass("", "user able to add a smilie and post comment successfully");
					} else {
						logger.info("user not able to add a smilie and post comment");
						extent.extentLoggerFail("", "user not able to add a smilie and post comment");
					}
					break;

				} else {
					logger.info("Comment disabled");
					PartialSwipeiOS("UP", 1);

				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close");
			waitTime(3000);

		}
	}

	public void FeedScreen_T139(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T139_Logged in User - Check if user is unable to add a GIF/Image from keypad and post comment");
			logger.info(
					"T139_Logged in User - Check if user is unable to add a GIF/Image from keypad and post comment");
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {
					click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add comment");
					waitTime(3000);

					if (verifyElementExist(IOSHipiNeoHomePage.objiosGifOrimage, "Gif/Image")) {
						logger.info("user able to add a Gif/Image and post comment ");
						extent.extentLoggerFail("", "user able to add a Gif/Image and post comment ");
					} else {
						logger.info("user not able to add a Gif/Image and post comment");
						extent.extentLoggerPass("", "user not able to add a Gif/Image and post comment");

					}
					break;

				} else {
					logger.info("Comment disabled");
					PartialSwipeiOS("UP", 1);

				}

			}
			hideKeyboard();
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T149(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T149_Logged in User - Check if user is able to add URL and URL is visible as plain text(no hyperlink)");
			logger.info(
					"T149_Logged in User - Check if user is able to add URL and URL is visible as plain text(no hyperlink)");
			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(4000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

					type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, deeplink5, "Deeplink URL");
					waitTime(5000);
					click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
					waitTime(3000);
					click(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1), "Commented URL");
					waitTime(7000);
					if (!verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

						logger.info("user not able to add URL and URL is visible as plain text(no hyperlink)");
						extent.extentLoggerFail("",
								"user not able to add URL and URL is visible as plain text(no hyperlink)");
					} else {
						logger.info("user able to add URL and URL is visible as plain text(no hyperlink)");
						extent.extentLoggerPass("",
								"user able to add URL and URL is visible as plain text(no hyperlink)");
					}
					break;

				} else {
					logger.info("Comment disabled");
					PartialSwipeiOS("UP", 1);

				}

			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T150(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T150_Logged in User - Check if comment description is copied on long press");
			logger.info("T150_Logged in User - Check if comment description is copied on long press");

			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

				type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, deeplink5, "Deeplink URL");
				waitTime(5000);
				click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
				waitTime(4000);

				WebElement postedComment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1));

				for (int i = 0; i <= 5; i++) {
					LongPressOnElementiOS(postedComment, 1);

					if (verifyElementExist(IOSHipiNeoHomePage.objiosCommentCopiedToastMsg,
							"Comment copied toast message")) {

						logger.info("User able to copy a comment by tapping on the description");
						extent.extentLoggerPass("", "User able to copy a comment by tapping on the description");
						break;
					} else {
						logger.info("comment description is not copied on even after long press");
						extent.extentLogger("", "comment description is not copied on even after long press");
					}

				}

			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public int followingCountInProfile() throws Exception {

		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
		waitTime(3000);
		String j = getText(IOSHipiNeoProfilePage.objiOSTotalCountOfFollowingInProfile);
		logger.info("The count of following in profile page :" + j);
		extent.extentLogger("", "The count of following in profile page :" + j);

		return Integer.parseInt(j);

	}

	public void FeedScreen_T469(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T469_Logged in User - Check the layout of comment screen(Following tab)");
			logger.info("T469_Logged in User - Check the layout of comment screen(Following tab)");
			if (followingCountInProfile() < 11) {
				follow();
			}
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			commentcount(15);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			String comment = getText(IOSHipiNeoHomePage.objiosCommentCount);
			System.out.println(comment);
			String[] com = comment.split(" ");
			System.out.println(com[0]);
			int comment1 = Integer.parseInt(com[0]);
			logger.info("The total comment counts in comment section is : " + comment1);
			extent.extentLoggerPass("", "The total comment counts in comment section is : " + comment1);
			waitTime(3000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSWeekAgoInCommentScreen, "Week")
						|| verifyElementExist(IOSHipiNeoHomePage.objiOSMonthsAgoInCommentScreen, "Month")) {
					logger.info("User is able to view existing comments added by creator about a week/month ago");
					extent.extentLoggerPass("",
							"User is able to view existing comments added by creator about a week/month ago");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);

			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, generateRandomString(5), "Random String");
			waitTime(4000);
			String comt = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			logger.info("The typed comment in Add comment section is : " + comt);
			extent.extentLoggerPass("", "The typed comment in Add comment section is : " + comt);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
			waitTime(4000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSJustNowInCommentScreen, " Latest comment");
			String Comment1 = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			String[] TextF = Comment1.split(" ");
			System.out.println(TextF[0]);
			System.out.println(TextF[1]);
			System.out.println(TextF[2]);
			System.out.println(TextF[3]);
			String Textg = TextF[1] + TextF[2] + TextF[3];
			System.out.println(Textg);
			extent.extentLoggerPass("", "For the comment added just now the time is showing as " + Textg
					+ " in top of the comment section");

			verifyElementPresent(IOSHipiNeoHomePage.UserNameInCommentScreen(1), "Username in comment section");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1),
					"comment Description in comment section");
			waitTime(3000);

			String Comment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1)).getAttribute("value");

			String[] Text2 = Comment.split(" ");
			System.out.println(Text2[0]);
			System.out.println(Text2[1]);
			System.out.println(Text2[2]);
			System.out.println(Text2[3]);
			String Text3 = Text2[1] + Text2[2] + Text2[3];
			logger.info("The comment time mentioned beside the comment is " + Text3);
			extent.extentLogger("", "The comment time mentioned beside the comment is " + Text3);
			waitTime(3000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.AnyLikeIconInCommentScreen, "Like button")) {
					logger.info("User is able to view Like button beside comments added by creators");
					extent.extentLoggerPass("", "User is able to view Like button beside comments added by creators");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.AnyLikedIconInCommentScreen, "Like button")) {
					logger.info("User is able to view Liked button beside comments added by creators");
					extent.extentLoggerPass("", "User is able to view Liked button beside comments added by creators");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);

			verifyElementPresent(IOSHipiNeoHomePage.AnyLikecountbelowComment, "Like count");
			waitTime(3000);
			String LikeCount = getText(IOSHipiNeoHomePage.LikecountbelowComment(2));
			logger.info("Like count given under like button is " + LikeCount);
			extent.extentLoggerPass("", "Like count given under like button is " + LikeCount);
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add Comment label");
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T468(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T468_Logged in User - Check if user is able to view number of comments on played/paused video");

			logger.info(
					"T468_Logged in User - Check if user is able to view number of comments on played/paused video");
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen, "number of comments")) {
				String comment = getText(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen);
				System.out.println(comment);
				waitTime(2000);
				int comment1 = Integer.parseInt(comment);
				logger.info(
						"user able to view number of comments on played/paused video and number of comments present below comment icon is :"
								+ comment1);
				extent.extentLoggerPass("",
						"user able to view number of comments on played/paused video and number of comments present below comment icon is :"
								+ comment1);
			}

		}
	}

	public void FeedScreen_T470(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T470_Logged in User - Check if user is able to add and post comment by entering description in text field(Following tab)");
			System.out.println(
					"T470_Logged in User - Check if user is able to add and post comment by entering description in text field(Following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
//									click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//									waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			String[] Text2 = Comment.split(" ");
			System.out.println(Text2[0]);
			System.out.println(Text2[1]);
			System.out.println(Text2[2]);
			System.out.println(Text2[3]);
			String Text3 = Text2[1] + " " + Text2[2] + " " + Text2[3];
			System.out.println(Text3);
			String Time = "few seconds ago";
			if ((Text1.equalsIgnoreCase(Text2[0])) && (Time.equalsIgnoreCase(Text3))) {

				logger.info(
						"Comment is added with the typed description on the top [with time display as - just now or few seconds ago]");
				extent.extentLoggerPass("",
						"Comment is added with the typed description on the top [with time display as - just now or few seconds ago]");
			} else {
				logger.info(
						"Comment is not added with the typed description on the top [with time display as - just now or few seconds ago]");
				extent.extentLoggerFail("",
						"Comment is not added with the typed description on the top [with time display as - just now or few seconds ago]");

			}
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T472(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T472_Logged in User - Check if user is able to perform vertical scroll(Following tab)");
			System.out.println("T472_Logged in User - Check if user is able to perform vertical scroll(Following tab)");
			//DeepLinkURLForShopButton("no", "shop3", deeplink3);
			waitTime(10000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			follow();
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			commentcount(6);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			PartialCommentsSwipe("DOWN", 1);
			waitTime(3000);
			String Text1 = getText(IOSHipiNeoHomePage.UserNameInCommentScreen(1));
			System.out.println(Text1);
			PartialSwipeiOS("Up", 1);
			if (!verifyElementExist(IOSHipiNeoHomePage.UserNameXpath(Text1), "User Name")) {
				logger.info("User allowed to perform vertical scroll.");
				extent.extentLoggerPass("", "User allowed to perform vertical scroll.");
			} else {
				logger.info("User not allowed to perform vertical scroll.");
				extent.extentLoggerFail("", "User not allowed to perform vertical scroll.");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T473(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T473_Logged in User - Check if user is able to add multiple comments(following tab)");

			System.out.println("T473_Logged in User - Check if user is able to add multiple comments(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			follow();
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
//								click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//								waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			extent.extentLogger("", "Added 1st comment is "+Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment1 = Comment.split(" ");
			System.out.println(Comment1[0]);
			waitTime(4000);
//								click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//								waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen, "ABCD", "ABCD");
			waitTime(10000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text2);
			extent.extentLogger("", "Added 2nd comment is "+Text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment2 = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment3 = Comment2.split(" ");
			System.out.println(Comment3[0]);
			waitTime(2000);
			if ((Text1.equalsIgnoreCase(Comment1[0])) && (Text2.equalsIgnoreCase(Comment3[0]))) {
				logger.info("User able to add multiple comments");
				extent.extentLoggerPass("", "User able to add multiple comments");
			} else {
				logger.info("User not able to add multiple comments");
				extent.extentLoggerFail("", "User not able to add multiple comments");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T474(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T474_Logged in User - Check if user is able to add a smilie and post comment(following tab)");
			logger.info("T474_Logged in User - Check if user is able to add a smilie and post comment(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {
					click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add comment");
					waitTime(3000);
					click(IOSHipiNeoHomePage.EmojiInKeyBoardBtn, "Emoji in Keyboard");
					waitTime(3000);
					click(IOSHipiNeoHomePage.OneOFEmojisInKeyBoardBtn(1), "First emoji");
					waitTime(3000);
					String emoji = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
					logger.info("the added emoji in comment text field is :" + emoji);
					extent.extentLogger("", "the added emoji in comment text field is :" + emoji);
					waitTime(2000);
					click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
					waitTime(3000);

					String Comment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1))
							.getAttribute("value");

					String[] Text2 = Comment.split(" ");
					System.out.println(Text2[0]);
					System.out.println(Text2[1]);
					System.out.println(Text2[2]);
					System.out.println(Text2[3]);
					String Text3 = Text2[0];
					if (Text3.equalsIgnoreCase(emoji)) {
						logger.info("user able to add a smilie and post comment successfully");
						extent.extentLoggerPass("", "user able to add a smilie and post comment successfully");
					} else {
						logger.info("user not able to add a smilie and post comment");
						extent.extentLoggerFail("", "user not able to add a smilie and post comment");
					}
					break;

				} else {
					logger.info("Comment disabled");
					PartialSwipeiOS("UP", 1);

				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close");
			waitTime(3000);

		}
	}

	public void FeedScreen_T475(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T475_Logged in User - Check if user is unable to add a GIF/Image from keypad and post comment(following tab)");
			logger.info(
					"T475_Logged in User - Check if user is unable to add a GIF/Image from keypad and post comment(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(3000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {
					click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add comment");
					waitTime(3000);

					if (verifyElementExist(IOSHipiNeoHomePage.objiosGifOrimage, "Gif/Image")) {
						logger.info("user able to add a Gif/Image and post comment ");
						extent.extentLoggerFail("", "user able to add a Gif/Image and post comment ");
					} else {
						logger.info("user not able to add a Gif/Image and post comment");
						extent.extentLoggerPass("", "user not able to add a Gif/Image and post comment");

					}
					break;

				} else {
					logger.info("Comment disabled");
					PartialSwipeiOS("UP", 1);

				}

			}
			hideKeyboard();
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T480(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {

			extent.HeaderChildNode(
					"T480_Logged in User - On existing comments check 'time' on every comment present on the video(following tab)");
			System.out.println(
					"T480_Logged in User - On existing comments check 'time' on every comment present on the video(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			commentcount(3);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);

			for (int i = 1; i <= 20; i++) {
				String comment = getText(IOSHipiNeoHomePage.objiosCommentCount);
				System.out.println(comment);
				String[] com = comment.split(" ");
				System.out.println(com[0]);
				int comment1 = Integer.parseInt(com[0]);
				if (3 < comment1) {
					click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
					waitTime(2000);
					break;
				} else {
					PartialSwipeiOS("Up", 1);
				}
			}
			clickOnCommentBtn();
			if ((verifyElementExist(IOSHipiNeoHomePage.objiOSHoursAgoInCommentScreen, "Hours"))
					|| (verifyElementExist(IOSHipiNeoHomePage.objiOSMonthsAgoInCommentScreen, "Months"))
					|| (verifyElementExist(IOSHipiNeoHomePage.objiOSDaysAgoInCommentScreen, "days"))) {
				logger.info("User able to view time of comment of another viewer");
				extent.extentLoggerPass("", "User able to view time of comment of another viewer");
			} else {
				logger.info("User not able to view time of comment of another viewer");
				extent.extentLoggerFail("", "User not able to view time of comment of another viewer");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T481(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T481_Logged in User - Check display of latest comment appears on top and time is changed after few min(following tab)");
			System.out.println(
					"T481_Logged in User - Check display of latest comment appears on top and time is changed after few min(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			follow();
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);

			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(2000);
//									click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Comment Text Field");
//									waitTime(10000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.objiOSJustNowInCommentScreen, "Just Now")) {
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
				waitTime(80000);
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(2000);

				if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, 50, "Minutes")) {
					logger.info("Display of comment time is changed from 'just now' to <numberof min> minutes ago");
					extent.extentLoggerPass("",
							"Display of comment time is changed from 'just now' to <numberof min> minutes ago");
				} else {
					logger.info("Display of comment time is not changed from 'just now' to <numberof min> minutes ago");
					extent.extentLoggerFail("",
							"Display of comment time is not changed from 'just now' to <numberof min> minutes ago");
				}
			} else {
				logger.info("Just Now is not displayed");
				extent.extentLoggerFail("", "Just Now is not displayed");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			
		}
	}

	public void FeedScreen_T483(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T483_Logged in User - Check if comment description is copied on long press(following tab)");
			logger.info("T483_Logged in User - Check if comment description is copied on long press(following tab)");

			//DeepLinkURLForShopButton("No", "shop5", deeplink5);
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

				type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, deeplink5, "Deeplink URL");
				waitTime(5000);
				click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
				waitTime(4000);

				WebElement postedComment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1));

				for (int i = 0; i <= 5; i++) {
					LongPressOnElementiOS(postedComment, 1);
					if (verifyElementExist(IOSHipiNeoHomePage.objiosCommentCopiedToastMsg,
							"Comment copied toast message")) {
						logger.info("User able to copy a comment by tapping on the description");
						extent.extentLoggerPass("", "User able to copy a comment by tapping on the description");
						break;
					} else {
						logger.info("comment description is not copied on even after long press");
						extent.extentLogger("", "comment description is not copied on even after long press");
					}

				}

			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T484(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T484_Logged in User - Check if count of comments is matched in both Following & comments screen(following tab)");
			System.out.println(
					"T484_Logged in User - Check if count of comments is matched in both Following & comments screen(following tab)");
			follow();
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(4000);
			commentcount(3);
			String comments = getText(IOSHipiNeoHomePage.objiosTotalComments);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "comment Button");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiosCommentCount, "Comment count");
			waitTime(2000);
			String comment2 = getText(IOSHipiNeoHomePage.objiosCommentCount);
			int count9 = Integer.parseInt(comment2);
			if (comments.equals(count9)) {
				logger.info("Count of comments match in both HiPi home screen & comments screen");
				extent.extentLoggerPass("", "Count of comments match in both HiPi home screen & comments screen");
			} else {
				logger.info("Count of comments is not match in both HiPi home screen & comments screen");
				extent.extentLoggerFail("",
						"Count of comments is not match in both HiPi home screen & comments screen");
			}
			verifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "home button");
		}
	}

	public void FeedScreen_T485(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T485_Logged in User - Check if user is able to add URL and URL is visible as plain text(no hyperlink)(following tab)");
			logger.info(
					"T485_Logged in User - Check if user is able to add URL and URL is visible as plain text(no hyperlink)(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(4000);

			PartialSwipeiOS("UP", 1);
			waitTime(3000);
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
				waitTime(4000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

					type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, deeplink5, "Deeplink URL");
					waitTime(5000);
					click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
					waitTime(3000);
					click(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1), "Commented URL");
					waitTime(7000);
					if (!verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

						logger.info("user not able to add URL and URL is visible as plain text(no hyperlink)");
						extent.extentLoggerFail("",
								"user not able to add URL and URL is visible as plain text(no hyperlink)");
					} else {
						logger.info("user able to add URL and URL is visible as plain text(no hyperlink)");
						extent.extentLoggerPass("",
								"user able to add URL and URL is visible as plain text(no hyperlink)");
					}
					break;

				} else {
					logger.info("Comment disabled");
					PartialSwipeiOS("UP", 1);

				}

			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T486(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T486_Logged in User - Check if comment description is copied on long press(following tab)");
			logger.info("T486_Logged in User - Check if comment description is copied on long press(following tab)");

			//DeepLinkURLForShopButton("No", "shop5", deeplink5);
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment Section")) {

				type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, deeplink5, "Deeplink URL");
				waitTime(5000);
				click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
				waitTime(4000);

				WebElement postedComment = findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1));

				for (int i = 0; i <= 5; i++) {
					LongPressOnElementiOS(postedComment, 1);

					if (verifyElementExist(IOSHipiNeoHomePage.objiosCommentCopiedToastMsg,
							"Comment copied toast message")) {

						logger.info("User able to copy a comment by tapping on the description");
						extent.extentLoggerPass("", "User able to copy a comment by tapping on the description");
						break;
					} else {
						logger.info("comment description is not copied on even after long press");
						extent.extentLogger("", "comment description is not copied on even after long press");
					}

				}

			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);

		}
	}

	public void FeedScreen_T487(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T487_Logged in User - Check if user is able to tag user in comment and then post comment(following tab)");
			System.out.println(
					"T487_Logged in User - Check if user is able to tag user in comment and then post comment(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			commentcount(5);
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "@Himanshikhurana",
					"@Himanshikhurana name of the user need to tag");
			waitTime(5000);

//			type(IOSHipiNeoHomePage.objiOSAddedCommentBoxInCommentScreen, "khur",
//					"khur is second half name of the user need to tag");
			waitTime(4000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSSuggestedUserNameInCommentScreen("@Himanshikhurana"));
			waitTime(5000);
			System.out.println(Text1);
			extent.extentLogger("", "text1------"+Text1);
			click(IOSHipiNeoHomePage.objiOSSuggestedUserNameInCommentScreen("@Himanshikhurana"), "User Name");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(2000);
			String text2 = Text2.trim();
			System.out.println(text2);
			extent.extentLogger("", "text2------"+text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment1 = Comment.split(" ");
			System.out.println(Comment1[0]);
			waitTime(4000);
			if ((Text1.equalsIgnoreCase(text2)) && (text2.equalsIgnoreCase(Comment1[0]))) {
				logger.info("User able to tag user in comment and then post comment");
				extent.extentLoggerPass("", "User able to tag user in comment and then post comment");
			} else {
				logger.info("User not able to tag user in comment and then post comment");
				extent.extentLoggerFail("", "User not able to tag user in comment and then post comment");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T488(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T488_Logged in User - Check if related hashtag suggestion displayed while adding a hashtag and then post comment(following tab)");
			System.out.println(
					"T488_Logged in User - Check if related hashtag suggestion displayed while adding a hashtag and then post comment(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "#Himanshi",
					"#Himanshi is first half name of the user need to tag");
			waitTime(5000);
			type(IOSHipiNeoHomePage.objiOSAddedCommentBoxInCommentScreen, "khur",
					"khur is second half name of the user need to tag");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSSuggestedHashTagInCommentScreen("#HimanshiKhurana"));
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSSuggestedHashTagInCommentScreen("#HimanshiKhurana"), "User Name");
			waitTime(2000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(2000);
			String text2 = Text2.trim();
			System.out.println(text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			String Comment = getText(IOSHipiNeoHomePage.objiOSUserCommentInFeedScreen);
			waitTime(2000);
			String[] Comment1 = Comment.split(" ");
			System.out.println(Comment1[0]);
			waitTime(4000);
			if ((Text1.equalsIgnoreCase(text2)) && (text2.equalsIgnoreCase(Comment1[0]))) {
				logger.info("User able to add a hashtag and post comment");
				extent.extentLoggerPass("", "User able to add a hashtag and post comment");
			} else {
				logger.info("User not able to add a hashtag and post comment");
				extent.extentLoggerFail("", "User not able to add a hashtag and post comment");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T493(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T493_Logged in User - Check if user is able to like/dislike mutiple comments(following tab)");
			System.out.println(
					"T493_Logged in User - Check if user is able to like/dislike mutiple comments(following tab)");
			// DeepLinkURLForShopButton("no", "shop3", deeplink3);
			waitTime(10000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			PartialSwipeiOS("Down", 3);
			waitTime(4000);
			commentcount(3);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			PartialCommentsSwipeiOS("down", 1);
			unlikeComments(5);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "Like Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikedIconInCommentScreen(2), "Liked Icon");
			waitTime(2000);
			if ((verifyElementExist(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "Like Icon"))
					&& (verifyElementExist(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon"))) {
				logger.info("User able to like/dislike");
				extent.extentLoggerPass("", "User able to like/dislike");
			} else {
				logger.info("User not able to like/dislike");
				extent.extentLoggerFail("", "User not able to like/dislike");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T492(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T492_Logged in User - Check if user is able to see like count of a comment(following tab)");
			System.out.println(
					"T492_Logged in User - Check if user is able to see like count of a comment(following tab)");
			// DeepLinkURLForShopButton("No", "shop5", deeplink5);
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);

			for (int i = 1; i <= 20; i++) {
				String comment = getText(IOSHipiNeoHomePage.objiosCommentCount);
				System.out.println(comment);
				String[] com = comment.split(" ");
				System.out.println(com[0]);
				int comment1 = Integer.parseInt(com[0]);
				if (3 < comment1) {
					click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
					waitTime(2000);
					break;
				} else {
					PartialSwipeiOS("Up", 1);
				}
			}
			clickOnCommentBtn();
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSTotalLikesInCommentScreen, "Like Counts")) {
				logger.info("User able to see like count of a comment");
				extent.extentLoggerPass("", "User able to see like count of a comment");
			} else {
				logger.info("User not able to see like count of a comment");
				extent.extentLoggerFail("", "User not able to see like count of a comment");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T495(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T495_Logged in User - Check user is able to view existing comments added by creator about a week ago(following tab)");
			System.out.println(
					"T495_Logged in User - Check user is able to view existing comments added by creator about a week ago(following tab)");
			// DeepLinkURLForShopButton("no", "shop3", deeplink3);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			waitTime(3000);
			commentcount(3);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			for (int i = 1; i <= 30; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSWeekAgoInCommentScreen, "Week")) {
					logger.info("User is able to view existing comments added by creator about a week ago");
					extent.extentLoggerPass("",
							"User is able to view existing comments added by creator about a week ago");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			tapiOSAtCenterOfScrreen(1);
		}
	}

	public void FeedScreen_T496(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T496_Logged in User - Check user is able to view existing comments added by creator about a month ago(following tab)");
			System.out.println(
					"T496_Logged in User - Check user is able to view existing comments added by creator about a month ago(following tab)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following tab selected");
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			for (int i = 1; i <= 50; i++) {
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSMonthsAgoInCommentScreen, "Months")) {
					logger.info("User is able to view existing comments added by creator about a month ago");
					extent.extentLoggerPass("",
							"User is able to view existing comments added by creator about a month ago");
					break;
				} else {
					PartialCommentsSwipeiOS("Up", 1);
				}
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
		}
	}

	public void FeedScreen_T497(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T497_Logged in User - Check if user is able to view 'Network Error' when he taps on Comment icon without internet(following tab)");
			System.out.println(
					"T497_Logged in User - Check if user is able to view 'Network Error' when he taps on Comment icon without internet(following tab)");
			wifi("Off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,10,"Network Error")) {
				logger.info("User getting network error message when he taps on Comment icon without internet");
				extent.extentLoggerPass("",
						"User getting network error message when he taps on Comment icon without internet");
			} else {
				logger.info("User not getting network error message when he taps on Comment icon without internet");
				extent.extentLoggerFail("",
						"User not getting network error message when he taps on Comment icon without internet");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			wifi("On");
			waitTime(2000);
		}
	}

	public void FeedScreen_T498(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T498_Logged in User - Check if user is able to view 'Network Error' when he taps on Comment icon without internet(following tab)");
			System.out.println(
					"T498_Logged in User - Check if user is able to view 'Network Error' when he taps on Comment icon without internet(following tab)");
			wifi("Off");
			waitTime(15000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
		
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSNetworkError,10, "Network Error")) {
				logger.info("User getting network error message when he taps on Comment icon without internet");
				extent.extentLoggerPass("",
						"User getting network error message when he taps on Comment icon without internet");
			} else {
				logger.info("User not getting network error message when he taps on Comment icon without internet");
				extent.extentLoggerFail("",
						"User not getting network error message when he taps on Comment icon without internet");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Button");
			waitTime(2000);
			wifi("On");
			waitTime(2000);
		}
	}

	public void count(int i) {

		extent.HeaderChildNode("The total login method loop number : " + i);
	}

	public void PhonenumberLoginMethod(int i) throws Exception {
		extent.HeaderChildNode("Phone number login--loop number : " + i);
		Logout();
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "profile icon");
		waitTime(3000);

		String number = getParameterFromXML("NonsubscribedUserNameNumber");
		String Password = getParameterFromXML("NonsubscribedPassword");
		waitTime(2000);

		click(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "UsePhone Or Email Button");
		waitTime(2000);
		type(IOSHipiNeoHomePage.objiosMobileNumberField, number, "Email Field");
		waitTime(2000);
		hideKeyboard();

		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
		waitTime(2000);
		hideKeyboard();

		type(IOSHipiNeoHomePage.objiosPasswordField, Password, "Password field");
		waitTime(2000);
		hideKeyboard();
		verifyElementPresentAndClick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");
		waitTime(800);
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiiosLoginToastMsg, 20, "Loggeg-In Successfully")) {
			logger.info("Logged-In Successfully toast msg");
			extent.extentLoggerPass("", "Logged-In Successfully toast msg");
		} else {
			logger.error("Logged-In Successfully toast msg is not displayed");
			extent.extentLoggerFail("", "Loggeg-In Successfully toast msg is not displayed");
		}

		if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosSavePasswordPopUp, 15, "Save password pop up")) {
			click(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now CTA");
			waitTime(2000);
		}
	}

	public void FacebookLoginMethod(int i) throws Exception {
		extent.HeaderChildNode("login from Facebook app---loop count  : " + i);
		Logout();
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile icon");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosContnueWithFB, "Continue with Facebook CTA");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosfacebookAllowPopUp, "FB Pop up")) {
			click(IOSHipiNeoProfilePage.objiosFBallowPopUpContinueCTA, "Continue CTA on FB Pop up");
			waitTime(4000);
			if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiiosOpenThisPageFBPopUp, 30,
					"Open this page pop up FB")) {
				click(IOSHipiNeoProfilePage.objiiosopenBtnInFbPopUp, "Open");
				waitTime(4000);

			}
			waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosfacebookSiteInHipiContinueCTA, 15,
					"Facebook site continue CTA");

			click(IOSHipiNeoProfilePage.objiosfacebookSiteInHipiContinueCTA, "Facebook site continue CTA");

		}
		if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosLoggedinSuccessfullyCTA, 60,
				"Logged in Successfully toast message")) {
			logger.info(
					"User able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
			extent.extentLoggerPass("",
					"User able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
			extent.extentLoggerPass("", "User able to redirect to HiPi once login with Facebook");

		} else {
			logger.info(
					"User not able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
			extent.extentLoggerFail("",
					"User not able to login to HiPi app when user tapping on Continue CTA in Facebook site of app browser");
			extent.extentLoggerFail("", "User not able to redirect to HiPi once login with Facebook");
		}
		waitTime(4000);
		Logout();
		waitTime(4000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi pop up")) {

			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close");
			waitTime(4000);

		}

	}

	public void GoogleLoginMethod(int k, int i) throws Exception {
		extent.HeaderChildNode("login from google account---count " + i);
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosContinuewithTheGoogle, "Continue with Google");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosGooglePopup, "Google Popup")) {
			click(IOSHipiNeoHomePage.objiosContinueWithGoogle, "Continue Button");
			waitTime(2000);
		}
		waitTime(4000);
		if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosgoogleaccounts(k), 20, "google accout")) {
			click(IOSHipiNeoHomePage.objiosgoogleaccounts(k), "google accout");
			waitTime(3000);
		}
		if (waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiosLoggedinSuccessfullyCTA, 65,
				"Logged in Successfully toast message")) {
			logger.info(
					"User able to login to HiPi app when user tapping on Continue CTA in google site of app browser");
			extent.extentLoggerPass("",
					"User able to login to HiPi app when user tapping on Continue CTA in google site of app browser");
			extent.extentLoggerPass("", "User able to redirect to HiPi once login with google");

		} else {
			logger.info(
					"User not able to login to HiPi app when user tapping on Continue CTA in google site of app browser");
			extent.extentLoggerFail("",
					"User not able to login to HiPi app when user tapping on Continue CTA in google site of app browser");
			extent.extentLoggerFail("", "User not able to redirect to HiPi once login with google");
		}

		Logout();
		waitTime(4000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi pop up")) {

			click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close");
			waitTime(4000);

		}

	}

	public void FeedScreen_T032(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			System.out.println("T_032_Logged in User - Check the details displayed on a played/paused [newly created video]");
			extent.HeaderChildNode(
					"T_032_Logged in User - Check the details displayed on a played/paused [newly created video]");
			click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create icon");
			waitTime(3000);
			PopupOfCameraAndMicrophone();
			waitTime(3000);

			click(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st Effects");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.EffectsSelectedTrue, "Effects selected");
					break;
				}

			}
			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			if (!verifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
				tapiOSAtCenterOfScrreen(1);
				waitTime(3000);
			}
			click(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
			waitTime(2000);
			waitForElementAndClickIfPresent(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, 35, "Tick button");
			click(IOSHipiCreateVideoPage.objiosTickIconInEditVideo, "Tick button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters");
			waitTime(2000);
			// NvNodownloadButton
			for (int i = 0; i <= 5; i++) {
				click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), "Download 1 st filter");
				waitTime(15000);
				String value = getAttributValue("value", IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1));
				if (!value.equalsIgnoreCase("NvNodownloadButton")) {
					click(IOSHipiCreateVideoPage.DownloadBtnOnFiltersOrEffects(1), " 1 st filter");
					waitTime(3000);
					verifyElementPresent(IOSHipiCreateVideoPage.FiltersSelectedTrue, "Filter selected");
					break;
				}

			}

			tapiOSAtCenterOfScrreen(1);
			waitTime(3000);
			if (!verifyElementExist(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button")) {
				tapiOSAtCenterOfScrreen(1);
				waitTime(3000);
			}
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sound button after recording");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search placeholder");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, "Search field");
			waitTime(2000);
			String Searched = "Chandigarh Mein";
			type(IOSHipiCreateVideoPage.objiosSearchFieldInSounds, Searched, "Search Field");
			waitTime(2000);

			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Search button");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosFirstSearchedSound("Chandigarh Mein"), "First item in searched list");
			waitTime(6000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick button");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button");
			waitTime(3000);
			type(IOSHipiCreateVideoPage.objDescriptionBoxInPostPage, "#Himanshikhurana", "Description box");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objDoneTheDescriptionInVideoPostPage, "Done");
			waitTime(3000);
			click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post button");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 50, " posted tost message");
			OpenRecentlyPostedVideoOrLastCreatedVideo();
			verifyElementPresent(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "Usrname");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "Hashtag");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "Sounds");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSAddedEffectOnScreen, "Effects");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSAddedFiltersOnScreen, "Filters");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosBackBtnFromRecordingScreen, "Back button");
			waitTime(2000);
            NavigateToHomPage();
		}
	}

	public void changeusername() throws Exception {
		click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile icon");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit profile");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.nameArrowMark("Name"), "Name field");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "field")) {
			click(IOSHipiNeoProfilePage.objioscloseInNameEditscreen, "clear field");
			waitTime(2000);
		}

		String Secname = generateRandomString(1);
		waitTime(2000);
		String Firstname = generateRandomString(8) + " " + Secname;
		waitTime(2000);
		System.out.println(Firstname);
		click(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, "Name field");
		waitTime(2000);
		type(IOSHipiNeoProfilePage.objiosEditNameInNameEditscreen, Firstname, "First Name");
		waitTime(3000);

		click(IOSHipiNeoProfilePage.objiosSaveInNameEditscreen, "Save");
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");

	}

	public void FeedScreen_T124(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {

			extent.HeaderChildNode(
					"T124_Logged in User - Check the number of follower count is increased in Account Detail Screen");
			changeusername();
			waitTime(7000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile icon");
			waitTime(3000);
			String UserNameInUserProfile = getText(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage);
			logger.info("the username in profile " + UserNameInUserProfile);
			extent.extentLogger("", "the username in profile " + UserNameInUserProfile);
			String UserNameInUserProfile1 = UserNameInUserProfile.substring(0, 4);
			System.out.println(UserNameInUserProfile1);

			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(3000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosprofilepicture, "Profile pic");
			waitTime(3000);
			if (!verifyElementExist(IOSHipiNeoProfilePage.objiosFollowingIconUnderFollowingTab, "Following")) {
				click(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow");
				waitTime(3000);
			}
			click(IOSHipiNeoProfilePage.objiOSFollowersLabelInProfileDetailsPage, "Followers");
			waitTime(3000);
			PartialSwipe_ios("DOWN", 4);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosSearchPlaceholderFollowrsPage, "Search field");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiosSearchPlaceholderFollowrsPage, UserNameInUserProfile1, "Search field");
			waitTime(2000);
			hideKeyboard();
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiosTextInScreen(UserNameInUserProfile),
					UserNameInUserProfile);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button in followers list");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back in profile");
			waitTime(3000);

		}
	}

	// Tanuja_mundepi
	public void FeedScreen_T428(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T428_Logged in User - Verify if user is able to view video created by 'existing sound'");

			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search field");
			waitTime(2000);
			type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Tanuja_mundepi", "Search field");
			waitTime(3000);
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button in keyboard");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.UserProfileNameInUserTabPage(1, 1), "First profile");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiNeoProfilePage.objiosFollowingIconUnderFollowingTab, "Following")) {
				click(IOSHipiNeoProfilePage.objiosFollowBtnInFollowerScreen, "Follow");
				waitTime(3000);
			}
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button in profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back in discover");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
					"Following selected")) {
				click(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following tab");
				waitTime(3000);
				verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
						"Following selected");
			}
			for (int i = 0; i <= 60; i++) {
				String sound = getText(IOSHipiNeoHomePage.objiOSMusicInFeedScreen);
				String[] s = sound.split("•");
				System.out.println("the string 0 is " + s[0]);
				System.out.println("the string 1 is " + s[1]);
				if (s[1].contains("Original Audio")) {
					PartialSwipe("Up", 1);
					waitTime(3000);
				} else {
					logger.info("user is able to view video created by 'existing sound' " + s[1]);
					extent.extentLoggerPass("", "user is able to view video created by 'existing sound' " + s[1]);
					break;
				}
			}
		}

	}

	// =====================================================Ticket_Id_2142===============================================================================

	public void FeedScreen_T266_T278(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T266_Guest User-Validate more data by clicking the Expand button on IN THIS VIDEO tab of the shop detail page");
			System.out.println("T266_Guest User-Validate more data by clicking the Expand button on IN THIS VIDEO tab of the shop detail page");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T278_Logged In User-Validate more data by clicking the Expand button on IN THIS VIDEO tab of the shop detail page");
			System.out.println("T278_Logged In User-Validate more data by clicking the Expand button on IN THIS VIDEO tab of the shop detail page");
		}
		backToshopPageFromURLpage();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments, "Outfit");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1), "Shop Site");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1), "Product Name");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Right Arrow");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T269(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T269_Guest User -Verify for user should be able to click/ switch between tabs with in \"IN THIS VIDEO\" page.");
			System.out.println("T269_Guest User -Verify for user should be able to click/ switch between tabs with in \"IN THIS VIDEO\" page.");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T283_Logged In User -Verify for user should be able to click/ switch between tabs with in \"IN THIS VIDEO\" page.");
			System.out.println("T283_Logged In User -Verify for user should be able to click/ switch between tabs with in \\\"IN THIS VIDEO\\\" page.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
		waitTime(2000);
		verifyElementExist(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedTrueAfterExpandInSavedMoments,
				"User Able To Switch to Accessories");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(2000);
		verifyElementExist(IOSHiPiNeoShopPage.objiOSBeautySelectedTrueAfterExpandInSavedMoments,
				"User Able To Switch to Beauty");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
		waitTime(2000);
		verifyElementExist(IOSHiPiNeoShopPage.objiOSHairSelectedTrueAfterExpandInSavedMoments,
				"User Able To Switch to Hair");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSOutfitSelectedFalseAfterExpandInSavedMoments, "Outfit");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments,
				"User Able To Switch to Outfit");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T283(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T283_Logged In User -Verify for user should be able to click/ switch between tabs with in \"IN THIS VIDEO\" page.");

			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
			waitTime(2000);
			verifyElementExist(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedTrueAfterExpandInSavedMoments,
					"User Able To Switch to Accessories");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
			waitTime(2000);
			verifyElementExist(IOSHiPiNeoShopPage.objiOSBeautySelectedTrueAfterExpandInSavedMoments,
					"User Able To Switch to Beauty");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
			waitTime(2000);
			verifyElementExist(IOSHiPiNeoShopPage.objiOSHairSelectedTrueAfterExpandInSavedMoments,
					"User Able To Switch to Hair");
			waitTime(2000);
			click(IOSHiPiNeoShopPage.objiOSOutfitSelectedFalseAfterExpandInSavedMoments, "Outfit");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments,
					"User Able To Switch to Outfit");
			waitTime(2000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T265_T280(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T265_Guest User-Verify for default behavior on \"IN THIS VIDEO\" tab");
		} else {
			extent.HeaderChildNode("T280_Logged In User-Verify for default behavior on \"IN THIS VIDEO\" tab");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiOSInThisVideoSelectedTrueInShoppage, "In This Video")) {
			logger.info("IN THIS VIDEO tab is open with all the page object details.");
			extent.extentLoggerPass("", "IN THIS VIDEO tab is open with all the page object details.");
		} else {
			logger.info("IN THIS VIDEO tab is not open with all the page object details.");
			extent.extentLoggerFail("", "IN THIS VIDEO tab is not open with all the page object details.");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T287(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T287_Verify for all products should have product name below the product images.");
			System.out.println("T287_Verify for all products should have product name below the product images.");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 1);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1), "Product Name")) {
				logger.info("All product have product name below the images.");
				extent.extentLoggerPass("", "All product have product name below the images.");
			} else {
				logger.info("All product not have product name below the images.");
				extent.extentLoggerFail("", "All product not have product name below the images.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T289(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T289_Verify for each product on the shop details page has third party site name below the product images.");
			System.out.println("T289_Verify for each product on the shop details page has third party site name below the product images.");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 1);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1), "Shop Site 1")) {
				logger.info(
						"For each product on the shop details page has third party site name below the product images.");
				extent.extentLoggerPass("",
						"For each product on the shop details page has third party site name below the product images.");
			} else {
				logger.info(
						"For each product on the shop details page has no third party site name below the product images.");
				extent.extentLoggerFail("",
						"For each product on the shop details page has no third party site name below the product images.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T290_T300(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T290_Guest User - Validate the each product images are clickable");
			System.out.println("T290_Guest User - Validate the each product images are clickable");
		} else {
			System.out.println();
			extent.HeaderChildNode("T300_Logged In User- Validate the each product images are clickable");
			System.out.println("T300_Logged In User- Validate the each product images are clickable");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(2), "Image 1");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "Third Party Site")) {
			logger.info("Each product images are clickable for guest user");
			extent.extentLoggerPass("", "Each product images are clickable for guest user");
		} else {
			logger.info("Each product images are not clickable for guest user");
			extent.extentLoggerFail("", "Each product images are not clickable for guest user");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T292_T302(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T292_Guest User -Verify for able to click and navigate to third party site when user clicks on product images");
			System.out.println("T292_Guest User -Verify for able to click and navigate to third party site when user clicks on product images");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T302_Logged In User -Verify for able to click and navigate to third party site when user clicks on product images");
			System.out.println("T302_Logged In User -Verify for able to click and navigate to third party site when user clicks on product images");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(2), "Image 1");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "Third Party Site")) {
			logger.info(
					" User able to navigate to the third party site by clicking on product images in the shop page.");
			extent.extentLoggerPass("",
					" User able to navigate to the third party site by clicking on product images in the shop page.");
		} else {
			logger.info(
					" User not able to navigate to the third party site by clicking on product images in the shop page.");
			extent.extentLoggerFail("",
					" User not able to navigate to the third party site by clicking on product images in the shop page.");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T293_T303(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T293_Guest User -Verify for able to Click and navigate to third party site when user click click on \"Arrow\" button for respective product.");
			System.out.println("T293_Guest User -Verify for able to Click and navigate to third party site when user click click on \\\"Arrow\\\" button for respective product.");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T303_Logged In User -Verify for able to Click and navigate to third party site when user click click on \"Arrow\" button for respective product.");
			System.out.println("T303_Logged In User -Verify for able to Click and navigate to third party site when user click click on \\\"Arrow\\\" button for respective product.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Cross Icon");
		waitTime(2000);
		ScrollToRailiOS_Up(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow 1");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow 1");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow 1");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "Third Party Site")) {
			logger.info("Arrow button is clickable for Guest User");
			extent.extentLoggerPass("", "Arrow button is clickable for Guest User");
		} else {
			logger.info("Arrow button is not clickable for Guest User");
			extent.extentLoggerFail("", "Arrow button is not clickable for Guest User");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T296_T306(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T296_Guest User- Verify for user should be navigated to respective third party site whe they clicked on the product images.");
			System.out.println("T296_Guest User- Verify for user should be navigated to respective third party site whe they clicked on the product images.");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T306_Logged In User -Verify for user should be navigated to respective third party site whe they clicked on the product images.");
			System.out.println("T306_Logged In User -Verify for user should be navigated to respective third party site whe they clicked on the product images.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(4000);
		String SiteName1 = getText(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
		waitTime(3000);
		System.out.println(SiteName1);
		click(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(2), "Image 1");
		waitTime(3000);
		String SiteName2 = getAttributValue("value", IOSHiPiNeoShopPage.objiosMyntraSiteInHipi);
		waitTime(3000);
		System.out.println(SiteName2);
		String[] SiteName3 = SiteName2.split(" ");
		 String SiteName4 = SiteName3[1].substring(1);
		 System.out.println(SiteName4);
		if (SiteName1.equalsIgnoreCase(SiteName4)) {
			logger.info(
					"User is navigated to respective third party site when they clicked on product images to buy a product");
			extent.extentLoggerPass("",
					"User is navigated to respective third party site when they clicked on product images to buy a product");
		} else {
			logger.info(
					"User is not navigated to respective third party site when they clicked on product images to buy a product");
			extent.extentLoggerFail("",
					"User is not navigated to respective third party site when they clicked on product images to buy a product");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T297_T307(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T297_Guest User -Verify for user should be navigated to respective third party site when they clicked on the Arrow icon to buy a product.");
		} else {
			extent.HeaderChildNode(
					"T307_Logged In User -Verify for user should be navigated to respective third party site when they clicked on the Arrow icon to buy a product.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		String SiteName1 = getText(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
		waitTime(3000);
		String SiteName5 = SiteName1+".com,";
		System.out.println(SiteName5);
		extent.extentLogger("", "the shop site 1 name is ---------"+SiteName5);
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Cross Icon");
		waitTime(2000);
		ScrollToRailiOS_Up(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow 1");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow 1");
		waitTime(3000);
		String SiteName2 = getAttributValue("value", IOSHiPiNeoShopPage.objiosMyntraSiteInHipi);
		waitTime(3000);
		System.out.println(SiteName2);
		 String[] SiteName3 = SiteName2.split(" ");
		 String SiteName4 = SiteName3[1].substring(1);
		 System.out.println(SiteName4);
		 extent.extentLogger("", "the shop site 2 name  is ---------"+SiteName4);
		if (SiteName5.equalsIgnoreCase(SiteName4)) {
			logger.info(
					"User is navigated to respective third party site when they clicked Arrow button to buy a product.");
			extent.extentLoggerPass("",
					"User is navigated to respective third party site when they clicked Arrow button to buy a product.");
		} else {
			logger.info(
					"User is not navigated to respective third party site when they clicked Arrow button to buy a product.");
			extent.extentLoggerFail("",
					"User is not navigated to respective third party site when they clicked Arrow button to buy a product.");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T298(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T298_Guest User -Verify for user should be landed on 'IN THIS VIDEO' tab of the shop page when clicks the saved video objects/products in a small carousel");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Scrolled till Discover the look");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(0), "Image");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments, "Out fit")) {
				logger.info("Guest User is landed on IN THIS VIDEO tab with all the shop page details.");
				extent.extentLoggerPass("",
						"Guest User is landed on IN THIS VIDEO tab with all the shop page details.");
			} else {
				logger.info("Guest User is not landed on IN THIS VIDEO tab with all the shop page details.");
				extent.extentLoggerFail("",
						"Guest User is not landed on IN THIS VIDEO tab with all the shop page details.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T301(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T301_Logged In user -Validate every Arrow present on the product site should be clickable");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Cross Icon");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow 1");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "Third Party Site")) {
				logger.info("Arrow button is clickable and user is navigate to product site page.");
				extent.extentLoggerPass("", "Arrow button is clickable and user is navigate to product site page.");
			} else {
				logger.info("Arrow button is not clickable and user is not navigate to product site page.");
				extent.extentLoggerFail("",
						"Arrow button is not clickable and user is not navigate to product site page.");
			}
			click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
			waitTime(2000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T350_T361(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T350_Guest User-Verify for all the product images are clickable from opened/expaned product panel on \"Saved moment\" tab.");
			System.out.println("T350_Guest User-Verify for all the product images are clickable from opened/expaned product panel on \\\"Saved moment\\\" tab.");

		} else {
			System.out.println();

			extent.HeaderChildNode(
					"T361_Logged In User-Verify for all the product images are clickable from opened/expaned product panel on \"Saved moment\" tab.");
			System.out.println("T361_Logged In User-Verify for all the product images are clickable from opened/expaned product panel on \\\"Saved moment\\\" tab.");

		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(2), "Product Image");
		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "URL")) {
			logger.info("All the product images is clickable and user navigated to third party site.");
			extent.extentLoggerPass("", "All the product images is clickable and user navigated to third party site.");
		} else {
			logger.info("All the product images is not clickable and user not navigated to third party site.");
			extent.extentLoggerFail("",
					"All the product images is not clickable and user not navigated to third party site.");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T351_T362(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T351_Guest User-Verify for all the Arrow buttons are clickable from opened/expaned product panel on \"Saved moment\" tab.");
		} else {
			extent.HeaderChildNode(
					"T362_Logged In user-Verify for all the Arrow buttons are clickable from opened/expaned product panel on \"Saved moment\" tab.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "cross Icon");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Icon");
		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "URL")) {
			logger.info(
					"All the Arrow buttons for the respective products is clickable and  user is navigated to third party site.");
			extent.extentLoggerPass("",
					"All the Arrow buttons for the respective products is clickable and  user is navigated to third party site.");
		} else {
			logger.info(
					"All the Arrow buttons for the respective products is not clickable and  user is not navigated to third party site.");
			extent.extentLoggerFail("",
					"All the Arrow buttons for the respective products is not clickable and  user is not navigated to third party site.");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T353_T364(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T353_Guest User- Verify for LESS button button on the product details page");
		} else {
			extent.HeaderChildNode("T364_Logged In User-Verify for LESS button button on the product details page");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Icon");
		waitTime(2000);
		if ((!verifyElementExist(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments,
				"Outfit Selected True"))
				|| (!verifyElementExist(IOSHiPiNeoShopPage.objiOSOutfitSelectedFalseAfterExpandInSavedMoments,
						"Outfit Selected False"))) {
			logger.info("User able to close the product details page tapping LESS button");
			extent.extentLoggerPass("", "User able to close the product details page tapping LESS button");
		} else {
			logger.info("User not able to close the product details page tapping LESS button");
			extent.extentLoggerFail("", "User not able to close the product details page tapping LESS button");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T354_T365(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T354_Guest User- Verify for closing the shop details page when user on \"Saved moment\" tab");
		} else {
			extent.HeaderChildNode(
					"T365_Logged In User- Verify for closing the shop details page when user on \"Saved moment\" tab");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		CloseTheShopBar();
		String UserName2 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
		if (UserName1.equalsIgnoreCase(UserName2)) {
			logger.info("Guest User navigated back to the last page and able to see the same video playing.");
			extent.extentLoggerPass("",
					"Guest User navigated back to the last page and able to see the same video playing.");
		} else {
			logger.info("Guest User not navigated back to the last page and not able to see the same video playing.");
			extent.extentLoggerFail("",
					"Guest User not navigated back to the last page and not able to see the same video playing.");
		}
	}

	public void FeedScreen_T356_T367(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T356_Guest User-Verify for each product on the shop details page has third party site name below the product images.");
		} else {
			extent.HeaderChildNode(
					"T367_Logged In user-Verify for each product on the shop details page has third party site name below the product images");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
		waitTime(3000);
		PartialCommentsSwipeiOS("Up", 1);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1), "Shop Site Name")) {
			logger.info(
					"Each product have third party site name below the product images (eg. Myntra, amazon, Lyka etc)");
			extent.extentLoggerPass("",
					"Each product have third party site name below the product images (eg. Myntra, amazon, Lyka etc)");
		} else {
			logger.info(
					"Each product does not have third party site name below the product images (eg. Myntra, amazon, Lyka etc)");
			extent.extentLoggerFail("",
					"Each product does not have third party site name below the product images (eg. Myntra, amazon, Lyka etc)");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T357_T368(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T357_Guest User- Verify each product image is clickble and navigate to product website");
			System.out.println("T357_Guest User- Verify each product image is clickble and navigate to product website");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T368_Logged In User- Verify each product image is clickble and navigate to product website");
			System.out.println("T368_Logged In User- Verify each product image is clickble and navigate to product website");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(2), "Product Image");
		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "URL")) {
			logger.info("product card image is clickble and on click it is redirected to product website for user");
			extent.extentLoggerPass("",
					"product card image is clickble and on click it is redirected to product website for user");
		} else {
			logger.info(
					"product card image is not clickble and on click it is not redirected to product website for user");
			extent.extentLoggerFail("",
					"product card image is not clickble and on click it is not redirected to product website for user");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T358_T369(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T358_Guest User - Verify each Arrow Mark (Get Button) is clickble and navigate to product website");
			System.out.println("T358_Guest User - Verify each Arrow Mark (Get Button) is clickble and navigate to product website");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T369_Logged In User - Verify each Arrow Mark (Get Button) is clickble and navigate to product website");
			System.out.println("T369_Logged In User - Verify each Arrow Mark (Get Button) is clickble and navigate to product website");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "cross Icon");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Icon");
		waitTime(2000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosMyntraSiteInHipi, "URL")) {
			logger.info("Arrow mark is clickble and it is redirected to product website for guest user");
			extent.extentLoggerPass("",
					"Arrow mark is clickble and it is redirected to product website for guest user");
		} else {
			logger.info("Arrow mark is not clickble and it is not redirected to product website for guest user");
			extent.extentLoggerFail("",
					"Arrow mark is not clickble and it is not redirected to product website for guest user");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T267_T281(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T267_Guest User- Verify for user can able swipe up page to see bottom products.");
		} else {
			extent.HeaderChildNode(
					"T281_Logged In user-Verify for user can able swipe up page to see bottom products.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		PartialCommentsSwipeiOS("Up", 1);
		String SiteYValue1 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
		System.out.println(SiteYValue1);
		PartialCommentsSwipeiOS("Up", 3);
		String SiteYValue2 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
		System.out.println(SiteYValue2);
		if (!SiteYValue1.equalsIgnoreCase(SiteYValue2)) {
			logger.info("User able to swipe up the page to see bottom products.");
			extent.extentLoggerPass("", "User able to swipe up the page to see bottom products.");
		} else {
			logger.info("User not able to swipe up the page to see bottom products.");
			extent.extentLoggerFail("", "User not able to swipe up the page to see bottom products.");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T268(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T268_Guest User- Verify for user can able swipe down page to see top products.");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 3);
			String SiteYValue1 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
			System.out.println(SiteYValue1);
			PartialCommentsSwipeiOS("Down", 3);
			String SiteYValue2 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
			System.out.println(SiteYValue2);
			if (!SiteYValue1.equalsIgnoreCase(SiteYValue2)) {
				logger.info("User able to swipe down the page to see top products.");
				extent.extentLoggerPass("", "User able to swipe down the page to see top products.");
			} else {
				logger.info("User not able to swipe down the page to see top products.");
				extent.extentLoggerFail("", "User not able to swipe down the page to see top products.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T282(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T282_Logged In user-Verify for user can able swipe down page to see top products.");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 3);
			String SiteYValue1 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
			System.out.println(SiteYValue1);
			PartialCommentsSwipeiOS("Down", 3);
			String SiteYValue2 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1));
			System.out.println(SiteYValue2);
			if (!SiteYValue1.equalsIgnoreCase(SiteYValue2)) {
				logger.info("User able to swipe down the page to see top products.");
				extent.extentLoggerPass("", "User able to swipe down the page to see top products.");
			} else {
				logger.info("User not able to swipe down the page to see top products.");
				extent.extentLoggerFail("", "User not able to swipe down the page to see top products.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T259(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T259_Guest User- Validate the \"In This video\" tab on shop details page");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(5000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSInThisVideoSelectedTrueInShoppage,
					" landed on In This Video tab ");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Thumbnail of the video");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo,
					"Title: {{ Artist in [color]| Actress name }} (eg: Artist in Grey | Bhumi Padnekar)");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less drop down ");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments, "Outfit");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments,
					"Accessories");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 1);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow");
			waitTime(3000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T270(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T270_Guest User - Verify for tabs on shop details page inside IN THID VIDEO section");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 1);
			String Outfit1 = "outfit";
			String ID1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1));
			System.out.println(ID1);
			String[] ID2 = ID1.split("/");
			System.out.println(ID2[1]);
			String[] ID3 = ID2[1].split("_");
			System.out.println(ID3[0]);
			if (Outfit1.equalsIgnoreCase(ID3[0])) {
				logger.info("User able see respective products items under the Outfit");
				extent.extentLoggerPass("", "User able see respective products items under the Outfit");
			} else {
				logger.info("User not able see respective products items under the Outfit");
				extent.extentLoggerFail("", "User not able see respective products items under the Outfit");
			}
			click(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			String Accessories1 = "accessories";
			String Name1 = getAttributValue("id",
					IOSHiPiNeoShopPage.objiOSAccessoriesProductNameExpandInSavedMoments(1));
			System.out.println(Name1);
			String[] Name2 = Name1.split("/");
			System.out.println(Name2[1]);
			String[] Name3 = Name2[1].split("_");
			System.out.println(Name3[0]);
			if (Accessories1.equalsIgnoreCase(Name3[0])) {
				logger.info("User able see respective products items under the Accessories");
				extent.extentLoggerPass("", "User able see respective products items under the Accessories");
			} else {
				logger.info("User not able see respective products items under the Accessories");
				extent.extentLoggerFail("", "User not able see respective products items under the Accessories");
			}
			click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			String Beauty1 = "beauty";
			String Value1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSBeautyProductNameExpandInSavedMoments(1));
			System.out.println(Value1);
			String[] Value2 = Value1.split("/");
			System.out.println(Value2[1]);
			String[] Value3 = Value2[1].split("_");
			System.out.println(Value3[0]);
			if (Beauty1.equalsIgnoreCase(Value3[0])) {
				logger.info("User able see respective products items under the Beauty");
				extent.extentLoggerPass("", "User able see respective products items under the Beauty");
			} else {
				logger.info("User not able see respective products items under the Beauty");
				extent.extentLoggerFail("", "User not able see respective products items under the Beauty");
			}
			click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Beauty");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			String Hair1 = "hair";
			String Text1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSHairProductNameExpandInSavedMoments(1));
			System.out.println(Text1);
			String[] Text2 = Text1.split("/");
			System.out.println(Text2[1]);
			String[] Text3 = Text2[1].split("_");
			System.out.println(Text3[0]);
			if (Hair1.equalsIgnoreCase(Text3[0])) {
				logger.info("User able see respective products items under the Hair");
				extent.extentLoggerPass("", "User able see respective products items under the Hair");
			} else {
				logger.info("User not able see respective products items under the Hair");
				extent.extentLoggerFail("", "User not able see respective products items under the Hair");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T284(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T284_Logged In User - Verify for tabs on shop details page inside IN THIS VIDEO section");
			System.out.println("T284_Logged In User - Verify for tabs on shop details page inside IN THIS VIDEO section");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			PartialCommentsSwipeiOS("Up", 1);
			String Outfit1 = "outfit";
			String ID1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1));
			System.out.println(ID1);
			String[] ID2 = ID1.split("/");
			System.out.println(ID2[1]);
			String[] ID3 = ID2[1].split("_");
			System.out.println(ID3[0]);
			if (Outfit1.equalsIgnoreCase(ID3[0])) {
				logger.info("User able see respective products items under the Outfit");
				extent.extentLoggerPass("", "User able see respective products items under the Outfit");
			} else {
				logger.info("User not able see respective products items under the Outfit");
				extent.extentLoggerFail("", "User not able see respective products items under the Outfit");
			}
			click(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			String Accessories1 = "accessories";
			String Name1 = getAttributValue("id",
					IOSHiPiNeoShopPage.objiOSAccessoriesProductNameExpandInSavedMoments(1));
			System.out.println(Name1);
			String[] Name2 = Name1.split("/");
			System.out.println(Name2[1]);
			String[] Name3 = Name2[1].split("_");
			System.out.println(Name3[0]);
			if (Accessories1.equalsIgnoreCase(Name3[0])) {
				logger.info("User able see respective products items under the Accessories");
				extent.extentLoggerPass("", "User able see respective products items under the Accessories");
			} else {
				logger.info("User not able see respective products items under the Accessories");
				extent.extentLoggerFail("", "User not able see respective products items under the Accessories");
			}
			click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			String Beauty1 = "beauty";
			String Value1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSBeautyProductNameExpandInSavedMoments(1));
			System.out.println(Value1);
			String[] Value2 = Value1.split("/");
			System.out.println(Value2[1]);
			String[] Value3 = Value2[1].split("_");
			System.out.println(Value3[0]);
			if (Beauty1.equalsIgnoreCase(Value3[0])) {
				logger.info("User able see respective products items under the Beauty");
				extent.extentLoggerPass("", "User able see respective products items under the Beauty");
			} else {
				logger.info("User not able see respective products items under the Beauty");
				extent.extentLoggerFail("", "User not able see respective products items under the Beauty");
			}
			click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Beauty");
			waitTime(2000);
			PartialCommentsSwipeiOS("Up", 1);
			String Hair1 = "hair";
			String Text1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSHairProductNameExpandInSavedMoments(1));
			System.out.println(Text1);
			String[] Text2 = Text1.split("/");
			System.out.println(Text2[1]);
			String[] Text3 = Text2[1].split("_");
			System.out.println(Text3[0]);
			if (Hair1.equalsIgnoreCase(Text3[0])) {
				logger.info("User able see respective products items under the Hair");
				extent.extentLoggerPass("", "User able see respective products items under the Hair");
			} else {
				logger.info("User not able see respective products items under the Hair");
				extent.extentLoggerFail("", "User not able see respective products items under the Hair");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T272(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T272_Logged In User-Verify for IN THIS VIDEO section on the Shop Page");
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			String UN1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			String[] UN2 = UN1.split("@");
			System.out.println(UN2[1]);
			String[] UN5 = UN2[1].split("_");
			System.out.println(UN5[0]);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			String UN3 = getText(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo);
			System.out.println(UN3);
			String[] UN4 = UN3.split(" ");
			System.out.println(UN4[4]);
			if (UN5[0].equalsIgnoreCase(UN4[4])) {
				logger.info("IN THIS SECTION contais only product from the currently playing video on the feed screen");
				extent.extentLoggerPass("",
						"IN THIS SECTION contais only product from the currently playing video on the feed screen");
			} else {
				logger.info(
						"IN THIS SECTION not contais only product from the currently playing video on the feed screen");
				extent.extentLoggerFail("",
						"IN THIS SECTION not contais only product from the currently playing video on the feed screen");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T339_T346(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T339_Guest User - Verify for user's able to switch between the outfit/accessories/Beauty/hair tab inside the product panel");
		} else {
			extent.HeaderChildNode(
					"T346_Logged In user- Verify for user's able to switch between the outfit/accessories/Beauty/hair tab in side the product panel.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedTrueAfterExpandInSavedMoments,
				"Switched To Accessories");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedTrueAfterExpandInSavedMoments,
				"Switched To Beauty");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedTrueAfterExpandInSavedMoments, "Switched To Hair");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSOutfitSelectedFalseAfterExpandInSavedMoments, "Outfit");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments,
				"Switched To Outfit");
		waitTime(2000);
	}

	public void FeedScreen_T340_T347(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T340_Guest User- Verify for user should be able to see respective products under outfit/accessories/Beauty/hair tabs on \"saved moments\" tab");
		} else {
			extent.HeaderChildNode(
					"T347_Logged In User - Verify for user should be able to see respective products under outfit/accessories/Beauty/hair tabs on \"saved moments\" tab");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		deleteProductsInSavedMoments();
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discver The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(4000);
		click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Cross Icon");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		String Outfit1 = "outfit";
		String ID1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1));
		System.out.println(ID1);
		String[] ID2 = ID1.split("/");
		System.out.println(ID2[1]);
		String[] ID3 = ID2[1].split("_");
		System.out.println(ID3[0]);
		if (Outfit1.equalsIgnoreCase(ID3[0])) {
			logger.info("User able see respective products items under the Outfit");
			extent.extentLoggerPass("", "User able see respective products items under the Outfit");
		} else {
			logger.info("User not able see respective products items under the Outfit");
			extent.extentLoggerFail("", "User not able see respective products items under the Outfit");
		}
		click(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments, "Accessories");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		String Accessories1 = "accessories";
		String Name1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSAccessoriesProductNameExpandInSavedMoments(1));
		System.out.println(Name1);
		String[] Name2 = Name1.split("/");
		System.out.println(Name2[1]);
		String[] Name3 = Name2[1].split("_");
		System.out.println(Name3[0]);
		if (Accessories1.equalsIgnoreCase(Name3[0])) {
			logger.info("User able see respective products items under the Accessories");
			extent.extentLoggerPass("", "User able see respective products items under the Accessories");
		} else {
			logger.info("User not able see respective products items under the Accessories");
			extent.extentLoggerFail("", "User not able see respective products items under the Accessories");
		}
		click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		String Beauty1 = "beauty";
		String Value1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSBeautyProductNameExpandInSavedMoments(1));
		System.out.println(Value1);
		String[] Value2 = Value1.split("/");
		System.out.println(Value2[1]);
		String[] Value3 = Value2[1].split("_");
		System.out.println(Value3[0]);
		if (Beauty1.equalsIgnoreCase(Value3[0])) {
			logger.info("User able see respective products items under the Beauty");
			extent.extentLoggerPass("", "User able see respective products items under the Beauty");
		} else {
			logger.info("User not able see respective products items under the Beauty");
			extent.extentLoggerFail("", "User not able see respective products items under the Beauty");
		}
		click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		String Hair1 = "hair";
		String Text1 = getAttributValue("id", IOSHiPiNeoShopPage.objiOSHairProductNameExpandInSavedMoments(1));
		System.out.println(Text1);
		String[] Text2 = Text1.split("/");
		System.out.println(Text2[1]);
		String[] Text3 = Text2[1].split("_");
		System.out.println(Text3[0]);
		if (Hair1.equalsIgnoreCase(Text3[0])) {
			logger.info("User able see respective products items under the Hair");
			extent.extentLoggerPass("", "User able see respective products items under the Hair");
		} else {
			logger.info("User not able see respective products items under the Hair");
			extent.extentLoggerFail("", "User not able see respective products items under the Hair");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T386_T391(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T386_Guest User-Verify closing in app browser");
		} else {
			extent.HeaderChildNode("T391_Logged In User-Verify closing in app browser");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "Firast Image");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "Done");
		waitTime(3000);
		if (verifyElementExist(IOSHiPiNeoShopPage.objiosPullBarInShopPage, "Pull Bar")) {
			logger.info("once the user close the app browser then it is getting back to shop page");
			extent.extentLoggerPass("", "once the user close the app browser then it is getting back to shop page");
		} else {
			logger.info("once the user close the app browser then it is not getting back to shop page");
			extent.extentLoggerFail("", "once the user close the app browser then it is not getting back to shop page");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T345(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {

			extent.HeaderChildNode(
					"T345_Logged In User-Validate the expanded products details page on \"Saved moment\" tab");

			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Save Moments");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Epand");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Video thumbnail image");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo, "Title");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments, "Outfit Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments,
					"Accessories Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "Product Image");
			waitTime(3000);
			PartialCommentsSwipe("Up", 1);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Mark");
			waitTime(3000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T338(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T338_Guest User- Validate the expanded products details page on \"Saved moment\" tab");

			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiosSavedMomentsInShopPage, "Save Moments");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Epand");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Video thumbnail image");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo, "Title");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments, "Outfit Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments,
					"Accessories Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair Tab");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "Product Image");
			waitTime(3000);
			if (!verifyElementExist(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Mark")) {
				PartialCommentsSwipe("Up", 1);
			}
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Mark");
			waitTime(3000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T260_T274(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T260_Guest User-Verify for IN THIS Video tab UI");
		} else {
			extent.HeaderChildNode("T274_Logged In user-Verify for IN THIS Video tab UI");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Thumbnail image of the video");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo,
				"Product Title with Actress name");
		waitTime(3000);
		CloseTheShopBar();
	}

	public void FeedScreen_T261_T276(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode(
					"T261_Guest User -Verify for user is able to view less data by clicking Less drop down on \"IN THIS VIDEO\" tab of the shop detail page.");
			System.out.println("T261_Guest User -Verify for user is able to view less data by clicking Less drop down on \\\"IN THIS VIDEO\\\" tab of the shop detail page.");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T276_Logged In user - Verify for user is able to view less data by clicking Less drop down on \"IN THIS VIDEO\" tab of the shop detail page.");
			System.out.println("T276_Logged In user - Verify for user is able to view less data by clicking Less drop down on \"IN THIS VIDEO\" tab of the shop detail page.");
		}
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Thumbnail image of the video");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo,
				"Product Title with Actress name");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
		waitTime(3000);
		CloseTheShopBar();
	}

	public void FeedScreen_T335_T342(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T335_Guest User-Verify for Saved Moment tab UI");
		} else {
			extent.HeaderChildNode("T342_Logged In user-Verify for Saved Moment tab UI");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Thumbnail image of the video");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo,
				"Product Title with Actress name");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
		waitTime(3000);
		CloseTheShopBar();
	}

	public void FeedScreen_T370_T373(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T370_Guest User-Verify Beauty banner image");
		} else {
			extent.HeaderChildNode("T373_Logged In user-Verify Beauty banner image");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(3000);
//		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBannerImageInBeautyTab, "banner image");
//		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBannerNameInBeautyTab, "beaty cover heading");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBannerDescriptionInBeautyTab, "beaty cover message");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T355(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T355_Guest User- Verify the product card details");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "product card image");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1),
					"Product card name");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1),
					"Product card seller name");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1),
					"Product card GET button to navigate product website");
			waitTime(2000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T366(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T366_Logged In user-Verify the product card details");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "product card image");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitProductNameExpandInSavedMoments(1),
					"Product card name");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(1),
					"Product card seller name");
			waitTime(2000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1),
					"Product card GET button to navigate product website");
			waitTime(2000);
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T371_T374(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T371_Guest User-Verify Beaty details page");
		} else {
			extent.HeaderChildNode("T374_Logged In user-Verify Beaty details page");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautyImageExpandInSavedMoments(1), "product card image");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautyProductNameExpandInSavedMoments(1), "Product card name");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(3), "Product card seller name");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1),
				"Product card GET button to navigate product website");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T377_T380(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T377_Guest User-Verify Hair details page");
		} else {
			extent.HeaderChildNode("T380_Logged In User-Verify Hair details page");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairImageExpandInSavedMoments(1), "product card image");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairProductNameExpandInSavedMoments(1), "Product card name");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(4), "Product card seller name");
		waitTime(2000);
		PartialCommentsSwipeiOS("Up", 1);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1),
				"Product card GET button to navigate product website");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T372_T375(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T372_Guest User- Verify Beauty Card image click and get button click(Arrow mark)");
			System.out.println("T372_Guest User- Verify Beauty Card image click and get button click(Arrow mark)");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T375_Logged In User- Verify Beauty Card image click and get button click(Arrow mark)");
			System.out.println("T375_Logged In User- Verify Beauty Card image click and get button click(Arrow mark)");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
		waitTime(3000);
		String ShopSite1 = getText(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(4));
		System.out.println(ShopSite1);
		extent.extentLogger("", " the shop site 1 is "+ShopSite1);
		PartialCommentsSwipeiOS("Up", 1);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Cross Icon");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Button");
		waitTime(2000);
		String SiteName2 = getAttributValue("value", IOSHiPiNeoShopPage.objiosMyntraSiteInHipi);
		waitTime(3000);
		System.out.println(SiteName2);
		
	
		extent.extentLogger("", " the shop site 3 is :" + SiteName2);
		if (SiteName2.contains(ShopSite1.toLowerCase())) {
			logger.info(
					"On tap Hair product image and GET button (red arrow mark) it is redirects to respective product page");
			extent.extentLoggerPass("",
					"On tap Hair product image and GET button (red arrow mark) it is redirects to respective product page");
		} else {
			logger.info(
					"On tap Hair product image and GET button (red arrow mark) it is not redirects to respective product page");
			extent.extentLoggerFail("",
					"On tap Hair product image and GET button (red arrow mark) it is not redirects to respective product page");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T378_T381(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T378_Guest User- Verify Hair Card image click and get button click(Arrow mark)");
			System.out.println("T378_Guest User- Verify Hair Card image click and get button click(Arrow mark)");
		} else {
			System.out.println();
			extent.HeaderChildNode(
					"T381_Logged In User- Verify Hair Card image click and get button click(Arrow mark)");
			System.out.println("T381_Logged In User- Verify Hair Card image click and get button click(Arrow mark)");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
		waitTime(3000);
		String ShopSite1 = getText(IOSHiPiNeoShopPage.objiOSShopSiteNameExpandInSavedMoments(4));
		System.out.println(ShopSite1);
		extent.extentLogger("", "the shop site name below product is :--"+ShopSite1);
		PartialCommentsSwipeiOS("Up", 1);
		click(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Cross Icon");
		waitTime(2000);
		click(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Button");
		waitTime(2000);
		String SiteName2 = getAttributValue("value", IOSHiPiNeoShopPage.objiosMyntraSiteInHipi);
		waitTime(3000);
		System.out.println(SiteName2);
		extent.extentLogger("", "the shop site name inside site is :--"+SiteName2);
		if (SiteName2.contains(ShopSite1.toLowerCase())) {
			logger.info(
					"On tap Hair product image and GET button (red arrow mark) it is redirects to respective product page");
			extent.extentLoggerPass("",
					"On tap Hair product image and GET button (red arrow mark) it is redirects to respective product page");
		} else {
			logger.info(
					"On tap Hair product image and GET button (red arrow mark) it is not redirects to respective product page");
			extent.extentLoggerFail("",
					"On tap Hair product image and GET button (red arrow mark) it is not redirects to respective product page");
		}
		click(IOSHiPiNeoShopPage.objiosDoneButtonInMyntraSite, "done");
		waitTime(2000);
		CloseTheShopBar();
	}

	public void FeedScreen_T299_T309(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			System.out.println("T299_Guest User -Verify right products are displaying on shop detail page when user click any of the saved video objects in a small carousel images.");
			extent.HeaderChildNode(
					"T299_Guest User -Verify right products are displaying on shop detail page when user click any of the saved video objects in a small carousel images.");
		} else {
			System.out.println();
			System.out.println("T309_Logged In User-Verify right products are displaying on shop detail page when user click any of the saved video objects in a small carousel images.");
			extent.HeaderChildNode(
					"T309_Logged In User-Verify right products are displaying on shop detail page when user click any of the saved video objects in a small carousel images.");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
		
		String[] UserName2 = UserName1.split("@");
		System.out.println(UserName2[1]);
		String[] UserName3 = UserName2[1].split("_");
		System.out.println(UserName3[0]);
		
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product");
		waitTime(2000);
		
		String Title1 = getText(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo);
		String[] Title2 = Title1.split(" ");
		System.out.println(Title2[4]);
		
		if (UserName3[0].equalsIgnoreCase(Title2[4])) {
			logger.info("Shop details page shows right products in the video");
			extent.extentLoggerPass("", "Shop details page shows right products in the video");
		} else {
			logger.info("Shop details page did not show right products in the video");
			extent.extentLoggerFail("", "Shop details page did not show right products in the video");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T288(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T288_Verify for user should be able to see right products/Video objects on the shop page.");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			String UserName1 = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			String[] UserName2 = UserName1.split("@");
			System.out.println(UserName2[1]);
			String[] UserName3 = UserName2[1].split("_");
			System.out.println(UserName3[0]);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSHipiImageAferSavedInfeedSection(1), "Product");
			waitTime(2000);
			String Title1 = getText(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo);
			String[] Title2 = Title1.split(" ");
			System.out.println(Title2[4]);
			if (UserName3[0].equalsIgnoreCase(Title2[4])) {
				logger.info(
						"User able to see right products/video object which are belonging to the current playing shoppable video.");
				extent.extentLoggerPass("",
						"User able to see right products/video object which are belonging to the current playing shoppable video.");
			} else {
				logger.info(
						"User not able to see right products/video object which are belonging to the current playing shoppable video.");
				extent.extentLoggerFail("",
						"User not able to see right products/video object which are belonging to the current playing shoppable video.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T348_T359(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T348_Guest User-Verify for user should be able to scroll down/scroll up to see the products under the panel.");
		} else {
			extent.HeaderChildNode(
					"T359_Logged In userVerify for user should be able to scroll down/scroll up to see the products under the panel.");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expnd Button");
		waitTime(2000);
		String Arrow1 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1));
		System.out.println(Arrow1);
		PartialCommentsSwipeiOS("Up", 1);
		String Arrow2 = getAttributValue("y", IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1));
		System.out.println(Arrow2);
		if (!Arrow1.equalsIgnoreCase(Arrow2)) {
			logger.info("User able to scroll the whole page");
			extent.extentLoggerPass("", "User able to scroll the whole page");
		} else {
			logger.info("User not able to scroll the whole page");
			extent.extentLoggerFail("", "User not able to scroll the whole page");
		}
		CloseTheShopBar();
	}

	public void FeedScreen_T379(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T379_Logged In User-Verify Hair banner image");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSBannerNameInHairTab, "hair cover heading");
			waitTime(3000);
			verifyElementPresent(IOSHiPiNeoShopPage.objiOSBannerDescriptionInHairTab, "hair cover message");
			waitTime(3000);
		}
	}

	public void FeedScreen_T337(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			extent.HeaderChildNode("T337_Guest User- Verify for can user able to expand all the panels at a time");
			System.out.println("T337_Guest User- Verify for can user able to expand all the panels at a time");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
			waitTime(3000);
			int Buttons2 = 1;
			List<WebElement> outfit1 = findElements(IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments);
			int Buttons1 = outfit1.size();
			System.out.println(Buttons1);
			extent.extentLogger("", "outfit1----"+outfit1);
			if (Buttons1 == Buttons2) {
				logger.info("Guest User able to Expand data for one product at a time .");
				extent.extentLoggerPass("", "Guest User able to Expand data for one product at a time.");
			} else {
				logger.info("Guest User not able to Expand data for one product at a time.");
				extent.extentLoggerFail("", "Guest User not able to Expand data for one product at a time.");
			}
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
			waitTime(3000);
			List<WebElement> DeleteIcon = findElements(
					IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage);
			int DeleteButtons = DeleteIcon.size();
			
			System.out.println(DeleteButtons);
			extent.extentLogger("", "DeleteButtons  -"+DeleteButtons);
			if (DeleteButtons > Buttons2) {
				logger.info( 
						"Guest User able to Expand data for one product at a time and able to view other product data once the existing opend panel is closed.");
				extent.extentLoggerPass("",
						"Guest User able to Expand data for one product at a time and able to view other product data once the existing opend panel is closed.");
			} else {
				logger.info(
						"Guest User not able to Expand data for one product at a time and not able to view other product data once the existing opend panel is closed.");
				extent.extentLoggerFail("",
						"Guest User not able to Expand data for one product at a time and not able to view other product data once the existing opend panel is closed.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T344(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T344_Logged In User- Verify for can user able to expand all the panels at a time");
			System.out.println("T344_Logged In User- Verify for can user able to expand all the panels at a time");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
			waitTime(3000);
			int Buttons2 = 1;
			List<WebElement> outfit1 = findElements(
					IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments);
			int Buttons1 = outfit1.size();
			System.out.println(Buttons1);
			if (Buttons1 == Buttons2) {
				logger.info("User able to Expand data for one product at a time .");
				extent.extentLoggerPass("", "User able to Expand data for one product at a time.");
			} else {
				logger.info("User not able to Expand data for one product at a time.");
				extent.extentLoggerFail("", "User not able to Expand data for one product at a time.");
			}
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
			waitTime(3000);
			List<WebElement> DeleteIcon = findElements(
					IOSHiPiNeoShopPage.objiosNoOfDeleteButtonsSavedMomentsInShopPage);
			int DeleteButtons = DeleteIcon.size();
			System.out.println(DeleteButtons);
			if (DeleteButtons > Buttons2) {
				logger.info(
						"User able to Expand data for one product at a time and able to view other product data once the existing opend panel is closed.");
				extent.extentLoggerPass("",
						"User able to Expand data for one product at a time and able to view other product data once the existing opend panel is closed.");
			} else {
				logger.info(
						"User not able to Expand data for one product at a time and not able to view other product data once the existing opend panel is closed.");
				extent.extentLoggerFail("",
						"User not able to Expand data for one product at a time and not able to view other product data once the existing opend panel is closed.");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T343(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode("T343_Logged In User-Verify for EXPAND button on the product panel of Shop Page");
			System.out.println("T343_Logged In User-Verify for EXPAND button on the product panel of Shop Page");
			deleteProductsInSavedMoments();
			ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
			waitTime(3000);
			click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand Button");
			waitTime(3000);
			if (verifyElementExist(IOSHiPiNeoShopPage.objiOSOutfitAfterExpandInSavedMoments, "Outfit")) {
				logger.info("User able to expand the product details page from the product panel on Shop");
				extent.extentLoggerPass("",
						"User able to expand the product details page from the product panel on Shop");
			} else {
				logger.info("User not able to expand the product details page from the product panel on Shop");
				extent.extentLoggerFail("",
						"User not able to expand the product details page from the product panel on Shop");
			}
			CloseTheShopBar();
		}
	}

	public void FeedScreen_T259_T273(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T259_Guest User- Validate the \"In This video\" tab on shop details page");
		} else {
			extent.HeaderChildNode("T273_Logged In User-Validate the \"In This video\" tab on shop details page");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Scrolled till Shop");
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSInThisVideoSelectedTrueInShoppage,
				"landed on In This Video tab ");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Video thumbnail image");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo, "Title");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments, "Outfit Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments,
				"Accessories Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "Product Image");
		waitTime(3000);
		PartialCommentsSwipe("Up", 1);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Mark");
		waitTime(3000);
		CloseTheShopBar();
	}

	public void FeedScreen_T334_T341(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode("T334_Guest User - Validate the \"Saved Moment\" tab on shop details page");
		} else {
			extent.HeaderChildNode("T341_Login User - Validate the \"Saved Moment\" tab on shop details page");
		}
		deleteProductsInSavedMoments();
		ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover the look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSSaveLookBtn, "Discover The Look");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiOSShopBtnInBelowTabBar, "Shop Button");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.objiOSSavedMomentsInShopPage, "Saved Moments");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSSavedMomentsSelectedTrueInShoppage,
				"landed on Saved Moments tab ");
		waitTime(3000);
		click(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Expand"), "Expand");
		waitTime(2000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSCrossIconInSmallVideo, "Video thumbnail image");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSTitleBesideLessOrExpandButtonInInThisVideo, "Title");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.ExpandLessButtonInShopPage("Less"), "Less Button");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSOutfitSelectedTrueAfterExpandInSavedMoments, "Outfit Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSAccessoriesSelectedFalseAfterExpandInSavedMoments,
				"Accessories Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSBeautySelectedFalseAfterExpandInSavedMoments, "Beauty Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSHairSelectedFalseAfterExpandInSavedMoments, "Hair Tab");
		waitTime(3000);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSImageExpandInSavedMoments(1), "Product Image");
		waitTime(3000);
		PartialCommentsSwipe("Up", 1);
		verifyElementPresent(IOSHiPiNeoShopPage.objiOSArrowExpandInSavedMoments(1), "Arrow Mark");
		waitTime(3000);
		CloseTheShopBar();
	}

	public void FeedScreen_P1_T154(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T154_Logged in User - Check if viewer/creator is able to like a existing/new comment by tapping heart Icon next to comment description");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you selected");
			waitTime(2000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);
			clickOnCommentBtn();
			waitTime(2000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "like button of first comment");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked comment")) {
				logger.info(
						"viewer/creator is able to like a existing/new comment by tapping Like Icon next to comment description");
				extent.extentLoggerPass("",
						"viewer/creator is able to like a existing/new comment by tapping Like Icon next to comment description");
			} else {
				logger.info(
						"viewer/creator is not able to like a existing/new comment by tapping Like Icon next to comment description");
				extent.extentLoggerFail("",
						"viewer/creator is not able to like a existing/new comment by tapping Like Icon next to comment description");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close comment");
			waitTime(2000);

		}
	}

	public void FeedScreen_P2_T155(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"155_Logged in User - Check if viewer/creator is able to dislike a existing/new comment by tapping like icon next to comment description");
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSForYouTabSelectedTrueInFeedScreen, "For you selected");
			waitTime(2000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(4000);

			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "like button of first comment");
			waitTime(2000);

			if (verifyElementPresent(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked comment")) {
				click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "dislike comment");
				waitTime(4000);
				verifyElementPresent(IOSHipiNeoHomePage.LikeIconInCommentScreen(1),
						"like button of first comment after dislike");
				waitTime(2000);
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close comment");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home");
			waitTime(3000);

		}
	}

	public void FeedScreen_P1_T490(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T490_Logged in User - Check if viewer/creator is able to like a existing/new comment by tapping heart Icon next to comment description");

			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen, "Following selected");
			waitTime(2000);
			commentcount(5);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);
			clickOnCommentBtn();
			waitTime(3000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text1 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text1);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "like button of first comment");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked comment")) {
				logger.info(
						"viewer/creator is able to like a existing/new comment by tapping Like Icon next to comment description");
				extent.extentLoggerPass("",
						"viewer/creator is able to like a existing/new comment by tapping Like Icon next to comment description");
			} else {
				logger.info(
						"viewer/creator is not able to like a existing/new comment by tapping Like Icon next to comment description");
				extent.extentLoggerFail("",
						"viewer/creator is not able to like a existing/new comment by tapping Like Icon next to comment description");
			}

			if (verifyElementPresent(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked comment")) {
				click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "dislike comment");
				waitTime(4000);
				verifyElementPresent(IOSHipiNeoHomePage.LikeIconInCommentScreen(1),
						"like button of first comment after dislike");
				waitTime(2000);
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close comment");
			waitTime(2000);

			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosLastVideoCreatedInProfilePage, "created video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
			waitTime(3000);

			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "HiHello", "HiHello");
			waitTime(5000);
			String Text2 = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			waitTime(5000);
			System.out.println(Text2);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(10000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "like button of first comment");
			waitTime(2000);
			if (verifyElementPresent(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked comment")) {
				logger.info(
						"viewer/creator is able to like a existing/new comment by tapping Like Icon next to comment description");
				extent.extentLoggerPass("",
						"viewer/creator is able to like a existing/new comment by tapping Like Icon next to comment description");
			} else {
				logger.info(
						"viewer/creator is not able to like a existing/new comment by tapping Like Icon next to comment description");
				extent.extentLoggerFail("",
						"viewer/creator is not able to like a existing/new comment by tapping Like Icon next to comment description");
			}

			if (verifyElementPresent(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked comment")) {
				click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "dislike comment");
				waitTime(4000);
				verifyElementPresent(IOSHipiNeoHomePage.LikeIconInCommentScreen(1),
						"like button of first comment after dislike");
				waitTime(2000);
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "close comment");
			waitTime(2000);

		}
	}

	// ==========================================Profile=========================================================================

	public void Profile_T1051(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1051_Logged in user- Check if User is able to upload image by capturing image from camera.");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosEditProfileInProfilePage, "Edit Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosChangePhotoInEditPage, "Change Photo Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSTakeAPhotoPopupInEditProfileScreen, "Take A Photo Popup");
			waitTime(2000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosCameraPopup, "CameraPopup")) {
				click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "Ok");
				waitTime(2000);
			}
			click(IOSHipiNeoProfilePage.objiOSPhotoCaptureButtonInCamaraScreen, "Photo Capture Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSUsePhotoButtonInCamaraScreen, "Use Photo Button");
			if (waitForElementDisplayediOS(
					IOSHipiNeoProfilePage.objiOSProfilePictureUploadedSuccessfullyToustMessageInEditProfileScreen, 25,
					"Profile Picture Uploaded Successfully Toust Message")) {
				logger.info("User able to upload image by capturing image from camera.");
				extent.extentLoggerPass("", "User able to upload image by capturing image from camera.");
			} else {
				logger.info("User not able to upload image by capturing image from camera.");
				extent.extentLoggerFail("", "User not able to upload image by capturing image from camera.");
			}
			NavigateToHomPage();
		}
	}

	public void Profile_T1173(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1173_Logged in user - Check user is able to share his private video ");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage, "Private Video Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share Button");
			if (verifyElementExist(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Message etc")) {
				logger.info("User is getting pop-up displayed with option Message etc");
				extent.extentLoggerPass("", "User is getting pop-up displayed with option Message etc");
			} else {
				logger.info("User is not getting pop-up displayed with option Message etc");
				extent.extentLoggerFail("", "User is not getting pop-up displayed with option Message etc");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void Profile_T1169(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode("T1169_Logged in user - Check if user can comment on private video");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage, "Private Video Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Button");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add A Comment");
			waitTime(2000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Hi", "Hi");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSFewSecondsAgoCommentInCommentScreen,
					"Few second Ago Comment")) {
				logger.info("Own user able to comment on his video");
				extent.extentLoggerPass("", "Own user able to comment on his video");
			} else {
				logger.info("Own user not able to comment on his video");
				extent.extentLoggerFail("", "Own user not able to comment on his video");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, userType);
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void Profile_T1170(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			extent.HeaderChildNode(
					"T1170_Logged in user - Check user can like his own comment or not in private video");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosPrivateVideoButtonInProfilePage, "Private Video Button");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Button");
			waitTime(5000);

			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, generateRandomString(5), "Random String");
			waitTime(4000);
			String comt = getText(IOSHipiNeoHomePage.objiOSAddedCommentInCommentScreen);
			logger.info("The typed comment in Add comment section is : " + comt);
			extent.extentLoggerPass("", "The typed comment in Add comment section is : " + comt);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
			waitTime(4000);
			if (verifyElementExist(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked Comment")) {
				click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked Comment");
				waitTime(2000);
			}
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "Like Comment");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked Comment")) {
				logger.info("User able to like his own private comment ");
				extent.extentLoggerPass("", "User able to like his own private comment ");
			} else {
				logger.info("User not able to like his own private comment ");
				extent.extentLoggerFail("", "User not able to like his own private comment ");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, userType);
			waitTime(2000);
			NavigateToHomPage();
		}
	}

	public void Login_SignupScreen_T927(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		extent.HeaderChildNode("T927_Check if user navigative to Verification screen by tapping on Send OTP CTA");
		System.out.println("T927_Check if user navigative to Verification screen by tapping on Send OTP CTA");
		ClickOnSignUp();
		waitTime(2000);
		datePicker();
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosNextButtonInSignUpScreen, "Next Button");
		waitTime(2000);
		click(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "Phone Number Text Field");
		waitTime(3000);
		String num = RandomIntegerGenerator(9);
		type(IOSHipiNeoProfilePage.objiosPhoneNumberTextFieldInLogInPage, "9" + num, "9" + num);
		waitTime(3000);
		click(IOSHipiNeoProfilePage.objiosSendOTPButtonInLoginPage, "Send OTP Button");
		waitTime(3000);
		if (verifyElementExist(IOSHipiNeoProfilePage.objiosEnter4DigitCodeTextInOTPVerificationPage,
				"Enter 4 Digit OTP")) {
			logger.info("User navigated to verification screen by tapping on Send OTP CTA");
			extent.extentLoggerPass("", "User navigated to verification screen by tapping on Send OTP CTA");
		} else {
			logger.info("User not navigated to verification screen by tapping on Send OTP CTA");
			extent.extentLoggerFail("", "User not navigated to verification screen by tapping on Send OTP CTA");
		}
		NavigateToHomPage();
	}
	}

	/*
	 * To navigate to Effect or Filter Detail Screen by clicking on deeplink.
	 * deeplink clicked from message app
	 */
	public void NavigateToEffectorFilterDetailScreen(String EffectDetail, String TapOnAnyVideo,
			String verifycommentboxAtBottom, String nameOfScreen, String messageName, String LinkName)
			throws Exception {

		// DeepLinkURLForShopButton("No", "filterandeffectlink", FilterAndEffect);

		DeepLinkURLForShopButton("No", messageName, LinkName);
		waitTime(4000);
		
		
		if (EffectDetail.equalsIgnoreCase("Yes")) {
			click(IOSHipiNeoHomePage.objiOSAddedEffectOnScreen, "Effect detail");
			waitTime(3000);
		}
		if (EffectDetail.equalsIgnoreCase("No")) {
			click(IOSHipiNeoHomePage.objiOSAddedFiltersOnScreen, "Filter detail");
			waitTime(3000);
		}

		if (TapOnAnyVideo.equalsIgnoreCase("Yes")) {

			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosOfHashtagVideoDetailPage, "First video");

		}

		if (verifycommentboxAtBottom.equalsIgnoreCase("Yes")) {

			if (verifyElementPresent(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen,
					"comment box option at bottom")) {
				logger.info(
						"user should be able to see comment box at bottom of the screen over video playing/paused in "
								+ nameOfScreen);
				extent.extentLoggerPass("",
						"user should be able to see comment box at bottom of the screen over video playing/paused in "
								+ nameOfScreen);

			} else {
				logger.info("user is not able to see comment box at bottom of the screen over video playing/paused in "
						+ nameOfScreen);
				extent.extentLoggerFail("",
						"user is not able to see comment box at bottom of the screen over video playing/paused in "
								+ nameOfScreen);
			}
			waitTime(3000);

		}

	}

	public void verifyEffectDetailScreen_T1899_T1909_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1899_Check if Guest user is able to see comment box at bottom of the screen over video playing/paused in Effect Detail screen");
			System.out.println(
					"T1899_Check if Guest user is able to see comment box at bottom of the screen over video playing/paused in Effect Detail screen");
		} else {

			extent.HeaderChildNode(
					"T1909_Check if Logged-In user is able to see comment box at bottom of the screen over video playing/paused in Effect Detail screen");
			System.out.println(
					"T1909_Check if Logged-In user is able to see comment box at bottom of the screen over video playing/paused in Effect Detail screen");
		}

		NavigateToEffectorFilterDetailScreen("Yes", "Yes", "Yes", "Effect Detail Screen", "filterandeffectlink",
				FilterAndEffect);
		BackButton();
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

	}

	public void verifyFilterDetailScreen_T1900_T1910_P2(String userType) throws Exception {

		if (userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1900_Check if Guest user is able to see comment box at bottom of the screen over video playing/paused in Filter Detail screen");
			System.out.println(
					"T1900_Check if Guest user is able to see comment box at bottom of the screen over video playing/paused in Filter Detail screen");
		} else {

			extent.HeaderChildNode(
					"T1910_Check if Logged-In user is able to see comment box at bottom of the screen over video playing/paused in Filter Detail screen");
			System.out.println(
					"T1910_Check if Logged-In user is able to see comment box at bottom of the screen over video playing/paused in Filter Detail screen");
		}
		NavigateToEffectorFilterDetailScreen("No", "Yes", "Yes", "Filter detatail screen", "filterandeffectlink",FilterAndEffect);
		BackButton();
		click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
	}

	public void VerifyDeeplinks_T1915_P1(String userType) throws Exception {

		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1915_Check if Logged-In user is able to see comment box at the bottom of the screen over the video playing/paused on tapping video shared over deeplink");
			System.out.println(
					"T1915_Check if Logged-In user is able to see comment box at the bottom of the screen over the video playing/paused on tapping video shared over deeplink");

			NavigateToEffectorFilterDetailScreen("no", "Yes", "Yes", "video shared over deeplink",
					"filterandeffectlink",FilterAndEffect);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void VerifyDeeplinks_T1928_P0(String userType) throws Exception {

		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			extent.HeaderChildNode(
					"T1928_Check if Logged-In user/Guest user is able to view comment box at the bottom of the screen if video is shared from discover to social media");
			System.out.println(
					"T1928_Check if Logged-In user/Guest user is able to view comment box at the bottom of the screen if video is shared from discover to social media");

			NavigateToEffectorFilterDetailScreen("Yes", "yes", "Yes",
					"video shared from discover to social media(Message app)", "filterandeffectlink",FilterAndEffect);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void VerifyDeeplinks_T1929_P1(String userType) throws Exception {

		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1929_Check if Logged-In user/Guest user is able to view comment box at the bottom of the screen if video is shared from Sound Detail screen");
			System.out.println(
					"T1929_Check if Logged-In user/Guest user is able to view comment box at the bottom of the screen if video is shared from Sound Detail screen");

			NavigateToEffectorFilterDetailScreen("Yes", "Yes", "Yes",
					"video shared from Sound Detail screen", "sounddetail", soundlink);

			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void VerifyDeeplinks_T1930_P1(String userType) throws Exception {

		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1930_Check if Logged-In user/Guest user is able to view comment box at the bottom of the screen if video is shared from Hashtag detail screen to social media");
			System.out.println(
					"T1930_Check if Logged-In user/Guest user is able to view comment box at the bottom of the screen if video is shared from Hashtag detail screen to social media");

			NavigateToEffectorFilterDetailScreen("Not reqired", "Not reqired", "No",
					"video shared from Hashtag Detail screen", "hashtagdetail", Hashtaglink);

			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void VerifyDeeplinks_T1931_P1(String userType) throws Exception {

		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1931_Check if Logged-In user is able to add comment on tapping comment box at the bottom of the screen if video is shared from discover to social media");
			System.out.println(
					"T1931_Check if Logged-In user is able to add comment on tapping comment box at the bottom of the screen if video is shared from discover to social media");

			NavigateToEffectorFilterDetailScreen("Yes", "Yes", "Yes",
					"video shared from discover to social media(Message app)", "filterandeffectlink",FilterAndEffect);
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box option at bottom");
			waitTime(34000);
			click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box option at bottom");
			waitTime(9000);
			String random = RandomIntegerGenerator(5);
			System.out.println("Random string generated is :" + random);
			extent.extentLogger("", "Random string generated is :" + random);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, random, random);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "close");
			waitTime(3000);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void VerifyDeeplinks_T1932_P1(String userType) throws Exception {

		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1932_Check if Logged-In user is able to add comment on tapping comment box at the bottom of the screen if video is shared from Sound Detail screen");
			System.out.println(
					"T1932_Check if Logged-In user is able to add comment on tapping comment box at the bottom of the screen if video is shared from Sound Detail screen");

			NavigateToEffectorFilterDetailScreen("Yes", "Yes", "Yes",
					"video shared from Sound Detail screen", "sounddetail", soundlink);
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box option at bottom");
			waitTime(5000);
//			click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box option at bottom");
//			waitTime(9000);
			String random = RandomIntegerGenerator(5);
			System.out.println("Random string generated is :" + random);
			extent.extentLogger("", "Random string generated is :" + random);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, random, random);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "close");
			waitTime(3000);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}

	public void VerifyDeeplinks_T1933_P1(String userType) throws Exception {

		if (!userType.equalsIgnoreCase("Guest")) {
			extent.HeaderChildNode(
					"T1933_Check if Logged-In user is able to add comment on tapping comment box at the bottom of the screen if video is shared from Hashtag detail screen to social media");
			System.out.println(
					"T1933_Check if Logged-In user is able to add comment on tapping comment box at the bottom of the screen if video is shared from Hashtag detail screen to social media");

			NavigateToEffectorFilterDetailScreen("Not reqired", "Not reqired", "No",
					"video shared from Hashtag Detail screen", "hashtagdetail", Hashtaglink);
			waitTime(4000);
			click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box option at bottom");
			waitTime(3000);
//			click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box option at bottom");
//			waitTime(7000);
			String random = RandomIntegerGenerator(5);
			System.out.println("Random string generated is :" + random);
			extent.extentLogger("", "Random string generated is :" + random);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, random, random);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "close");
			waitTime(3000);
			BackButton();
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

		}

	}



	//==============================================create video======================================================================						


	public void CreateVideo_T1951(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1951_Verify whether the user is able to add sound for a video & upload on Hipi app");
			System.out.println("T1951_Verify whether the user is able to add sound for a video & upload on Hipi app");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			String ExpectedSound = getText(IOSHipiCreateVideoPage.objiosSongTitleInSoundScreen);
			String[] ExpectedSound1 = ExpectedSound.split(" ");
			System.out.println(ExpectedSound1[0]);
			waitTime(3000);
			click(IOSHipiCreateVideoPage.objiosSongTitleInSoundScreen, "Song Title 1");
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiostickMarkInSoundSeletion, "Tick Mark");
			waitTime(4000);
			String ActualSound1 = getText(IOSHipiCreateVideoPage.objiosSoundTitleInRecordScreen);
			String[] ActualSound2 = ActualSound1.split(" ");
			String ActualSound = ActualSound2[1].substring(0);
			System.out.println(ActualSound);
			if (ExpectedSound1[0].equalsIgnoreCase(ActualSound)) {
				logger.info("User able to proceed to upload video by adding a sound in video edit screen");
				extent.extentLoggerPass("","User able to proceed to upload video by adding a sound in video edit screen");
			} else {
				logger.info("User not able to proceed to upload video by adding a sound in video edit screen");
				extent.extentLoggerFail("","User not able to proceed to upload video by adding a sound in video edit screen");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}




	public void CreateVideo_T1952(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1952_Verify whether user is able to see search bar on sounds screen & its functioning");
			System.out.println("T1952_Verify whether user is able to see search bar on sounds screen & its functioning");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search Bar")){
				logger.info("User able to see the search bar on sound screen & he/she could input some text");
				extent.extentLoggerPass("","User able to see the search bar on sound screen & he/she could input some text");
			} else {
				logger.info("User not able to see the search bar on sound screen & he/she could input some text");
				extent.extentLoggerFail("","User not able to see the search bar on sound screen & he/she could input some text");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}	


	public void CreateVideo_T1954(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1954_Verify whether user is able to search for sound using sound name");
			System.out.println("T1954_Verify whether user is able to search for sound using sound name");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			String ExpectedSoundName ="Jaan Ban Gaye";
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search Bar");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, ExpectedSoundName, ExpectedSoundName);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.Suggested(ExpectedSoundName), 20, ExpectedSoundName);
			if (verifyElementExist(IOSHipiCreateVideoPage.Suggested(ExpectedSoundName), ExpectedSoundName)) {
				logger.info("User able to see the sound listing based on the search using sound name");
				extent.extentLoggerPass("","User able to see the sound listing based on the search using sound name");
			} else {
				logger.info("User not able to see the sound listing based on the search using sound name");
				extent.extentLoggerFail("","User not able to see the sound listing based on the search using sound name");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}


	public void CreateVideo_T1955(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1955_Verify whether user is able to search for sound using artist name");
			System.out.println("T1955_Verify whether user is able to search for sound using artist name");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			String ExpectedSoundName ="Badshah";
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search Bar");
			waitTime(4000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, ExpectedSoundName, ExpectedSoundName);
			waitTime(4000);
			if (verifyElementExist(IOSHipiCreateVideoPage.Suggested(ExpectedSoundName), ExpectedSoundName)) {
				logger.info("User able to see the sound listing based on the search using artist name");
				extent.extentLoggerPass("","User able to see the sound listing based on the search using artist name");
			} else {
				logger.info("User not able to see the sound listing based on the search using artist name");
				extent.extentLoggerFail("","User not able to see the sound listing based on the search using artist name");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void CreateVideo_T1956(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1956_Verify whether all search results will display in list view");
			System.out.println("T1956_Verify whether all search results will display in list view");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			String ExpectedSoundName ="Badshah";
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search Bar");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, ExpectedSoundName, ExpectedSoundName);
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Keyboard search");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.Suggested(ExpectedSoundName), 20, ExpectedSoundName);
			List<WebElement> count = findElements(IOSHipiCreateVideoPage.Suggested(ExpectedSoundName));
			int count1 = count.size();
			if (count1>0) {
				logger.info("Search results for searched sound/artist name is displayed in list view");
				extent.extentLoggerPass("","Search results for searched sound/artist name is displayed in list view");
			} else {
				logger.info("Search results for searched sound/artist name is not displayed in list view");
				extent.extentLoggerFail("","Search results for searched sound/artist name is not displayed in list view");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}


	public void CreateVideo_T1957(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1957_Verify if the search results has the thumbnail with play icon on it");
			System.out.println("T1957_Verify if the search results has the thumbnail with play icon on it");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			String ExpectedSoundName ="Badshah";
			click(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Search Bar");
			waitTime(2000);
			type(IOSHipiCreateVideoPage.objiosSearchPlaceholder, ExpectedSoundName, ExpectedSoundName);
			waitTime(4000);
			click(IOSHipiCreateVideoPage.objiosSearchBtnInSounds, "Keyboard search");
			waitTime(4000);
			if (verifyElementExist(IOSHipiCreateVideoPage.Suggested(ExpectedSoundName), ExpectedSoundName)) {
				logger.info("User able to see the searched audio/sound thumbnail along with the play icon");
				extent.extentLoggerPass("","User able to see the searched audio/sound thumbnail along with the play icon");
			} else {
				logger.info("User not able to see the searched audio/sound thumbnail along with the play icon");
				extent.extentLoggerFail("","User not able to see the searched audio/sound thumbnail along with the play icon");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}


	public void CreateVideo_T1971(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1971_Verify whether sounds are removed on tapping bookmark icon in favorite tab");
			System.out.println("T1971_Verify whether sounds are removed on tapping bookmark icon in favorite tab");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSAddToFavouriteInSoundScreen, "AddToFavourite");
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHipiSoundPage.objiOSMusicAccessPopUpOKBtn, "Music Access PopUp OK Btn")) {
				click(IOSHipiSoundPage.objiOSMusicAccessPopUpOKBtn, "Music Access PopUp OK Btn");
			}
			waitTime(3000);
			List<WebElement> count1 = findElements(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen);
			int count11 = count1.size();
			System.out.println(count11);
			click(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen, "Added To Favourite");
			waitTime(2000);
			List<WebElement> count2 = findElements(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen);
			int count22 = count2.size();
			System.out.println(count22);
			if (count11!=count22) {
				logger.info("Sounds is removed on tapping bookmark icon in favorite tab");
				extent.extentLoggerPass("","Sounds is removed on tapping bookmark icon in favorite tab");
			} else {
				logger.info("Sounds is not removed on tapping bookmark icon in favorite tab");
				extent.extentLoggerFail("","Sounds is not removed on tapping bookmark icon in favorite tab");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}



	public void CreateVideo_T1961(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1961_Verify the favourite tab has the list of sounds added to favourite by user");
			System.out.println("T1961_Verify the favourite tab has the list of sounds added to favourite by user");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitForElementDisplayediOS(IOSHipiCreateVideoPage.objiosFavoriteTabPopUp, 15, "Favourite Pop Up");
			click(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "OK");
			waitTime(3000);
			List<WebElement> count1 = findElements(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen);
			int count11 = count1.size();
			System.out.println(count11);
			for(int i=1;i<=count11;i++) {
				click(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen, "Added To Favourite");
				waitTime(3000);
			}
			click(IOSHipiSoundPage.objiOSDiscoverTab, "Discover Tab");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			String Name1 = getText(IOSHipiSoundPage.objiOSFirstSongArtistInSoundScreen);
			click(IOSHipiSoundPage.objiOSAddToFavouriteInSoundScreen, "AddToFavourite");
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(5000);
			
			if (verifyElementExist(IOSHipiSoundPage.SongTitle(Name1), Name1)) {
				logger.info("Sounds which are bookmarked by user displayed under favourite tab");
				extent.extentLoggerPass("","Sounds which are bookmarked by user displayed under favourite tab");
			} else {
				logger.info("Sounds which are bookmarked by user not displayed under favourite tab");
				extent.extentLoggerFail("","Sounds which are bookmarked by user not displayed under favourite tab");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}



	public void CreateVideo_T1969(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1969_Verify if the sound which has been added to favourite by user, displays under favourites tab");
			System.out.println("T1969_Verify if the sound which has been added to favourite by user, displays under favourites tab");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			List<WebElement> count1 = findElements(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen);
			int count11 = count1.size();
			System.out.println(count11);
			for(int i=1;i<=count11;i++) {
				click(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen, "Added To Favourite");
				waitTime(3000);
			}
			click(IOSHipiSoundPage.objiOSDiscoverTab, "Discover Tab");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			String Name1 = getText(IOSHipiSoundPage.objiOSFirstSongTitleInSoundScreen);
			click(IOSHipiSoundPage.objiOSAddToFavouriteInSoundScreen, "AddToFavourite");
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHipiSoundPage.SongTitle(Name1), Name1)) {
				logger.info("User able to view the just bookmarked sound in favourite tab");
				extent.extentLoggerPass("","User able to view the just bookmarked sound in favourite tab");
			} else {
				logger.info("User not able to view the just bookmarked sound in favourite tab");
				extent.extentLoggerFail("","User not able to view the just bookmarked sound in favourite tab");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}


	public void CreateVideo_T1970(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1970_Verify whether the favourite tab contains the sounds which are bookmarked from sound detail page as well");
			System.out.println("T1970_Verify whether the favourite tab contains the sounds which are bookmarked from sound detail page as well");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSAddToFavouriteInSoundScreen, "AddToFavourite");
			waitTime(3000);
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			if (verifyElementExist(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen, "Added To Favourite")) {
				logger.info("User able to view the sounds under favourite tab which are bookmarked in either sound details or sound selection page");
				extent.extentLoggerPass("","User able to view the sounds under favourite tab which are bookmarked in either sound details or sound selection page");
			} else {
				logger.info("User not able to view the sounds under favourite tab which are bookmarked in either sound details or sound selection page");
				extent.extentLoggerFail("","User not able to view the sounds under favourite tab which are bookmarked in either sound details or sound selection page");
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	public void CreateVideo_T1973(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1973_Verify whether sound title,thumbnail and duration is same for sounds listed under \"Discover\" and \"Favorite\" tab");
			System.out.println("T1973_Verify whether sound title,thumbnail and duration is same for sounds listed under \"Discover\" and \"Favorite\" tab");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			List<WebElement> count1 = findElements(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen);
			int count11 = count1.size();
			System.out.println(count11);
			for(int i=1;i<=count11;i++) {
				click(IOSHipiSoundPage.objiOSAddedToFavouriteInSoundScreen, "Added To Favourite");
				waitTime(3000);
			}
			click(IOSHipiSoundPage.objiOSDiscoverTab, "Discover Tab");
			waitTime(5000);
			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
			PartialCommentsSwipe("Up", 1);
			waitTime(3000);
			String Name1 = getText(IOSHipiSoundPage.objiOSFirstSongTitleInSoundScreen);
			String Sound1 = getText(IOSHipiSoundPage.objiOSSongDurationInSoundScreen);
			click(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab");
			waitTime(3000);
			String Name2 = getText(IOSHipiSoundPage.objiOSFirstSongNameInSoundScreen);
			String Sound2 = getText(IOSHipiSoundPage.objiOSSongDurationInSoundScreen);
			if (Name1.equalsIgnoreCase(Sound2)) {
				if (Sound1.equalsIgnoreCase(Sound2)) {
					logger.info("Sound title,thumbnail and duration is same for sounds listed under \"Discover\" and \"Favorite\" tab are same");
					extent.extentLoggerPass("","Sound title,thumbnail and duration is same for sounds listed under \"Discover\" and \"Favorite\" tab are same");
				} else {
					logger.info("Sound title,thumbnail and duration is same for sounds listed under \"Discover\" and \"Favorite\" tab are not same");
					extent.extentLoggerFail("","Sound title,thumbnail and duration is same for sounds listed under \"Discover\" and \"Favorite\" tab are not same");
				}
			}
			BackToFeedScreenFromVideoPostScreen();
		}
	}



	public void CreateVideo_T1959(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1959_Verify whether the user is able to see two tabs under the sound screen");
			System.out.println("T1959_Verify whether the user is able to see two tabs under the sound screen");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			if (verifyElementPresent(IOSHipiSoundPage.objiOSSoundsTextInSoundScreen, "Sounds Page")) {
				if ((verifyElementPresent(IOSHipiSoundPage.objiOSDiscoverTab, "Discover Tab"))&&(verifyElementPresent(IOSHipiSoundPage.objiOSFavoritesTab, "Favorites Tab"))) {
					logger.info("User landed on sound page with 2 'Discover' & 'Favourite' tabs on it");
					extent.extentLoggerPass("","User landed on sound page with 2 'Discover' & 'Favourite' tabs on it");
				} else {
					logger.info("User not landed on sound page with 2 'Discover' & 'Favourite' tabs on it");
					extent.extentLoggerFail("","User not landed on sound page with 2 'Discover' & 'Favourite' tabs on it");
				}
			}else {
				logger.info("User not landed on sound page with 2 'Discover' & 'Favourite' tabs on it");
				extent.extentLoggerFail("","User not landed on sound page with 2 'Discover' & 'Favourite' tabs on it");
			}
			BackToFeedScreenFromVideoPostScreen();
		}

	}


	public void CreateVideo_T1953(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1953_Verify the UI of sound screen's search bar");
			System.out.println("T1953_Verify the UI of sound screen's search bar");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			if (verifyElementExist(IOSHipiCreateVideoPage.objiosSearchPlaceholder, "Sounds Page")) {
				logger.info("Search bar is displayed in sound screen ");
				extent.extentLoggerPass("","Search bar is displayed in sound screen ");
			} else {
				logger.info("Search bar is not displayed in sound screen ");
				extent.extentLoggerFail("","Search bar is not displayed in sound screen ");
			}	
			BackToFeedScreenFromVideoPostScreen();
		}
	}


	public void CreateVideo_T1963(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1963_Verify whether there is a 'See All' option given above the sound categories");
			System.out.println("T1963_Verify whether there is a 'See All' option given above the sound categories");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			if (verifyElementExist(IOSHipiSoundPage.objiosSeeAllButtonInSoundsScreen, "See All Button")) {
				logger.info("User able to see the 'See All' option for categories rail");
				extent.extentLoggerPass("","User able to see the 'See All' option for categories rail");
			} else {
				logger.info("User not able to see the 'See All' option for categories rail");
				extent.extentLoggerFail("","User not able to see the 'See All' option for categories rail");
			}	
			BackToFeedScreenFromVideoPostScreen();
		}
	}


	public void CreateVideo_T1964(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			ExtentReporter.HeaderChildNode("T1964_Verify whether user is able to see all categories when 'See All' option is tapped");
			System.out.println("T1964_Verify whether user is able to see all categories when 'See All' option is tapped");
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			click(IOSHipiSoundPage.objiosSeeAllButtonInSoundsScreen, "See All Button");
			if (!verifyElementExist(IOSHipiSoundPage.objiosSeeAllButtonInSoundsScreen, "See All Button")) {
				logger.info("User able to view the detailed category displaying on tapping 'See All' option");
				extent.extentLoggerPass("","User able to view the detailed category displaying on tapping 'See All' option");
			} else {
				logger.info("User not able to view the detailed category displaying on tapping 'See All' option");
				extent.extentLoggerFail("","User not able to view the detailed category displaying on tapping 'See All' option");
			}	
			BackToFeedScreenFromVideoPostScreen();
		}
	}

	

	public void CreateVideo_T1962(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1962_Verify if the user is able to see different categories under discover tab");
			System.out.println("T1962_Verify if the user is able to see different categories under discover tab");
			
			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
			click(IOSHipiCreateVideoPage.objiosBackArrowInVideoEditingScreen, "Back Button In Post Screen");
			waitTime(2000);
			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
			waitTime(4000);
			ScrollToElementiOS_Down(IOSHipiSoundPage.objiosBannerScreenInSoundsScreen, "Banner Screen");
			waitTime(2000);
			if (verifyElementExist(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, "Playlist")) {
				PartialCommentsSwipeiOS("Up", 1);
				waitTime(2000);
				if (verifyElementExist(IOSHipiSoundPage.objiOSAllCategoriesInUseThisSounds, "All Categories")) {
					logger.info("User able to see categories under discover tab");
					extent.extentLoggerPass("","User able to see categories under discover tab");
				} else {
					logger.info("User not able to see categories under discover tab");
					extent.extentLoggerFail("","User not able to see categories under discover tab");
				}	
			}else {
				logger.info("User not able to see categories under discover tab");
				extent.extentLoggerFail("","User not able to see categories under discover tab");
			}
			BackToFeedScreenFromVideoPostScreen();
		}	
	}
	
//	public void VerifySongRails() throws Exception {
//		PartialSwipe_ios("Up", 1);
//		for(int i=1;i<=12;i++) {
//		if(verifyElementExist(IOSHipiSoundPage.objiOSAddToFavouriteSwipeInSoundScreen(i), i+"--Song Title")) {
//			
//			
//			logger.info("User able to view number of sounds displaying under particular category");
//			extent.extentLoggerPass("","User able to view number of sounds displaying under particular category");
//			
//		} else {
//			System.out.println("12 Song Title is not displayed");
//			waitTime(4000);
//			
//			SwipeRailIOSInSoundScreen(IOSHipiSoundPage.objiOSAddToFavouriteSwipeInSoundScreen(i), "Left");
//			waitTime(4000);
//			verifyElementExist(IOSHipiSoundPage.objiOSAddToFavouriteSwipeInSoundScreen(i), i+"--Song Title");
//		
//		}
//		}
//		
//		
//	}
//	
//	public void CreateVideo_T1965(String userType) throws Exception {
//		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
//			ExtentReporter.HeaderChildNode("T1965_Verify if user is able to see 12 sounds under category 'A', with horizontal scroll");
//			System.out.println("T1965_Verify if user is able to see 12 sounds under category 'A', with horizontal scroll");
//			Creator_Video_TillEditScreen(userType, userType, userType, userType, "Yes", userType);
//			click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording,"Sound button after recording");
//			waitTime(4000);
//			waitForElementDisplayediOS(IOSHipiSoundPage.objiosPlaylistTextInSoundsScreen, 20, "Playlist Text");
//			
//			BackToFeedScreenFromVideoPostScreen();
//		}	
//	}
	
	
	



//=======+============================================Detail Screen======================================================================




	public void DetailScreen_T1912(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1912_Check if height of comment box is same as bottom navigation bar in all detail screens");
			System.out.println("T1912_Check if height of comment box is same as bottom navigation bar in all detail screens");
			
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(5000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			String Height2 = getAttributValue("height", IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar);
			System.out.println(Height2);
			extent.extentLogger("", "height2-------------------"+Height2);
			NavigateToHomPage();
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "DiscoverBtn");
			waitTime(4000);
			PartialSwipe_ios("UP", 1);
			waitTime(4000);
			click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInHastagPage, "First Video");
			waitTime(5000);
			String Height1 = getAttributValue("height", IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar);
			System.out.println(Height1);
			extent.extentLogger("", "height1-------------------"+Height1);
			if (Height1.equalsIgnoreCase(Height2)) {
				logger.info("The height of comment box is same as bottom navigation bar in all detail screens for Guest and Logged-In user");
				extent.extentLoggerPass("","The height of comment box is same as bottom navigation bar in all detail screens for Guest and Logged-In user");
			} else {
				logger.info("The height of comment box is not same as bottom navigation bar in all detail screens for Guest and Logged-In user");
				extent.extentLoggerFail("","The height of comment box is not same as bottom navigation bar in all detail screens for Guest and Logged-In user");
			}
			NavigateToHomPage();
		}
	}



		public void DetailScreen_T1902(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1902_Check if Guest user is able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				System.out.println("T1902_Check if Guest user is able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
				waitTime(4000);
				click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
				waitTime(5000);
				click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon")) {
					logger.info("Guest able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
					extent.extentLoggerPass("","Guest able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				} else {
					logger.info("Guest not able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
					extent.extentLoggerFail("","Guest not able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				}
				click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
				waitTime(2000);
				NavigateToHomPage();
			}
		}
	
	
	public void DetailScreen_T1903(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		ExtentReporter.HeaderChildNode("T1903_Check if Login/Signup popup is displayed if guest user tries to add comment in all detail screens");
		System.out.println("T1903_Check if Login/Signup popup is displayed if guest user tries to add comment in all detail screens");
		DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
		waitTime(4000);
		click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
			logger.info("Guest user not able to add comment on tapping comment box at bottom of the screen and Login/Signup popup is displayed over video playing/paused in all detail screens");
			extent.extentLoggerPass("","Guest user not able to add comment on tapping comment box at bottom of the screen and Login/Signup popup is displayed over video playing/paused in all detail screens");
		} else {
			logger.info("Guest user able to add comment on tapping comment box at bottom of the screen and Login/Signup popup is not displayed over video playing/paused in all detail screens");
			extent.extentLoggerFail("","Guest user able to add comment on tapping comment box at bottom of the screen and Login/Signup popup is not displayed over video playing/paused in all detail screens");
		}
		click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
		waitTime(2000);
		NavigateToHomPage();
		}
	}
	
	public void DetailScreen_T1904(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
		ExtentReporter.HeaderChildNode("T1904_Check if Login/Signup popup is displayed for Guest user whenever user tries on Like CTA beside comments added by other users");
		System.out.println("T1904_Check if Login/Signup popup is displayed for Guest user whenever user tries on Like CTA beside comments added by other users");
		DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
		waitTime(4000);
		click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
		waitTime(2000);
		//PartialCommentsSwipeiOS("Down", 1);
		click(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
			logger.info("Login/Signup popup is displayed whenever user tries on Like CTA beside comments added by other users");
			extent.extentLoggerPass("","Login/Signup popup is displayed whenever user tries on Like CTA beside comments added by other users");
		} else {
			logger.info("Login/Signup popup is not displayed whenever user tries on Like CTA beside comments added by other users");
			extent.extentLoggerFail("","Login/Signup popup is not displayed whenever user tries on Like CTA beside comments added by other users");
		}
		click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
		waitTime(2000);
		NavigateToHomPage();
		}
	}
		
		

	public void DetailScreen_T1905(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1905_Check if Login/Signup popup is displayed for Guest userwhenever user taps on user handle/ thumbnail beside comments added by other users");
			System.out.println("T1905_Check if Login/Signup popup is displayed for Guest userwhenever user taps on user handle/ thumbnail beside comments added by other users");
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			//PartialCommentsSwipeiOS("Down", 1);
			click(IOSHipiNeoHomePage.objiosthumbnailBesideCommentsAddedByOtherUsers, "thumbnail");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
				logger.info("Login/Signup popup is displayed whenever user taps on user handle/ thumbnail beside comments added by other users");
				extent.extentLoggerPass("","Login/Signup popup is displayed whenever user taps on user handle/ thumbnail beside comments added by other users");
			} else {
				logger.info("Login/Signup popup is not displayed whenever user taps on user handle/ thumbnail beside comments added by other users");
				extent.extentLoggerFail("","Login/Signup popup is not displayed whenever user taps on user handle/ thumbnail beside comments added by other users");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}	




	public void DetailScreen_T1921(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1921_Check if Logged-In user user is able to tag user in comment and then post comment");
			System.out.println("T1921_Check if Logged-In user user is able to tag user in comment and then post comment");
			
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			String name = RandomStringGenerator(3);
			waitTime(2000);
			String name1 = "@"+name;
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(8000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, name1, name1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			String Name2 = getText(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1));
			waitTime(2000);
			String[] Name3 = Name2.split(" ");
			System.out.println(Name3[0]);
			if (name1.equalsIgnoreCase(Name3[0])) {
				logger.info("user is able to tag user in comment and then post comment");
				extent.extentLoggerPass("","user is able to tag user in comment and then post comment");
			} else {
				logger.info("user is not able to tag user in comment and then post comment");
				extent.extentLoggerFail("","user is not able to tag user in comment and then post comment");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}	


	public void DetailScreen_T1924(String userType) throws Exception {
		    System.out.println();
			ExtentReporter.HeaderChildNode("T1924_On existing comments check 'time' on every comment present on the video for Logged-In user in all detail screens");
			System.out.println("T1924_On existing comments check 'time' on every comment present on the video for Logged-In user in all detail screens");
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			if ((verifyElementExist(IOSHipiNeoHomePage.objiOSWeekAgoInCommentScreen, "Week Ago"))||(verifyElementExist(IOSHipiNeoHomePage.objiOSMonthsAgoInCommentScreen, "Months Ago"))|| (verifyElementExist(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, "Minutes Ago"))||(verifyElementExist(IOSHipiNeoHomePage.objiOSHoursAgoInCommentScreen, "Hours Ago"))){
				logger.info("User able to view time of comment of another viewer");
				extent.extentLoggerPass("","User able to view time of comment of another viewer");
			} else {
				logger.info("User not able to view time of comment of another viewer");
				extent.extentLoggerFail("","User not able to view time of comment of another viewer");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	

	public void DetailScreen_T1926(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1926_Check display of comment time is changed after an hour for Logged-In user in all detail screens");
			System.out.println("T1926_Check display of comment time is changed after an hour for Logged-In user in all detail screens");
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			String name = RandomStringGenerator(3);
			String name1 = name;
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(8000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, name1, name1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, 20, "Minutes Ago");
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, "Minutes Ago")) {
				logger.info("Display of comment time  change from <numberof min> minutes ago to <numberof hour> hours ago");
				extent.extentLoggerPass("","Display of comment time  change from <numberof min> minutes ago to <numberof hour> hours ago");
			} else {
				logger.info("Display of comment time not change from <numberof min> minutes ago to <numberof hour> hours ago");
				extent.extentLoggerFail("","Display of comment time not change from <numberof min> minutes ago to <numberof hour> hours ago");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}	


	public void DetailScreen_T1927(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1927_Check if Logged-In user is able to copy a comment by tapping on the description in all detail screens");
			System.out.println("T1927_Check if Logged-In user is able to copy a comment by tapping on the description in all detail screens");
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			String name = RandomStringGenerator(3);
			String name1 = name;
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(8000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, name1, name1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			WebElement comment = getDriver().findElement(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1));
			LongPressOnElementiOS(comment, 1);
			if (waitForElementDisplayediOS(IOSHipiNeoHomePage.objiosCommentCopiedInCommentScreen, 20,"Comment Copied")) {
				logger.info("User able to copy a comment by tapping on the description");
				extent.extentLoggerPass("","User able to copy a comment by tapping on the description");
			} else {
				logger.info("User not able to copy a comment by tapping on the description");
				extent.extentLoggerFail("","User not able to copy a comment by tapping on the description");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}	

	
	public void DetailScreen_T1901(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		System.out.println();
		ExtentReporter.HeaderChildNode("T1901_[Guest User/Logged-In user] - Check if height of comment box is same as bottom navigation bar in all detail screens");
		System.out.println("T1901_[Guest User/Logged-In user] - Check if height of comment box is same as bottom navigation bar in all detail screens");
		
		DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
		waitTime(4000);
		click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
		waitTime(5000);
		String Height2 = getAttributValue("height", IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar);
		System.out.println(Height2);
		NavigateToHomPage();
		click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "DiscoverBtn");
		waitTime(5000);
		click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInHastagPage, "First Video");
		waitTime(5000);
		String Height1 = getAttributValue("height", IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar);
		System.out.println(Height1);
		if (Height1.equalsIgnoreCase(Height2)) {
			logger.info("The height of comment box is same as bottom navigation bar in all detail screens for Guest and Logged-In user");
			extent.extentLoggerPass("","The height of comment box is same as bottom navigation bar in all detail screens for Guest and Logged-In user");
		} else {
			logger.info("The height of comment box is not same as bottom navigation bar in all detail screens for Guest and Logged-In user");
			extent.extentLoggerFail("","The height of comment box is not same as bottom navigation bar in all detail screens for Guest and Logged-In user");
		}
		NavigateToHomPage();
	}
	}

	public void DetailScreen_T1925(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1925_Check display of latest comment appears on top and time is changed after few min for Logged-In user in all detail screens");
			System.out.println("T1925_Check display of latest comment appears on top and time is changed after few min for Logged-In user in all detail screens");
			
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			String name = RandomStringGenerator(3);
			String name1 = name;
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, name1, name1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, 20, "Minutes Ago");
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiOSMinutesAgoInCommentScreen, "Minutes Ago")) {
				logger.info("Display of comment time is changed from 'just now' to <numberof min> minutes ago");
				extent.extentLoggerPass("","Display of comment time is changed from 'just now' to <numberof min> minutes ago");
			} else {
				logger.info("Display of comment time is not changed from 'just now' to <numberof min> minutes ago");
				extent.extentLoggerFail("","Display of comment time is not changed from 'just now' to <numberof min> minutes ago");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
	
	
	public void DetailScreen_T1918(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
		ExtentReporter.HeaderChildNode("T1918_Check if user is able to like existing/new comments added by other users");
		System.out.println("T1918_Check if user is able to like existing/new comments added by other users");
		
		DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
		waitTime(4000);
		click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
		waitTime(2000);
		//PartialCommentsSwipeiOS("Down", 1);
		click(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoHomePage.LikedIconInCommentScreen(2), "Liked Icon")) {
			logger.info("User able to like comments added by other users");
			extent.extentLoggerPass("","User able to like comments added by other users");
		} else {
			logger.info("User not able to like comments added by other users");
			extent.extentLoggerFail("","User not able to like comments added by other users");
		}
		click(IOSHipiNeoHomePage.LikedIconInCommentScreen(2), "Liked Icon");
		waitTime(2000);
		click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
		waitTime(2000);
		NavigateToHomPage();
		}
	}
	
	

	public void DetailScreen_T1919(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
		ExtentReporter.HeaderChildNode("T1919_Check if user is able to dislike existing/new comments added by other users");
		System.out.println("T1919_Check if user is able to dislike existing/new comments added by other users");
		
		DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
		waitTime(3000);
		click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
		waitTime(4000);
		click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
		waitTime(5000);
		click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
		waitTime(2000);
		//PartialCommentsSwipeiOS("Down", 1);
		click(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon");
		waitTime(2000);
		click(IOSHipiNeoHomePage.LikedIconInCommentScreen(2), "Liked Icon");
		waitTime(2000);
		if (verifyElementExist(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Like Icon")) {
			logger.info("user is able to dislike existing/new comments added by other users");
			extent.extentLoggerPass("","user is able to dislike existing/new comments added by other users");
		} else {
			logger.info("user is not able to dislike existing/new comments added by other users");
			extent.extentLoggerFail("","user is not able to dislike existing/new comments added by other users");
		}
		click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
		waitTime(2000);
		NavigateToHomPage();
		}
	}	
		
		
	public void DetailScreen_T1913(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1913_Check if Logged-In user is able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			System.out.println("T1913_Check if Logged-In user is able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon")) {
				logger.info("Logged-In user able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				extent.extentLoggerPass("","Logged-In user able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			} else {
				logger.info("Logged-In user not able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				extent.extentLoggerFail("","Logged-In user not able view comment popup on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
		
		
	public void DetailScreen_T1914(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1914_Check if Logged-In user is able to add comment on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			System.out.println("T1914_Check if Logged-In user is able to add comment on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			
			DeepLinkURLForShopButton("No", "commentdeeplink", Commentsdeeplink6);
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(4000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(5000);
			String name = RandomStringGenerator(3);
			String name1 = name;
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(8000);
			type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, name1, name1);
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post Button");
			waitTime(2000);
			String Name2 = getText(IOSHipiNeoHomePage.UserCommentDescInCommentSection(1));
			waitTime(2000);
			String[] Name = Name2.split(" ");
			System.out.println(Name[0]);
			if (name1.equalsIgnoreCase(Name[0])) {
				logger.info("Logged-In user able to add comment on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				extent.extentLoggerPass("","Logged-In user able to add comment on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			} else {
				logger.info("Logged-In user not able to add comment on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
				extent.extentLoggerFail("","Logged-In user not able to add comment on tapping comment box at bottom of the screen over video playing/paused in all detail screens");
			}
			click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "Cross Icon");
			waitTime(2000);
			NavigateToHomPage();
		}
	}
		
		
		
	public void DetailScreen_T1934_T1935(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
		ExtentReporter.HeaderChildNode("T1934_Check if Guest user is able to see video progressive bar on comment box in all detail screens");
		System.out.println("T1934_Check if Guest user is able to see video progressive bar on comment box in all detail screens");
		}else {
			ExtentReporter.HeaderChildNode("T1935_Check if Logged-In user is able to see video progressive bar on comment box in all detail screens");
			System.out.println("T1935_Check if Logged-In user is able to see video progressive bar on comment box in all detail screens");			
		}
		click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
		waitTime(4000);
		click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
		waitTime(5000);
		if (verifyElementExist(IOSHipiNeoHomePage.objiosProgressiveBarInFeedScreen, "Progressive Bar")) {
			logger.info("user able to see video progressive bar in all detail screens");
			extent.extentLoggerPass("","user able to see video progressive bar in all detail screens");
		} else {
			logger.info("user not able to see video progressive bar in all detail screens");
			extent.extentLoggerFail("","user not able to see video progressive bar in all detail screens");
		}
		NavigateToHomPage();
	}

		
		
	//============================================================Discover============================================================================
	
		public void NavigateToFirstVideoInDiscover() throws Exception {
			click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
			waitTime(2000);
			SwipeUntilFindElement(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Down");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInVideosScreen, "First Video");
			waitTime(2000);
		}

		
		public void Discover_T1860_T1861(String userType) throws Exception {
			System.out.println();
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1860_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover");
				System.out.println("T1860_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover");
			}else {
				ExtentReporter.HeaderChildNode("T1861_Check if Logged user is able to see Comment box at the bottom of the video screen in Discover");
				System.out.println("T1861_Check if Logged user is able to see Comment box at the bottom of the video screen in Discover");	
			}
				NavigateToFirstVideoInDiscover();
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover");
				} else {
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover");
				}
				NavigateToHomPage();
			}
		
		
		public void Discover_T1862(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1862_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover searched results");
				System.out.println("T1862_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover searched results");
				click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
				waitTime(2000);
				type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Himanshi khurana");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInVideosScreen, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover");
				} else {
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover");
				}
				NavigateToHomPage();
			}
		}								
			
		public void Discover_T1863(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1863_Check if Guest user is able to see Comment box at the bottom of the video screen in profile deatils screen");
				System.out.println("T1863_Check if Guest user is able to see Comment box at the bottom of the video screen in profile deatils screen");
				click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
				waitTime(2000);
				type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Himanshi khurana");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosProfileImage1InTopScreen, "Profile Image1");
				waitTime(2000);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in profile deatils screen");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in profile deatils screen");
				} else {
					logger.info("User not able to see a comment box at the bottom of the video screen in profile deatils screen");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in profile deatils screen");
				}
				NavigateToHomPage();
			}
		}			
			

		public void Discover_T1864(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1864_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover searched results");
				System.out.println("T1864_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover searched results");
				clickOnFirstSearchedResult("Himanshi khurana", "No", "Videos");
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Videos"), "Videos");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover searched results");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover searched results");
				} else {
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover searched results");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover searched results");
				}
				NavigateToHomPage();
			}
		}		
			
		public void Discover_T1865_T1876(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1865_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover video rails");
				System.out.println("T1865_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover video rails");
			}else {
				ExtentReporter.HeaderChildNode("T1876_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover video rails");
				System.out.println("T1876_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover video rails");	
			}
				click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
				waitTime(2000);
			    SwipeUntilFindElement(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Down");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosArrowNextInDiscoverpage, "Arrow next");
			    waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover video rails");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover video rails");
				}else{
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover video rails");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover video rails");
				}
				BackFromTrendingRailShoppableVideo();
			}
		

		

		public void Discover_T1866_T1877(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1866_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover video rails");
				System.out.println("T1866_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover video rails");
			}else {
				ExtentReporter.HeaderChildNode("T1877_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover video rails");
				System.out.println("T1877_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover video rails");
			}
		        click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		        waitTime(2000);
		        SwipeUntilFindElement(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Down");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosArrowNextInDiscoverpage, "Arrow next");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover video rails");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover video rails");
				}else{
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover video rails");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover video rails");
				}
				NavigateToHomPage();
			}
		


		public void Discover_T1867_T1878(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1867_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
				System.out.println("T1867_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
			}else {
				ExtentReporter.HeaderChildNode("T1878_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
				System.out.println("T1878_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
			}
		        click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		        waitTime(2000);
		        SwipeUntilFindElement(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Down");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosProfile1InDiscoverpage, "Profile");
			    waitTime(2000);
			    click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
			    waitTime(2000);
			    if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover Profile rails");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover Profile rails");
				}else{
					logger.info("User not able see a comment box at the bottom of the video screen in Discover Profile rails");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover Profile rails");
				}
				NavigateToHomPage();
			}
		
			

		public void Discover_T1868_T1879(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1868_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
				System.out.println("T1868_Check if Guest user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
			}else {
				ExtentReporter.HeaderChildNode("T1879_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
				System.out.println("T1879_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover Profile rails");
			}
		        click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		        waitTime(2000);
		        SwipeUntilFindElement(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Down");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosrailviewallbutton("Top Hipi Stars"), "expand");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosProfile1InProfileRailScreen, "Profile1");
			    waitTime(2000);
			    click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
			    waitTime(2000);
			    if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover Profile rails");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover Profile rails");
				}else{
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover Profile rails");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover Profile rails");
				}
				NavigateToHomPage();
			}
		

		public void Discover_T1869_T1880(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1869_Check if Guest user is able to see Comment box at the bottom of the video screen in sound details screen");
				System.out.println("T1869_Check if Guest user is able to see Comment box at the bottom of the video screen in sound details screen");
			}else {
				ExtentReporter.HeaderChildNode("T1880_Check if Logged in user is able to see Comment box at the bottom of the video screen in sound details screen");
				System.out.println("T1880_Check if Logged in user is able to see Comment box at the bottom of the video screen in sound details screen");

			}
		        click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
		        waitTime(2000);
		        SwipeUntilFindElement(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Down");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosrailviewallbutton("Top Hipi Stars"), "expand");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosProfile1InProfileRailScreen, "Profile1");
			    waitTime(2000);
			    click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
			    waitTime(2000);
			    click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "sound");
			    waitTime(2000);
			    click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
			    waitTime(2000);
			    if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in sound details screen");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in sound details screen");
				}else{
					logger.info("User not able to see a comment box at the bottom of the video screen in sound details screen");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in sound details screen");
				}
				NavigateToHomPage();
			}
		
		
		public void Discover_T1870_T1881(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1870_Check if Guest user is able to see Comment box at the bottom of the video screen in sound details screen");
				System.out.println("T1870_Check if Guest user is able to see Comment box at the bottom of the video screen in sound details screen");
			}else {
				ExtentReporter.HeaderChildNode("T1881_Check if Logged in user is able to see Comment box at the bottom of the video screen in sound details screen");
				System.out.println("T1881_Check if Logged in user is able to see Comment box at the bottom of the video screen in sound details screen");
			}
				NavigateToFirstVideoInDiscover();
				click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "sound");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
				waitTime(2000);
				 if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
						logger.info("User able to see a comment box at the bottom of the video screen in sound details screen");
						extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in sound details screen");
					}else{
						logger.info("User not able to see a comment box at the bottom of the video screen in sound details screen");
						extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in sound details screen");
					}
					NavigateToHomPage();
				}
			
			    
			
		
		
		public void Discover_T1873(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				ExtentReporter.HeaderChildNode("T1873_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover serached results");
				System.out.println("T1873_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover serached results");
				clickOnFirstSearchedResult("Himanshi khurana", "No", "");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search button");
				waitTime(3000);
				click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Videos"), "Videos");
				waitTime(3000);
				click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover serached results");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover serached results");
				}else{
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover serached results");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover serached results");
				}
				NavigateToHomPage();
			}
		}
			
			
		public void Discover_T1874(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				ExtentReporter.HeaderChildNode("T1874_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover serached results");
				System.out.println("T1874_Check if Logged in user is able to see Comment box at the bottom of the video screen in Discover serached results");
				click(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover Btn");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
				waitTime(2000);
				type(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Himanshi khurana", "Himanshi khurana");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosProfileImage1InTopScreen, "Profile Image1");
				waitForElementDisplayedFastPolling(IOSHipiNeoProfilePage.objiosVideosInProfile,25, "First Video");
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover serached results");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover serached results");
				} else {
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover serached results");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover serached results");
				}
				NavigateToHomPage();
			}
		}			
			    
		public void Discover_T1875(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				ExtentReporter.HeaderChildNode("T1875_User should see a comment box at the bottom of the video screen in Discover serached results");
				System.out.println("T1875_User should see a comment box at the bottom of the video screen in Discover serached results");
				clickOnFirstSearchedResult("Himanshi khurana", "No", "Videos");
				click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Videos"), "Videos");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("User able to see a comment box at the bottom of the video screen in Discover searched results");
					extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Discover searched results");
				} else {
					logger.info("User not able to see a comment box at the bottom of the video screen in Discover searched results");
					extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Discover searched results");
				}
				NavigateToHomPage();
			}
		}			  

		//=======================09/05/2022==============================
		
		public void Discover_T1871(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1871_Check if Guest user is able to see Comment box at the bottom of the video screen in Hashtag details screen");
				System.out.println("T1871_Check if Guest user is able to see Comment box at the bottom of the video screen in Hashtag details screen");
				NavigateToFirstVideoInDiscover();
				click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "sound");
				waitTime(2000);
				click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
				waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
				logger.info("User able to see a comment box at the bottom of the video screen in Hashtag details screen");
				extent.extentLoggerPass("","User able to see a comment box at the bottom of the video screen in Hashtag details screen");
			} else {
				logger.info("User not able to see a comment box at the bottom of the video screen in Hashtag details screen");
				extent.extentLoggerFail("","User not able to see a comment box at the bottom of the video screen in Hashtag details screen");
			}
			NavigateToHomPage();
		}
		}
				 	

	public void Discover_T1884(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1884_Check if Login popup is displayed whenever user tries to post a comment as Guest user");
			System.out.println("T1884_Check if Login popup is displayed whenever user tries to post a comment as Guest user");
			
			clickOnFirstSearchedResult("Himanshi khurana", "No", "Videos");
			click(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "Search Button");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosPlayIconInVideosTab, "First Video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
				logger.info("User able to see Login popup whenever user tries to post a comment as Guest user");
				extent.extentLoggerPass("","User able to see Login popup whenever user tries to post a comment as Guest user");
			} else {
				logger.info("User not able to see Login popup whenever user tries to post a comment as Guest user");
				extent.extentLoggerFail("","User not able to see Login popup whenever user tries to post a comment as Guest user");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Icon");
			NavigateToHomPage();
		}

		}

	public void Discover_T1886(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			ExtentReporter.HeaderChildNode("T1886_Check if Guest user is able to see Comments posted by other users on tapping on comment box at the bottom of the video screen in Discover");
			System.out.println("T1886_Check if Guest user is able to see Comments posted by other users on tapping on comment box at the bottom of the video screen in Discover");
			NavigateToFirstVideoInDiscover();
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "sound");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.LikecountbelowComment(1), "Like count")) {
				logger.info("User able to see Comments posted by other users on tapping on comment box");
				extent.extentLoggerPass("","User able to see Comments posted by other users on tapping on comment box");
			} else {
				logger.info("User not able to see Comments posted by other users on tapping on comment box");
				extent.extentLoggerFail("","User not able to see Comments posted by other users on tapping on comment box");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Icon");
			NavigateToHomPage();
		}


	}

	public void Discover_T1887(String userType) throws Exception {
		if (userType.equalsIgnoreCase("Guest")) {
			ExtentReporter.HeaderChildNode("T1887_Check if Guest user Login popup is displayed whenever user tries on Like CTA beside comments added by other users");
			System.out.println("T1887_Check if Guest user Login popup is displayed whenever user tries on Like CTA beside comments added by other users");
			NavigateToFirstVideoInDiscover();
			click(IOSHipiNeoHomePage.objiOSMusicInFeedScreen, "sound");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
			waitTime(2000);
			click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
			waitTime(2000);
			click(IOSHipiNeoHomePage.LikeIconInCommentScreen(2), "Add Comment Field");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
				logger.info("User able to see Login popup whenever user tries on Like CTA beside comments added by other users");
				extent.extentLoggerPass("","User able to see Login popup whenever user tries on Like CTA beside comments added by other users");
			} else {
				logger.info("User not able to see Login popup whenever user tries on Like CTA beside comments added by other users");
				extent.extentLoggerFail("","User not able to see Login popup whenever user tries on Like CTA beside comments added by other users");
			}
			click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Icon");
			NavigateToHomPage();
		}


	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	//=======================================Mahesh=====================================================
	
	
	
	//-----------------------------------------------Share module-----------------------------------------------------------------------------------------------------------------------------------
		public void Share_T1803_P1(String userType) throws Exception {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1803_Check by tapping on share option from 'Feed' screen to share the video user gets the 'Pop up' screen to share via social media (As a sender)");
			System.out.println("T1803_Check by tapping on share option from 'Feed' screen to share the video user gets the 'Pop up' screen to share via social media (As a sender)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share buttton");
			waitTime(3000);
			
			if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
				logger.info("User is able to see the 'pop up' to share the video Via social media when he taps on Share option");
				extent.extentLoggerPass("", "User is able to see the 'pop up' to share the video Via social media when he taps on Share option");
				
			}else {
				
				logger.info("User is not able to see the 'pop up' to share the video Via social media when he taps on Share option");
				extent.extentLoggerFail("", "User is not able to see the 'pop up' to share the video Via social media when he taps on Share option");
			}
			
			click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
			waitTime(3000);
		}


		public void Share_T1804_P1_T1805_P1(String userType) throws Exception {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1804_T1805_Check by tapping on any social media icon from the 'Pop up' screen user navigates to the particular platform (As a sender)");
			System.out.println("T1804_T1805_Check by tapping on any social media icon from the 'Pop up' screen user navigates to the particular platform (As a sender)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSShareBtn, "Share buttton");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
			waitTime(3000);
			
			if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
				logger.info("User navigates to the particular platform by tapping on any social media icon from the 'pop up' screen");
				extent.extentLoggerPass("", "User navigates to the particular platform by tapping on any social media icon from the 'pop up' screen");
			}else {
				logger.info("User is not navigated to the particular platform by tapping on any social media icon from the 'pop up' screen");
				extent.extentLoggerFail("", "User is not navigated to the particular platform by tapping on any social media icon from the 'pop up' screen");
				
			}
		
			String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
			extent.extentLogger("", "the text in message body field is "+ Text);
			System.out.println("the text in message body field is "+ Text);
			if((Text.contains("Check out this video"))&&(Text.contains("https") )) {
				logger.info("User is able to see video in background, text message and Long URL ");
				extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
			}else {
				logger.info("User is not able to see video in background, text message and Long URL ");
				extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
				
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
			waitTime(3000);
		
		}

		public void Share_T1811_T1810_T1809_P1(String userType) throws Exception {
			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1811_T1810_T1809_Check by tapping on share profile on 'Settings & privacy' screen user gets the 'Pop up' screen to share via social media (As a sender) ");	
						System.out.println("T1811_T1810_T1809_Check by tapping on share profile on 'Settings & privacy' screen user gets the 'Pop up' screen to share via social media (As a sender) ");	
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
				waitTime(2000);
				click(IOSHipiNeoSettingsPage.objiosShareProfile, "Share profile");
				waitTime(3000);

				if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
					logger.info("User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerPass("", "User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					
				}else {
					
					logger.info("User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerFail("", "User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				}
			
				click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
				waitTime(3000);
				
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
					logger.info("User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerPass("", "User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				}else {
					logger.info("User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerFail("", "User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					
				}
				//Check out my profile on Hipi
				//https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link
			
				String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
				extent.extentLogger("", "the text in message body field is "+ Text);
				System.out.println("the text in message body field is "+ Text);
				if((Text.contains("Check out my profile"))&&(Text.contains("https") )) {
					logger.info("User is able to see video in background, text message and Long URL ");
					extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
				}else {
					logger.info("User is not able to see video in background, text message and Long URL ");
					extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
					
				}
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			
			}
			
			
			
		}


		public void Share_T1815_T1816_T1817_P1(String userType) throws Exception {
			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1815_T1816_T1817_Check by tapping the share option on the video on creators profile user should get the 'pop up' screen to share via social media (As a sender)");
				System.out.println("T1815_T1816_T1817_Check by tapping the share option on the video on creators profile user should get the 'pop up' screen to share via social media (As a sender)");
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosprofilepicture, "Creators profile picture");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosVideosInprivateButton,"video in creator profile");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSShareBtn, "Share buttton");
				waitTime(3000);
				
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
					logger.info("User is able to see the 'pop up' to share the video Via social media when he taps on Share option");
					extent.extentLoggerPass("", "User is able to see the 'pop up' to share the video Via social media when he taps on Share option");
					
				}else {
					
					logger.info("User is not able to see the 'pop up' to share the video Via social media when he taps on Share option");
					extent.extentLoggerFail("", "User is not able to see the 'pop up' to share the video Via social media when he taps on Share option");
				}
				
				click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
				waitTime(3000);
				
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
					logger.info("User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerPass("", "User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				}else {
					logger.info("User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerFail("", "User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					
				}
				//Check out my profile on Hipi
				//https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link
			
				String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
				extent.extentLogger("", "the text in message body field is "+ Text);
				System.out.println("the text in message body field is "+ Text);
				if((Text.contains("Check out"))&&(Text.contains("https") )) {
					logger.info("User is able to see video in background, text message and Long URL ");
					extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
				}else {
					logger.info("User is not able to see video in background, text message and Long URL ");
					extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
					
				}
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
			
		}
		
		}
		
		public void Share_T1821_T1822_T1823_P1(String userType) throws Exception {

			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode(
						"T1821_T1822_T1823_Check by tapping the share option on the video on his own profile user should get the 'pop up' screen to share via social media (As a sender)");
				System.out.println(
						"T1821_T1822_T1823_Check by tapping the share option on the video on his own profile user should get the 'pop up' screen to share via social media (As a sender)");
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiosVideosInprivateButton, "video in profile");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSShareBtn, "Share buttton");
				waitTime(3000);

				if (verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Messages")) {
					logger.info(
							"User is able to see the 'pop up' to share the video Via social media when he taps on Share option");
					extent.extentLoggerPass("",
							"User is able to see the 'pop up' to share the video Via social media when he taps on Share option");

				} else {

					logger.info(
							"User is not able to see the 'pop up' to share the video Via social media when he taps on Share option");
					extent.extentLoggerFail("",
							"User is not able to see the 'pop up' to share the video Via social media when he taps on Share option");
				}

				click(IOSHipiNeoHomePage.objiosMessagesInShareButton, "Messages");
				waitTime(3000);

				if (verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp, " Message app pop up")) {
					logger.info(
							"User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerPass("",
							"User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				} else {
					logger.info(
							"User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerFail("",
							"User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");

				}
				// Check out my profile on Hipi
				// https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link

				String Text = getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
				extent.extentLogger("", "the text in message body field is " + Text);
				System.out.println("the text in message body field is " + Text);
				if ((Text.contains("Check out")) && (Text.contains("https"))) {
					logger.info("User is able to see video in background, text message and Long URL ");
					extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
				} else {
					logger.info("User is not able to see video in background, text message and Long URL ");
					extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");

				}
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");

			}

		}
		
		public void Share_T1827_T1828_T1829_P1(String userType) throws Exception {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1827_T1828_T1829_Check user gets 'pop up' by tapping share icon on creators profile to share via social media (As a sender)");
			System.out.println("T1827_T1828_T1829_Check user gets 'pop up' by tapping share icon on creators profile to share via social media (As a sender)");
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosprofilepicture, "Creators profile picture");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu");
			waitTime(2000);
			click(IOSHipiNeoSettingsPage.objiosShareProfile, "Share profile");
			waitTime(6000);
			if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
				logger.info("User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				extent.extentLoggerPass("", "User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				
			}else {
				
				
				logger.info("User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				extent.extentLoggerFail("", "User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
			}
		
			click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
			waitTime(3000);
			
			if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
				logger.info("User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				extent.extentLoggerPass("", "User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
			}else {
				logger.info("User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				extent.extentLoggerFail("", "User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				
			}
			//Check out my profile on Hipi
			//https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link
		
			String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
			extent.extentLogger("", "the text in message body field is "+ Text);
			System.out.println("the text in message body field is "+ Text);
			if((Text.contains("Check out"))&&(Text.contains("https") )) {
				logger.info("User is able to see video in background, text message and Long URL ");
				extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
			}else {
				logger.info("User is not able to see video in background, text message and Long URL ");
				extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
				
			}
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
			waitTime(3000);
		
		}
		
		public void Share_T1839_T1840_T1841_P1(String userType) throws Exception {
			
			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1839_T1840_T1841_Check user gets 'Pop up' by tapping share icon on 'Sound' screen to share via social media (As a sender)");
				System.out.println("T1839_T1840_T1841_Check user gets 'Pop up' by tapping share icon on 'Sound' screen to share via social media (As a sender)");
				click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen,"Sounds in Feed screen");
				waitTime(3000);
				click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share in sound page");
				waitTime(3000);
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
					logger.info("User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerPass("", "User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					
				}else {
					
					logger.info("User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerFail("", "User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				}
			
				click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
				waitTime(3000);
				
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
					logger.info("User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerPass("", "User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				}else {
					logger.info("User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerFail("", "User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					
				}
				//Check out my profile on Hipi
				//https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link
			
				String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
				extent.extentLogger("", "the text in message body field is "+ Text);
				System.out.println("the text in message body field is "+ Text);
				if((Text.contains("Check out"))&&(Text.contains("https") )) {
					logger.info("User is able to see video in background, text message and Long URL ");
					extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
				}else {
					logger.info("User is not able to see video in background, text message and Long URL ");
					extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
					
				}
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
			
			}
			
		}
		
		
		//objiOSAddedFiltersOnScreen
		
		public void Share_T1845_T1846_T1847_P1(String userType) throws Exception {
			
			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1845_T1846_T1847_Check user gets 'Pop up' by tapping share icon on 'Effect' screen to share via social media (As a sender) ");
				System.out.println("T1845_T1846_T1847_Check user gets 'Pop up' by tapping share icon on 'Effect' screen to share via social media (As a sender) ");
				DeepLinkURLForShopButton("No", "filterandeffectlink", FilterAndEffect);
				waitTime(4500);
				click(IOSHipiNeoHomePage.objiOSAddedEffectOnScreen, "Added Effect in feed screen");
				waitTime(2500);
				click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share in sound page");
				
				waitTime(3000);
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
					logger.info("User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerPass("", "User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					
				}else {
					
					logger.info("User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerFail("", "User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				}
			
				click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
				waitTime(3000);
				
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
					logger.info("User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerPass("", "User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				}else {
					logger.info("User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerFail("", "User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					
				}
				//Check out my profile on Hipi
				//https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link
			
				String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
				extent.extentLogger("", "the text in message body field is "+ Text);
				System.out.println("the text in message body field is "+ Text);
				if((Text.contains("Check out"))&&(Text.contains("https") )) {
					logger.info("User is able to see video in background, text message and Long URL ");
					extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
				}else {
					logger.info("User is not able to see video in background, text message and Long URL ");
					extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
					
				}
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
				
				
			
			}
		}
		
		//T1851
		
	public void Share_T1851_T1852_T1853_P1(String userType) throws Exception {
			
			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1851_T1852_T1853_Check user gets 'Pop up' by tapping share icon on 'Filter' screen to share via social media (As a sender) ");
				System.out.println("T1851_T1852_T1853_Check user gets 'Pop up' by tapping share icon on 'Filter' screen to share via social media (As a sender) ");
				DeepLinkURLForShopButton("No", "filterandeffectlink", FilterAndEffect);
				waitTime(4500);
				click(IOSHipiNeoHomePage.objiOSAddedFiltersOnScreen, "Added Filter in feed screen");
				waitTime(2500);
				click(IOSHiPiNeoDiscoverPage.objiosShareButtonInHastagPage, "Share in sound page");
				
				waitTime(3000);
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages")) {
					logger.info("User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerPass("", "User able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					
				}else {
					
					logger.info("User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
					extent.extentLoggerFail("", "User not able to see the 'pop up' when he taps on Share profile on 'Settings & privacy screen'");
				}
			
				click(IOSHipiNeoHomePage.objiosMessagesInShareButton,"Messages");
				waitTime(3000);
				
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosTOTextFieldInMessageApp," Message app pop up")) {
					logger.info("User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerPass("", "User able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
				}else {
					logger.info("User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					extent.extentLoggerFail("", "User not able to navigate to the particular platform by tapping on any social media icon from the 'pop up' screen");
					
				}
				//Check out my profile on Hipi
				//https://www.hipi.co.in/@ios260b08e1?utm_source=ios&utm_medium=my_profile&utm_campaign=hipi_shared_link
			
				String Text=getText(IOSHipiNeoHomePage.objiosMsgBodyFieldInMessageApp);
				extent.extentLogger("", "the text in message body field is "+ Text);
				System.out.println("the text in message body field is "+ Text);
				if((Text.contains("Check out"))&&(Text.contains("https") )) {
					logger.info("User is able to see video in background, text message and Long URL ");
					extent.extentLoggerPass("", "User is able to see video in background, text message and Long URL ");
				}else {
					logger.info("User is not able to see video in background, text message and Long URL ");
					extent.extentLoggerFail("", "User is not able to see video in background, text message and Long URL ");
					
				}
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCancelButtonInMessageInShareButton, "Cancel button");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiosCrossIconInShareButton, "Close");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
				waitTime(3000);
				
				
			
			}
		}
		
		
	public void Share_T1857_T1858_P1(String userType) throws Exception {
		if (!userType.equalsIgnoreCase("Guest")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1857_T1858_Check by tapping on invite friends user able to redirect to 'Invite Friends' screen");
			System.out.println("T1857_T1858_Check by tapping on invite friends user able to redirect to 'Invite Friends' screen");
			
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosAddPerson, "add friends icon");
			waitTime(2000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds,"Invite friends");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosPopAllowContacts, "Contact popup")) {
				click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "ok CTA");
				waitTime(2000);
			}
			if(verifyElementExist(IOSHipiNeoProfilePage.objiosInviteFreinds,"Invite friends Title")) {
				logger.info("User is redirected to 'Invite Friends' screen by tapping on invite friends");
				extent.extentLoggerPass("", "User is redirected to 'Invite Friends' screen by tapping on invite friends");
			}else {
				logger.info("User is not redirected to 'Invite Friends' screen by tapping on invite friends");
				extent.extentLoggerFail("", "User is not redirected to 'Invite Friends' screen by tapping on invite friends");
			}
		
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("SMS"), "SMS");
			
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("Whatsapp"), "Whatsapp");
			
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("Facebook"), "Facebook");
			
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("Copy"), "Copy");
			
			verifyElementPresent(IOSHipiNeoProfilePage.objiosAllTabsInInviteFriendsPage("Others"), "Others");
			
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "back");
			waitTime(3000);
			click(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home button");
			waitTime(3000);
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	//-------------------------------------------------------------------------------------------------------------------------

	public void SettingsAndPrivacy_T1712(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1712_Logged in User - Check User is able to see invite friends option");
			System.out.println("T1712_Logged in User - Check User is able to see invite friends option");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds")) {
				logger.info("User able to see invite friends option");
				extent.extentLoggerPass("", "User able to see invite friends option");
			}else {
				logger.info("User not able to see invite friends option");
				extent.extentLoggerFail("", "User not able to see invite friends option");
			}
			NavigateToHomPage();
		}
	}

	public void ContactsPopUp() throws Exception {
		if (verifyElementExist(IOSHipiNeoProfilePage.objiOSHipiWouldLikeToAccessYourContacts,"Hipi Would Like To Access Your Contacts")) {
			click(IOSHipiNeoProfilePage.objiosOkAllowContacts, "Ok Allow Contacts");
			waitTime(3000);
		}
	}



	public void SettingsAndPrivacy_T1713(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1713_Logged in User - Check User is able to see Search bar in Invite Friends screen");
			System.out.println("T1713_Logged in User - Check User is able to see Search bar in Invite Friends screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			ContactsPopUp();
			if (verifyElementExist(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Search Contacts")) {
				logger.info("User able to see Search bar in Invite Friends screen");
				extent.extentLoggerPass("", "User able to see Search bar in Invite Friends screen");
			}else {
				logger.info("User not able to see Search bar in Invite Friends screen");
				extent.extentLoggerFail("", "User not able to see Search bar in Invite Friends screen");
			}
			NavigateToHomPage();
		}
	}
		

	public void SettingsAndPrivacy_T1716(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1716_Logged-In User - Check UI of Search bar");
			System.out.println("T1716_Logged-In User - Check UI of Search bar");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Search Text");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoProfilePage.objiOSLensIconInInviteFriendsScreen, "Lens Icon ");
			waitTime(3000);
			String InviteVia_Y = getAttributValue("y", IOSHipiNeoProfilePage.objiOSInviteViaInInviteFriendsScreen);
			int Y1=Integer.parseInt(InviteVia_Y);
			System.out.println(Y1);
			String _SearchBar_Y = getAttributValue("y", IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen);
			int Y2=Integer.parseInt(_SearchBar_Y);
			System.out.println(Y2);
			if (Y1<Y2) {
				logger.info("user able to see Search bar below Invite Via option");
				extent.extentLoggerPass("", "user able to see Search bar below Invite Via option");
			}else {
				logger.info("user not able to see Search bar below Invite Via option");
				extent.extentLoggerFail("", "user not able to see Search bar below Invite Via option");
			}
			NavigateToHomPage();
		}
	}
		
			
	public void SettingsAndPrivacy_T1724(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println("T1724_Check if user is able to see \"Change Password\" option");
			ExtentReporter.HeaderChildNode("T1724_Check if user is able to see \"Change Password\" option");
			System.out.println("T1724_Check if user is able to see \"Change Password\" option");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(5000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password")) {
				logger.info("User able to see \"Change Password\" option");
				extent.extentLoggerPass("", "User able to see \"Change Password\" option");
			}else {
				logger.info("User not able to see \"Change Password\" option");
				extent.extentLoggerFail("", "User not able to see \"Change Password\" option");
			}
			NavigateToHomPage();
		}
	}
				
	public void SettingsAndPrivacy_T1725(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1725_Check for the UI of Change Password screen");
			System.out.println("T1725_Check for the UI of Change Password screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000); 
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password Text");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosPasswordLengthInChangePasswordPage, "Password Length");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password option");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "Password option");
			waitTime(2000);
			verifyElementPresent(IOSHipiNeoSettingsPage.objiosSubmitButtonDisabledInChangePasswordPage, "Submit CTA");
			waitTime(2000);
			
		}
	}

	public void SettingsAndPrivacy_T1726(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1726_Check if User is able to create a password with less than 6 characters");
			System.out.println("T1726_Check if User is able to create a password with less than 6 characters");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String OldPassword="123456";
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, OldPassword , OldPassword);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			String NewPassword="12345";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, NewPassword , "New Password Text Field");
			waitTime(3000);
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosSubmitButtonDisabledInChangePasswordPage, "Submit Button Disabled")) {
				logger.info("User not able to change password successfully as number of chacraters are less than 6");
				extent.extentLoggerPass("", "User not able to change password successfully as number of chacraters are less than 6");
			}else {
				logger.info("User able to change password successfully as number of chacraters are less than 6");
				extent.extentLoggerFail("", "User able to change password successfully as number of chacraters are less than 6");
			}
			NavigateToHomPage();
		}
	}
		
	public void SettingsAndPrivacy_T1727(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1727_Check if User is able to create a password with more than 20 characters");
			System.out.println("T1727_Check if User is able to create a password with more than 20 characters");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String OldPassword="123456";
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, OldPassword , OldPassword);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			String NewPassword="1234567890123456789012345";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, NewPassword , "New Password Text Field");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage, "Submit Button Enabled");
			if (!waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, CommentTitleCount1, "Password Was Changed Successfully Toast Message")) {
				logger.info("User not able to change password successfully as number of chacraters are more than 20");
				extent.extentLoggerPass("", "User not able to change password successfully as number of chacraters are more than 20");
			}else {
				logger.info("User able to change password successfully as number of chacraters are more than 20");
				extent.extentLoggerFail("", "User able to change password successfully as number of chacraters are more than 20");
			}
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, NewPassword , NewPassword);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, OldPassword , "New Password Text Field");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage, "Submit Button Enabled");	
			waitTime(3000);
			NavigateToHomPage();
		}
	}	
		
	public void SettingsAndPrivacy_T1728(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1728_Check if entered data is deleted on tapping \"x\" icon in Old Password field");
			System.out.println("T1728_Check if entered data is deleted on tapping \"x\" icon in Old Password field");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String OldPassword="123456";
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, OldPassword , OldPassword);
			waitTime(3000);
			String OldPasswordText = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosClearTextInOldPasswordField, "Clear Text Icon");
			waitTime(3000);
			String OldPasswordText1 = getText(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage);
			waitTime(3000);
			if (!OldPasswordText.equalsIgnoreCase(OldPasswordText1)) {
				logger.info("Entered data is deleted on tapping x icon in Old Password field");
				extent.extentLoggerPass("", "Entered data is deleted on tapping x icon in Old Password field");
			}else {
				logger.info("Entered data is not deleted on tapping x icon in Old Password field");
				extent.extentLoggerFail("", "Entered data is not deleted on tapping x icon in Old Password field");
			}
			NavigateToHomPage();
		}
	}	

	public void SettingsAndPrivacy_T1729(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1729_Check if entered data is deleted on tapping x icon in Password field");
			System.out.println("T1729_Check if entered data is deleted on tapping x icon in Password field");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String NewPassword="1234567";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, NewPassword , "New Password Text Field");
			waitTime(3000);
			String NewPasswordText = getText(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosClearTextInOldPasswordField, "Clear Text Icon");
			waitTime(3000);
			String NewPasswordText1 = getText(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage);
			waitTime(3000);
			if (!NewPasswordText.equalsIgnoreCase(NewPasswordText1)) {
				logger.info("Entered data is deleted on tapping x icon in  Password field");
				extent.extentLoggerPass("", "Entered data is deleted on tapping x icon in  Password field");
			}else {
				logger.info("Entered data is not deleted on tapping x icon in  Password field");
				extent.extentLoggerFail("", "Entered data is not deleted on tapping x icon in  Password field");
			}
			NavigateToHomPage();
		}
	}	
			
	public void SettingsAndPrivacy_T1730(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1730_Check if user is able to see \"Old password was not correct\" toast on entering wrong password in Old password field");
			System.out.println("T1730_Check if user is able to see \"Old password was not correct\" toast on entering wrong password in Old password field");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String OldPassword="123456789";
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, OldPassword , "Wrong Old Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			String NewPassword="1234567890";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, NewPassword , "New Password Text Field");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage, "Submit Button Enabled");	
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosTheOldPasswordWasNotCorrectToastMessageInChangePasswordScreen, 25, "The Old Password Was No tCorrect Toast Message")) {
				logger.info("User able to see Old password was not correct toast on entering wrong password in Old password field");
				extent.extentLoggerPass("", "User able to see Old password was not correct toast on entering wrong password in Old password field");
			}else {
				logger.info("User not able to see Old password was not correct toast on entering wrong password in Old password field");
				extent.extentLoggerFail("", "User not able  to see Old password was not correct toast on entering wrong password in Old password field");
			}
			NavigateToHomPage();
		}
	}	
			
		
	public void SettingsAndPrivacy_T1731(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1731_Check if user is able to see \"Password was changed successfully\" on successfully changing password");
			System.out.println("T1731_Check if user is able to see \"Password was changed successfully\" on successfully changing password");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String OldPassword="123456";
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, OldPassword , OldPassword);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			String NewPassword="123456789";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, NewPassword , "New Password Text Field");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage, "Submit Button Enabled");	
			if (waitForElementDisplayediOS(IOSHipiNeoSettingsPage.objiosPasswordWasChangedSuccessfullyToastMessage, 25, "Password Was Changed Successfully Toast Message")) {
				logger.info("User able to see Password was changed successfully on successfully changing password");
				extent.extentLoggerPass("", "User able to see Password was changed successfully on successfully changing password");
			}else {
				logger.info("User not able to see Password was changed successfully on successfully changing password");
				extent.extentLoggerFail("", "User not able to see Password was changed successfully on successfully changing password");
			}
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, NewPassword , NewPassword);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, OldPassword , "New Password Text Field");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage, "Submit Button Enabled");	
			waitTime(3000);
			NavigateToHomPage();
		}
	}	
			
		
	public void SettingsAndPrivacy_T1715(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1715_Logged-In User - Check if on tapping x icon in Searc bar searched item will disappear");
			System.out.println("T1715_Logged-In User - Check if on tapping x icon in Searc bar searched item will disappear");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Search Text");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Test1", "Search Field");
			waitTime(2000);
			String BeforeText = getText(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen);
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSCrossIconInSearchContactsInInviteFriendsScreen, "Cross Icon");
			waitTime(3000);
			String AfterText = getText(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen);
			waitTime(3000);
			if (!BeforeText.equalsIgnoreCase(AfterText)) {
				logger.info("Searched content  disappear on tapping x icon in Search bar");
				extent.extentLoggerPass("", "Searched content  disappear on tapping x icon in Search bar");
			}else {
				logger.info("Searched content is not disappeared on tapping x icon in Search bar");
				extent.extentLoggerFail("", "Searched content is not disappeared on tapping x icon in Search bar");
			}
			NavigateToHomPage();
		}
	}	
			
	public void SettingsAndPrivacy_T1732(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1732_Check if Submit CTA is highlighted in Red color on entering data in both Old Password and Password fields");
			System.out.println("T1732_Check if Submit CTA is highlighted in Red color on entering data in both Old Password and Password fields");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSmanageAcct, "Manage Account");
			waitTime(5000);
			click(IOSHipiNeoSettingsPage.objiosChangePasswordPage, "Change Password");
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, "Old Password Text Field");
			waitTime(3000);
			String OldPassword="123456";
			type(IOSHipiNeoSettingsPage.objiosOldPasswordTexFieldInChangePasswordPage, OldPassword , OldPassword);
			waitTime(3000);
			click(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, "New Password Text Field");
			waitTime(3000);
			String NewPassword="123456789";
			type(IOSHipiNeoSettingsPage.objiosNewPasswordTexFieldInChangePasswordPage, NewPassword , "New Password Text Field");
			waitTime(3000);	
			if (verifyElementExist(IOSHipiNeoSettingsPage.objiosSubmitButtonEnabledInChangePasswordPage, "Submit Button Enabled")) {
				logger.info("User able to see Submit CTA is Enabled on entering data in both Old Password and Password fields");
				extent.extentLoggerPass("", "User able to see Submit CTA is Enabled on entering data in both Old Password and Password fields");
			}else {
				logger.info("User not able to see Submit CTA is Enabled on entering data in both Old Password and Password fields");
				extent.extentLoggerFail("", "User not able to see Submit CTA is Enabled on entering data in both Old Password and Password fields");
			}
			NavigateToHomPage();
		}
	}	
		

	public void SettingsAndPrivacy_T1714(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1714_Logged-In User - Check if user is able to search the contact listed in \"Invite Friends\" screen");
			System.out.println("T1714_Logged-In User - Check if user is able to search the contact listed in \"Invite Friends\" screen");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Search Text");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Test1", "Search Field");
			waitTime(4000);
			String BeforeText = getText(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen);
			waitTime(3000);
			String AfterText = getText(IOSHipiNeoProfilePage.objiosSearchedContactsInInviteFriendsScreen);
			waitTime(3000);
			if (BeforeText.equalsIgnoreCase(AfterText)) {
				logger.info("User able to search the contact listed in Invite Friends screen");
				extent.extentLoggerPass("", "User able to search the contact listed in Invite Friends screen");
			}else {
				logger.info("User not able to search the contact listed in Invite Friends screen");
				extent.extentLoggerFail("", "User not able to search the contact listed in Invite Friends screen");
			}
			NavigateToHomPage();
		}
	}	

	public void SettingsAndPrivacy_T1717(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1717_Logged in User - Verify if the corresponding result respective to searched keyword displayed under Top Matches below Search bar");
			System.out.println("T1717_Logged in User - Verify if the corresponding result respective to searched keyword displayed under Top Matches below Search bar");
			click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3dots menu");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiosInviteFreinds, "Invite Freinds");
			waitTime(3000);
			click(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Search Text");
			waitTime(3000);
			type(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen, "Test1", "Search Field");
			waitTime(2000);
			String BeforeText = getText(IOSHipiNeoProfilePage.objiOSSearchContactsInInviteFriendsScreen);
			waitTime(3000);
			String AfterText = getText(IOSHipiNeoProfilePage.objiosSearchedContactsInInviteFriendsScreen);
			waitTime(3000);
			if (BeforeText.equalsIgnoreCase(AfterText)) {
				logger.info("Logged in User - User able to see corresponding result respective to searched keyword displayed under Top Matches below Search bar");
				extent.extentLoggerPass("", "Logged in User - User able to see corresponding result respective to searched keyword displayed under Top Matches below Search bar");
			}else {
				logger.info("Logged in User - User not able to see corresponding result respective to searched keyword displayed under Top Matches below Search bar");
				extent.extentLoggerFail("", "Logged in User - User not able to see corresponding result respective to searched keyword displayed under Top Matches below Search bar");
			}
			NavigateToHomPage();
		}
	}

	
	//=====================================Feed =================================================================		
	
	
	
	public void FeedScreen_T1671(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1671_Check if user is unable to view \"+\" icon below Profile thumbnail in \"Following\" tab of Feed");
			System.out.println("T1671_Check if user is unable to view \"+\" icon below Profile thumbnail in \"Following\" tab of Feed");
			follow();
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			if (!verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "+ Icon")) {
				logger.info("User unable to view + Icon below Profile thumbnail in Following tab of Feed");
				extent.extentLoggerPass("", "User unable to view + Icon below Profile thumbnail in Following tab of Feed");
			}else {
				logger.info("User able to view + Icon below Profile thumbnail in Following tab of Feed");
				extent.extentLoggerFail("", "User able to view + Icon below Profile thumbnail in Following tab of Feed");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}
		

	public void FeedScreen_T1672(String userType) throws Exception {
		if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			System.out.println();
			ExtentReporter.HeaderChildNode("T1672_Check if user should only see video from creators that he/she is following on the Following tab.");
			System.out.println("T1672_Check if user should only see video from creators that he/she is following on the Following tab.");
			deleteFollowingInFollowingScreen();
			click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow Button");
			waitTime(2000);
			String ExpectedUserName = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			waitTime(2000);
			System.out.println(ExpectedUserName);
			click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
			waitTime(2000);
			PartialSwipeiOS("Down", 2);
			waitTime(4000);
			String ActualUserName = getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
			waitTime(2000);
			System.out.println(ActualUserName);
			if (ExpectedUserName.equalsIgnoreCase(ActualUserName)) {
				logger.info("User able to see video from creators that he/she is following on the Following tab.");
				extent.extentLoggerPass("", "User able to see video from creators that he/she is following on the Following tab.");
			}else {
				logger.info("User not able to see video from creators that he/she is following on the Following tab.");
				extent.extentLoggerFail("", "User not able to see video from creators that he/she is following on the Following tab.");
			}
			click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You");
			waitTime(2000);
		}
	}

	//===========================================Discover=16_05_2022===================================
	
	
	
		public void Discover_T1888(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1888_Check if Login popup is displayed whenever user taps on user handle/ thumbnail beside comments added by other users as Guest user");
				System.out.println("T1888_Check if Login popup is displayed whenever user taps on user handle/ thumbnail beside comments added by other users as Guest user");
				NavigateToFirstVideoInDiscover();
				click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
				waitTime(5000);
				PartialCommentsSwipeiOS("Down", 1);
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiosthumbnailBesideCommentsAddedByOtherUsers, "thumbnail");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "LoginPopUp")) {
					logger.info("User able to see Login popup whenever user tries on user handle/ thumbnail CTA beside comments added by other users as Guest user");
					extent.extentLoggerPass("", "User able to see Login popup whenever user tries on user handle/ thumbnail CTA beside comments added by other users as Guest user");
				}else {
					logger.info("User not able to see Login popup whenever user tries on user handle/ thumbnail CTA beside comments added by other users as Guest user");
					extent.extentLoggerFail("", "User not able to see Login popup whenever user tries on user handle/ thumbnail CTA beside comments added by other users as Guest userUser is not redirected to 'Invite Friends' screen by tapping on invite friends");
				}
				click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "CrossIcon");
				waitTime(2000);
			}
		}
		
		public void Discover_T1889(String userType) throws Exception {
			System.out.println();
				ExtentReporter.HeaderChildNode("T1889_[Guest/ logged in user] - Check if comment screen is opened when user clicks on the comment box");
				System.out.println("T1889_[Guest/ logged in user] - Check if comment screen is opened when user clicks on the comment box");
				
				NavigateToFirstVideoInDiscover();
				click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
				waitTime(5000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSTotalLikesInCommentScreen, "Total Likes")) {
					logger.info("comment screen able to opened when user clicks on the comment box");
					extent.extentLoggerPass("", "comment screen able to opened when user clicks on the comment box");
				}else {
					logger.info("comment screen not able to opened when user clicks on the comment box");
					extent.extentLoggerFail("", "comment screen not able to opened when user clicks on the comment box");
				}
				click(IOSHipiNeoHomePage.objiosCrossIconInCommentbutton, "CrossIcon");
				waitTime(2000);
				NavigateToHomPage();
			}
		
		public void Discover_T1890(String userType) throws Exception {
			ExtentReporter.HeaderChildNode("T1890_");
			System.out.println("T1890_");
			waitTime(2000);
			String ExpectedHeight = getAttributValue("height", IOSHipiNeoHomePage.objiosBottomNavigationBarInFeedScreen);
			waitTime(2000);
			NavigateToFirstVideoInDiscover();
			String ActualHeight = getAttributValue("height", IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen);
			waitTime(2000);
			if (ExpectedHeight.equalsIgnoreCase(ActualHeight)) {
				logger.info("Height of the comment box identical to the bottom navigation bar");
				extent.extentLoggerPass("", "Height of the comment box identical to the bottom navigation bar");
			}else {
				logger.info("Height of the comment box not identical to the bottom navigation bar");
				extent.extentLoggerFail("", "Height of the comment box not identical to the bottom navigation bar");
			}
			NavigateToHomPage();
		}

		public void Discover_T1891(String userType) throws Exception {
			ExtentReporter.HeaderChildNode("T1891_[Guest/ logged in user] - Check if height of the comment box is identical to the bottom navigation bar");
			System.out.println("T1891_[Guest/ logged in user] - Check if height of the comment box is identical to the bottom navigation bar");
			String ExpectedHeight = getAttributValue("height", IOSHipiNeoHomePage.objiosBottomNavigationBarInFeedScreen);
			waitTime(2000);
			NavigateToFirstVideoInDiscover();
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
			waitTime(2000);
			String ActualHeight = getAttributValue("height", IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen);
			waitTime(2000);
			if (ExpectedHeight.equalsIgnoreCase(ActualHeight)) {
				logger.info("Height of the comment box  identical to the bottom navigation bar in all details screen");
				extent.extentLoggerPass("", "Height of the comment box  identical to the bottom navigation bar in all details screen");
			}else {
				logger.info("Height of the comment box not identical to the bottom navigation bar in all details screen");
				extent.extentLoggerFail("", "Height of the comment box not identical to the bottom navigation bar in all details screen");
			}
			NavigateToHomPage();
		}

		public void Discover_T1895(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				ExtentReporter.HeaderChildNode("T1895_Check if user is able to navigate to profile details screen on tapping thumbnail/ userhandle in comments screen as logged in user");
				System.out.println("T1895_Check if user is able to navigate to profile details screen on tapping thumbnail/ userhandle in comments screen as logged in user");
				NavigateToFirstVideoInDiscover();
				click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
				waitTime(5000);
				PartialCommentsSwipeiOS("Down", 1);
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiosthumbnailBesideCommentsAddedByOtherUsers, "thumbnail");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
					logger.info("User able to navigate to profile details screen on tapping thumbnail/ userhandle in comments screen");
					extent.extentLoggerPass("", "User able to navigate to profile details screen on tapping thumbnail/ userhandle in comments screen");
				}else {
					logger.info("User not able to navigate to profile details screen on tapping thumbnail/ userhandle in comments screen");
					extent.extentLoggerFail("", "User not able to navigate to profile details screen on tapping thumbnail/ userhandle in comments screen");
				}
				NavigateToHomPage();
			}
		}

		public void Discover_T1894(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				ExtentReporter.HeaderChildNode("T1894_Check if user is able to like the comments added and Like CTA should be turned red with count incremented as logged in user");
				System.out.println("T1894_Check if user is able to like the comments added and Like CTA should be turned red with count incremented as logged in user");
				NavigateToFirstVideoInDiscover();
				click(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field");
				waitTime(5000);
				String Expectedcount = getText(IOSHipiNeoHomePage.objiOSTotalLikesInCommentScreen);
				waitTime(2000);
				click(IOSHipiNeoHomePage.LikeIconInCommentScreen(1), "Like Icon");
				waitTime(2000);
				String Actualcount = getText(IOSHipiNeoHomePage.objiOSTotalLikesInCommentScreen);
				waitTime(2000);
				if (!Expectedcount.equalsIgnoreCase(Actualcount)) {
					logger.info("User able to like the comments added and count displayed below");
					extent.extentLoggerPass("", "User able to like the comments added and count displayed below");
				}else {
					logger.info("User not able to like the comments added and count displayed below");
					extent.extentLoggerFail("", "User not able to like the comments added and count displayed below");
				}
				click(IOSHipiNeoHomePage.LikedIconInCommentScreen(1), "Liked Icon");
				waitTime(2000);
			}
		}
		
		public void Discover_T1892(String userType) throws Exception {
			ExtentReporter.HeaderChildNode("T1892_[Guest/ logged in user] - Check if user is able to view comment box in hashtag banner videos");
			System.out.println("T1892_[Guest/ logged in user] - Check if user is able to view comment box in hashtag banner videos");
			click(IOSHiPiNeoDiscoverPage.objiosHashTagRailNameInDiscoverpage, "Hash Tag Rail");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosTotalViewCountsInUseThisSoundScreen, "First Video");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
				logger.info("User able to view comment box in hashtag banner videos");
				extent.extentLoggerPass("", "User able to view comment box in hashtag banner videos");
			}else {
				logger.info("User not able to view comment box in hashtag banner videos");
				extent.extentLoggerFail("", "User not able to view comment box in hashtag banner videos");
			}
			NavigateToHomPage();
		}
		

		public void Discover_T1893(String userType) throws Exception {
			ExtentReporter.HeaderChildNode("T1893_[Guest/ logged in user] - Check if user is able to view comment box in Discover videos banner");
			System.out.println("T1893_[Guest/ logged in user] - Check if user is able to view comment box in Discover videos banner");
			NavigateToFirstVideoInDiscover();
			if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
				logger.info("User able to view comment box in Discover videos banner");
				extent.extentLoggerPass("", "User able to view comment box in Discover videos banner");
			}else {
				logger.info("User not able to view comment box in Discover videos banner");
				extent.extentLoggerFail("", "User not able to view comment box in Discover videos banner");
			}
			NavigateToHomPage();
			
		}
		
		
		
		
		public void Discover_T1872_T1882_T1883(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				System.out.println();
			ExtentReporter.HeaderChildNode("T1872_T1882_T1883_Check if Guest user is able to see Comment box at the bottom of the video screen in Hashtag details screen");
			System.out.println("T1872_T1882_T1883_Check if Guest user is able to see Comment box at the bottom of the video screen in Hashtag details screen");
			
			DeepLinkURLForShopButton("No", "shop7", HashTagLinkdeeplink7);
			waitTime(5000);
			click(IOSHipiNeoHomePage.objiOSHashTagInFeedScreen, "Hash Tag");
			waitTime(2000);
			click(IOSHiPiNeoDiscoverPage.objiosFirstVideoInHastagPage, "First Viedo");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
				logger.info("User able to see a comment box at the bottom of the video screen in Hashtag details screen");
				extent.extentLoggerPass("", "User able to see a comment box at the bottom of the video screen in Hashtag details screen");
			}else {
				logger.info("User not able to see a comment box at the bottom of the video screen in Hashtag details screen");
				extent.extentLoggerFail("", "User not able to see a comment box at the bottom of the video screen in Hashtag details screen");
			}
			NavigateToHomPage();
		}	
		}
		
		//UserProfile

		public void UserProfile_T1908(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1908_Check if Logged-In user is able to see comment box at the bottom of the screen on the video playing/paused in Profile Detail screen");
				System.out.println("T1908_Check if Logged-In user is able to see comment box at the bottom of the screen on the video playing/paused in Profile Detail screen");
				click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User handle");
				waitTime(2000);
				click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosAddCommentFieldInBottomNavigationBar, "Add Comment Field")) {
					logger.info("Logged-In user able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
					extent.extentLoggerPass("", "Logged-In user able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
				}else {
					logger.info("Logged-In user not able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
					extent.extentLoggerFail("", "Logged-In user not able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
				}
				NavigateToHomPage();
			}
		}
				
		//Sound Details

		public void SoundDetails_T1896_T1906(String userType) throws Exception {
			System.out.println();
			if (userType.equalsIgnoreCase("Guest")) {
				ExtentReporter.HeaderChildNode("T1896_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Sound detail screen");
				System.out.println("T1896_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Sound detail screen");
			}else {
				ExtentReporter.HeaderChildNode("T1906_Check if Logged-In user is able to see comment box at the bottom of the screen on the video playing/paused in Sound detail screen");
				System.out.println("T1906_Check if Logged-In user is able to see comment box at the bottom of the screen on the video playing/paused in Sound detail screen");
			}
			click(IOSHipiNeoHomePage.objiosSoundsInFeedScreen, "Sounds");
			waitTime(2000);
			click(IOSHipiSoundPage.objiOSFirstvideoInUseThisSounds, "First Video");
			waitTime(2000);
			if (verifyElementExist(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "Add Comment Field")) {
				logger.info("user able to see comment box at the bottom of the screen over the video playing/paused in Sound detail screen");
				extent.extentLoggerPass("", "user able to see comment box at the bottom of the screen over the video playing/paused in Sound detail screen");
			}else {
				logger.info("user not able to see comment box at the bottom of the screen over the video playing/paused in Sound detail screen");
				extent.extentLoggerFail("", "user not able to see comment box at the bottom of the screen over the video playing/paused in Sound detail screen");
			}
			NavigateToHomPage();
		}

		//Profile Details

		public void ProfileDetails_1898(String userType) throws Exception {
			if (userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				ExtentReporter.HeaderChildNode("T1898_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Profile Detail screen");
				System.out.println("T1898_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Profile Detail screen");
				click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User handle");
				waitTime(2000);
				click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First Video");
				waitTime(2000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "Add Comment Field")) {
					logger.info("Guest user able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
					extent.extentLoggerPass("", "Guest user able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
				}else {
					logger.info("Guest user not able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
					extent.extentLoggerFail("", "Guest user not able to see comment box at the bottom of the screen over video playing/paused in Profile Detail Screen");
				}
				NavigateToHomPage();
			}
		}


		//Own Profile

		public void OwnProfile_T1923(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
			
				ExtentReporter.HeaderChildNode("T1923_Check if Logged-In user is able to add comment to own profile video on tapping comment box at the bottom of the screen if comment is disabled while posting the video or comment is disabled in global settings");
				System.out.println("T1923_Check if Logged-In user is able to add comment to own profile video on tapping comment box at the bottom of the screen if comment is disabled while posting the video or comment is disabled in global settings");
				click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Btn");
				waitTime(2000);
				PopupOfCameraAndMicrophone();
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
				waitTime(2000);
				waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 50, "Next Btn");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Btn");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objAllowCommentEnableToggleButtonInPostPage, "Allow Comment");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post Btn");
				waitTime(2000);
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 100, "Home Btn");
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Btn");
				waitTime(5000);
				PartialSwipeiOS("Down", 9);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "Add A Comment Text Field");
				if (verifyElementExist(IOSHipiNeoProfilePage.objiosUserHasDisabledCommentsForTheVideoToastMessage, "User Has Disabled Comments For The Video Toast Message")) {
					logger.info("Logged-In user not be able to add comment to own profile video on tapping comment box at the bottom of the screen if comment is disabled and Proper toast message should display");
					extent.extentLoggerPass("", "Logged-In user not be able to add comment to own profile video on tapping comment box at the bottom of the screen if comment is disabled and Proper toast message should display");
				}else {
					logger.info("Logged-In user able to add comment to own profile video on tapping comment box at the bottom of the screen if comment is disabled and Proper toast message should display");
					extent.extentLoggerFail("", "Logged-In user able to add comment to own profile video on tapping comment box at the bottom of the screen if comment is disabled and Proper toast message should display");
				}
				NavigateToHomPage();
			}
		}

		
		
		//Mahi
		public void Following_T1670_P0(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				
				System.out.println("T1670_Check if user is unable to view 'Following' button next to userhandle in  'Following' Tab of Feed");
				ExtentReporter.HeaderChildNode("T1670_Check if user is unable to view 'Following' button next to userhandle in  'Following' Tab of Feed");
				
				click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Btn");
				waitTime(3000);
//				verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen,
//						"Following seleted true");
//				waitTime(3000);
				if(verifyElementExist(IOSHipiNeoHomePage.objiOSFollowingBtnInFeedScreen, "Following Button") || verifyElementExist(IOSHipiNeoHomePage.objiOSFollowBtnSelectedFalseInFeedScreen, "Follow icon")) {
					logger.info("Follow button and Following button exist in Following tab");
					extent.extentLoggerFail("", "Follow button and Following button exist in Following tab");
				}else {
					logger.info("User not be able to view 'Following' button next to userhandle in  'Following' tab of Feed");
					extent.extentLoggerPass("", "User not be able to view 'Following' button next to userhandle in  'Following' tab of Feed");
				
				}
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you button");
				waitTime(3000);
				
			}	
		}	
				
				
			public void Following_T1673_P1(String userType) throws Exception {
				if (userType.equalsIgnoreCase("NonSubscribedUser")) {
					System.out.println("T1673_Check if user is able to see video from creators that he/she is not following on the Following tab.");
					ExtentReporter.HeaderChildNode("T1673_Check if user is able to see video from creators that he/she is not following on the Following tab.");
					String usernameForYou;
					String usernameFollowing;
					deleteFollowingInFollowingScreen();
					waitTime(3000);
					click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
					waitTime(3000);
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow button");
					waitTime(3000);
					verifyElementPresent(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow button near username");
						usernameForYou=getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
						logger.info("Username in for you screen is : " +usernameForYou );
						extent.extentLogger("", "Username in for you screen is : " +usernameForYou );
						click(IOSHipiNeoHomePage.objiOSFollowBtn, "Follow button near username");
						waitTime(3000);
					
					click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following tab");
					waitTime(4000);
					verifyElementDisplayed(IOSHipiNeoHomePage.objiOSFollowingTabSelectedTrueInFeedScreen);
					PartialSwipeiOS("Down", 2);
					waitTime(3000);					
					usernameFollowing=getText(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen);
					logger.info("Username in Following tab screen is : " +usernameFollowing );
					extent.extentLogger("", "Username in for you screen is : " +usernameFollowing );
					
					if(usernameForYou.equalsIgnoreCase(usernameFollowing)) {
						logger.info("user is able to see video from creators that he/she is not following on the Following tab.");
						extent.extentLoggerPass("", "user is able to see video from creators that he/she is not following on the Following tab.");
					}else {
						logger.info("user is not able to see video from creators that he/she is not following on the Following tab.");
						extent.extentLoggerFail("", "user is not able to see video from creators that he/she is not following on the Following tab.");
					}
					
					click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
					waitTime(3000);	
				}
			}
				
				
			public void HashTagDetail_T1897_T1907_P2(String userType) throws Exception {
				if(userType.equalsIgnoreCase("Guest")) {
				System.out.println("T1897_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
				extent.HeaderChildNode("T1897_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
				}else {
					System.out.println("T1907_Check if Logged-In user is able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
					extent.HeaderChildNode("T1907_Check if Logged-In user is able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
				}
				DeepLinkURLForShopButton("No", "hashtagdetail", Hashtaglink);
				waitTime(3000);	
				click(IOSHipiNeoHashTagPage.HashtagDetailsPageVideo(1), "first video");
				waitTime(5000);	
				if(verifyElementPresent(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box at the bottom of the screen")){
					logger.info(" user is able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
					extent.extentLoggerPass("", " user is able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
				}else {
					logger.info(" user not able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
					extent.extentLoggerFail("", " user not able to see comment box at the bottom of the screen on the video playing/paused in Hashtag detail screen");
				}
				 BackFromTrendingRailShoppableVideo();
				
			}
				
			public void ProfileDetail_T1898_P2(String userType) throws Exception {
				if(userType.equalsIgnoreCase("Guest")) {	
					System.out.println("T1898_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Profile Detail screen");
					extent.HeaderChildNode("T1898_Check if Guest user is able to see comment box at the bottom of the screen on the video playing/paused in Profile Detail screen");
					click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
					waitTime(3000);
					
					ScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen,"Username in Feedscreen");
					waitTime(3000);
					click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen,"Username ");
					waitTime(3000);
					click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen,"First video");
					waitTime(5000);
					if(verifyElementPresent(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box at the bottom of the screen")){
						logger.info(" user is able to see comment box at the bottom of the screen on the video playing/paused in ProfileDetail screen");
						extent.extentLoggerPass("", " user is able to see comment box at the bottom of the screen on the video playing/paused in ProfileDetail screen");
					}else {
						logger.info(" user not able to see comment box at the bottom of the screen on the video playing/paused in ProfileDetail screen");
						extent.extentLoggerFail("", " user not able to see comment box at the bottom of the screen on the video playing/paused in ProfileDetail screen");
					}
					 BackFromTrendingRailShoppableVideo();
					
					
					
				}
			}
		
		
		
			public void MyProfile_T1911_P2(String userType) throws Exception {
				if(!userType.equalsIgnoreCase("Guest")) {	
					System.out.println("T1911_Check if Logged-In user is able to see comment box at bottom of the screen over video playing/paused in own profile screen");
					extent.HeaderChildNode("T1911_Check if Logged-In user is able to see comment box at bottom of the screen over video playing/paused in own profile screen");
					click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
					waitTime(3000);
					click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
					waitTime(3000);
					click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen,"First video");
					waitTime(5000);
					if(verifyElementPresent(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box at the bottom of the screen")){
						logger.info("user is able to see comment box at the bottom of the screen on the video playing/paused in Own ProfileDetail screen");
						extent.extentLoggerPass("", " user is able to see comment box at the bottom of the screen on the video playing/paused in Own ProfileDetail screen");
					}else {
						logger.info("user not able to see comment box at the bottom of the screen on the video playing/paused in Own ProfileDetail screen");
						extent.extentLoggerFail("", "user not able to see comment box at the bottom of the screen on the video playing/paused in Own ProfileDetail screen");
					}
					 BackFromTrendingRailShoppableVideo();
					
					
					
				}
			}
		
		//T1916
		public void MyProfile_T1916_P1(String userType) throws Exception {
			if (!userType.equalsIgnoreCase("Guest")) {

				System.out.println("T1916_Check if Logged-In user is able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in own profile detail screen");
				extent.HeaderChildNode("T1916_Check if Logged-In user is able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in own profile detail screen");
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
				waitTime(3000); 
				click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create Btn");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosRecordButon, "Record Button");
				waitTime(2000);
				waitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 50, "Next Btn");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Btn");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post Btn");
				waitTime(2000);
				waitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 100, "Home Btn");
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Btn");
				waitTime(2000);
				PartialSwipeiOS("Down", 9);
				click(IOSHipiNeoProfilePage.objiosVideosInProfile, "First Video");
				waitTime(2000);
				click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box");
				waitTime(3000);
				if(verifyElementExist(IOSHipiNeoHomePage.objiosCloseIconPoup,"Comment pop up")) {
					logger.info(" user should be able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in own profile detail screen");
					extent.extentLoggerPass("", "user should be able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in own profile detail screen");
				}else {
					logger.info(" user not able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in own profile detail screen");
					extent.extentLoggerFail("", " user not able to view comment - popup on tapping comment box at bottom of the screen over video playing/paused in own profile detail screen");
					
					
				}
				click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment pop up close button");
				waitTime(3000);
				 BackFromTrendingRailShoppableVideo();
				
				
			}
		}
		
		
		public void MyProfile_T1917_P0(String userType) throws Exception { 
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				System.out.println();
				System.out.println("T1917_Check if Logged-In user is able to add comment to own profile video on tapping comment box at the bottom of the screen over the video playing/paused");
				extent.HeaderChildNode("T1917_Check if Logged-In user is able to add comment to own profile video on tapping comment box at the bottom of the screen over the video playing/paused");
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen,"First video");
				waitTime(5000);
				String Total_comments_Before=getText(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen);
				logger.info("Total comment before commenting is :" +Total_comments_Before);
				click(IOSHipiNeoHomePage.objiosCommentBoxInCommentScreen, "comment box");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Add comment");
				waitTime(3000);
				type(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "Hi..", "Given test as Hi..");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
				waitTime(3000);
				
				click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Comment pop up close button");
				waitTime(3000);
				String Total_comments_After=getText(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen);
				logger.info("Total comments After commenting is :" +Total_comments_After);
				
				if(!Total_comments_After.equals(Total_comments_Before)) {
					logger.info("user able to add comment to own profile video on tapping comment box at the bottom of the screen over the video playing/paused");
					extent.extentLoggerPass("", "user able to add comment to own profile video on tapping comment box at the bottom of the screen over the video playing/paused");
					
				}else {
					logger.info("user not able to add comment to own profile video on tapping comment box at the bottom of the screen over the video playing/paused");
					extent.extentLoggerFail("", "user not able to add comment to own profile video on tapping comment box at the bottom of the screen over the video playing/paused");
				}
				
				 BackFromTrendingRailShoppableVideo();
				
				
			}
		}
		
		
		public void MyProfile_T1920_P0(String userType) throws Exception {
			if (userType.equalsIgnoreCase("NonSubscribedUser")) {
				System.out.println();
				System.out.println("T1920_Check if user is able to like/Dislike own profile comments");
				extent.HeaderChildNode("T1920_Check if user is able to like/Dislike own profile comments");

				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile button");
				waitTime(3000);
				click(IOSHipiNeoProfilePage.objiOSFirstVideoInPrivateVideoScreen, "First video");
				waitTime(5000);
				if (verifyElementExist(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked icon")) {
					click(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen, "Liked icon");
					waitTime(3000);
				}
				String Total_Likes_Before = getText(IOSHipiNeoHomePage.objiOSTotalLikesBtn);
				logger.info("Total Likes before Liking is :" + Total_Likes_Before);
				click(IOSHipiNeoHomePage.objiOSLikeBtn, "Like button");
				waitTime(3000);
				String Total_Likes_aftore = getText(IOSHipiNeoHomePage.objiOSTotalLikesBtn);
				logger.info("Total Likes before Liking is :" + Total_Likes_aftore);

				if (!Total_Likes_Before.equals(Total_Likes_aftore)) {
					logger.info("User able to like/dislike own profile comments");
					extent.extentLoggerPass("", "User able to like/dislike own profile comments");
				} else {
					logger.info("User not able to like/dislike own profile comments");
					extent.extentLoggerFail("", "User not able to like/dislike own profile comments");
				}
				BackFromTrendingRailShoppableVideo();
			}
		}
		
		
		public void CreateVideo_T1965_T1966_P0(String userType) throws Exception {
			if (!userType.equalsIgnoreCase("Guest")) {
				System.out.println();
				System.out.println("T1965_T1966_Verify if user is able to see all12 sounds under category 'A', when taps on 'See All' option");
				extent.HeaderChildNode("T1965_T1966_Verify if user is able to see all 12 sounds under category 'A', when taps on 'See All' option");
				
				click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For you tab");
				waitTime(3000);
				click(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");
				waitTime(2000);
				click(IOSHipiCreateVideoPage.objiosSoundBtnAfterRecording, "Sounds in create screen");
				waitTime(2000);
				ScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner");
				waitTime(2000);
				String FirstRailName=getText(IOSHipiCreateVideoPage.objSoundRailname(1));
				logger.info("The first railname is :" +FirstRailName );
				extent.extentLogger("", "The first railname is :" +FirstRailName );
//				if(verifyElementExist(IOSHipiCreateVideoPage.objLastsongInRail("Playlist"), "Last song of "+FirstRailName)) {
//					logger.info("User able to view number of sounds displaying under particular category");
//					extent.extentLoggerPass("", "User able to view number of sounds displaying under particular category");
//				}else {
//					logger.info("User not g34e able to view number of sounds displaying under particular category");
//					extent.extentLoggerFail("", "User not able to view number of sounds displaying under particular category");
//					
//				}
				for(int i=0;i<=4;i++) {
					if(verifyElementExist(IOSHipiCreateVideoPage.objRequireSongTitle,"Required song")) {
						logger.info("Swiped till Required song");
						extent.extentLogger("", "Swiped till Required song");
						break;
					}else {
				PartialCommentsSwipeiOS("Up", 1);	
					}
				}
				
				//WebElement ele=getDriver().findElement(IOSHipiCreateVideoPage.objAddToFavBtn(3,1));
				String posY=getAttributValue("y", IOSHipiCreateVideoPage.objAddToFavBtn(3,1));
				String posX=getAttributValue("x", IOSHipiCreateVideoPage.objAddToFavBtn(3,1));
				
				int posy=Integer.parseInt(posY);
				int posx=Integer.parseInt(posX);
				System.out.println("posy = "+posy);
				System.out.println("posX = "+posx);
				
				for(int i=0;i<=4;i++) {
					if(verifyElementExist(IOSHipiCreateVideoPage.objSongTitle(12),"Last song Horizontally")) {
						
						logger.info("User able to view number of sounds displaying under particular category with horizontal scroll");
						extent.extentLoggerPass("", "User able to view number of sounds displaying under particular category with horizontal scroll");
					break;
					}else {
						touchAction = new TouchAction(getDriver());
						touchAction.press(PointOption.point(posx, posy))
								.waitAction(WaitOptions.waitOptions(Duration.ofMillis(2000))).moveTo(PointOption.point(0, posy))
								.release().perform();
						//SwipeAnElementiOS(ele, 10, posy);
						
					}
				
				}
				click(IOSHipiCreateVideoPage.objSongTraySeeAllBtn(1), "SeeAll Button");
				
				waitTime(3000);
				if(verifyElementExist(IOSHipiCreateVideoPage.objiosSongsInsideSoundTray, "Songs inside sound tray")) {
					logger.info("User able to view the complete listing of sounds under category 'A'");
					extent.extentLoggerPass("", "User able to view the complete listing of sounds under category 'A'");
				}else {
					
					logger.info("User not able to view the complete listing of sounds under category 'A'");
					extent.extentLoggerFail("", "User not able to view the complete listing of sounds under category 'A'");
				}
				
				BackFromTrendingRailShoppableVideo();
			}
		}
		
		
		public void keyboardaction(String TypeEnter) throws AWTException {
			robo=new Robot();
			if(TypeEnter.equalsIgnoreCase("Enter")) {
				robo.keyPress(KeyEvent.VK_ENTER);	
			}
		}
		
		
		//======================================3rdChecklist=======================================
		
				public void FollowingTab_T1974(String userType) throws Exception {
					if (userType.equalsIgnoreCase("Guest")) {
						System.out.println();
						System.out.println("T1974_Guest user - Check if user is able to see the suggestions for creators to follow on the Following tab");
						extent.HeaderChildNode("T1974_Guest user - Check if user is able to see the suggestions for creators to follow on the Following tab");
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
					    if(verifyElementExist(IOSHipiNeoHomePage.objiosFollowSuggestionButtonInFollowingScreen, "Follow Suggestion Button")) {
					    	extentLoggerPass("", "User able to see the suggestions for creators to follow on the Following tab");
					    	logger.info("User able to see the suggestions for creators to follow on the Following tab");
					    }else {
					    	extentLoggerFail("", "User not able to see the suggestions for creators to follow on the Following tab");
					    	logger.info("User not able to see the suggestions for creators to follow on the Following tab");
					    }
					    	click(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, "For You Tab");
					    	waitTime(2000);
					    }
				}
						
				
				public void FollowingTab_T1976(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1976_Check if user is able to see the 'Suggested accounts' button next to the Follow button on a creator profile.");
						extent.HeaderChildNode("T1976_Check if user is able to see the 'Suggested accounts' button next to the Follow button on a creator profile.");
						deleteFollowingInFollowingScreen();
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						String FollowButtonX = getAttributValue("x", IOSHipiNeoProfilePage.objiosFollowButtonInUserProfile);
						int X1 = Integer.parseInt(FollowButtonX);
						System.out.println(X1);
						waitTime(2000);
						String SuggestedAccountsButtonX = getAttributValue("x", IOSHipiNeoProfilePage.objiosSuggestedAccountsDownArrowButtonInUserProfile);
						int X2 = Integer.parseInt(SuggestedAccountsButtonX);
						System.out.println(X2);
						waitTime(2000);
						if (X1<X2) {
							extentLoggerPass("", "User able to see the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    	logger.info("User able to see the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    }else {
					    	extentLoggerFail("", "User not able to see the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    	logger.info("User not able to see the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    }
						NavigateToHomPage();
					}
				}
						
				
				public void FollowingTab_T1977_T1987(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1977_Check if user is able to see suggested accounts when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						extent.HeaderChildNode("T1977_Check if user is able to see suggested accounts when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						deleteFollowingInFollowingScreen();
					}else{
						System.out.println();
						System.out.println("T1987_Check if user is able to see suggested accounts when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						extent.HeaderChildNode("T1987_Check if user is able to see suggested accounts when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
				
					}
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSuggestedAccountsDownArrowButtonInUserProfile,"Suggested Accounts Down Arrow Button");
						waitTime(2000);
					    if (verifyElementExist(IOSHipiNeoProfilePage.objiosSuggestedAccountsInUserProfile, "Suggested Accounts")) {
					    	extentLoggerPass("", "User able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    	logger.info("User able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    }else {
					    	extentLoggerFail("", "User not able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    	logger.info("User not able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    }
						NavigateToHomPage();
					}
				
				
				public void FollowingTab_T1978_T1988(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1978_Check if user is able to see suggested accounts are disappear when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						extent.HeaderChildNode("T1978_Check if user is able to see suggested accounts are disappear when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						deleteFollowingInFollowingScreen();
					}else {
						System.out.println();
						System.out.println("T1988_Check if user is able to see suggested accounts are disappeared when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						extent.HeaderChildNode("T1988_Check if user is able to see suggested accounts are disappeared when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
							}
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSuggestedAccountsDownArrowButtonInUserProfile,"Suggested Accounts Down Arrow Button");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSuggestedAccountsUpArrowButtonInUserProfile, "Suggested Accounts Up Arrow Button");
						waitTime(2000);
						if (!verifyElementExist(IOSHipiNeoProfilePage.objiosSuggestedAccountsInUserProfile, "Suggested Accounts")) {
							extentLoggerPass("", "User able to see suggested accounts are disappear when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    	logger.info("User able to see suggested accounts are disappear when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    }else {
					    	extentLoggerFail("", "User not able to see suggested accounts are disappear when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    	logger.info("User not able to see suggested accounts are disappear when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
					    }
						NavigateToHomPage();
					}
				
				
				
				public void FollowingTab_T1979_T1989(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1979_Check if user is able to see the list of suggested accounts post tapping on See all in creator profile");
						extent.HeaderChildNode("T1979_Check if user is able to see the list of suggested accounts post tapping on See all in creator profile");
						deleteFollowingInFollowingScreen();
					}else {
						System.out.println();
						System.out.println("T1989_Check if user is able to see the list of suggested accounts post tapping on See all in creator profile");
						extent.HeaderChildNode("T1989_Check if user is able to see the list of suggested accounts post tapping on See all in creator profile");
					}
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSuggestedAccountsDownArrowButtonInUserProfile,"Suggested Accounts Down Arrow Button");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSeeAllSuggestedAccountsInUserProfile, "See All");
						waitTime(2000);
						List<WebElement> List = findElements(IOSHipiNeoProfilePage.objiosFollowButtonInSuggestedAccountSeeAll);
						int List1 = List.size();
						System.out.println(List1);
						waitTime(2000);
						if (2<List1) {
							extentLoggerPass("", "User able to see the list of suggested accounts post tapping on See all in creator profile");
					    	logger.info("User able to see the list of suggested accounts post tapping on See all in creator profile");
					    }else {
					    	extentLoggerFail("", "User not able to see the list of suggested accounts post tapping on See all in creator profile");
					    	logger.info("User not able to see the list of suggested accounts post tapping on See all in creator profile");
					    }
						NavigateToHomPage();
						
					}
				
				
				
				public void FollowingTab_T1980_T1990(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1980_Check if user is redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
						extent.HeaderChildNode("T1980_Check if user is redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
						deleteFollowingInFollowingScreen();
					}else {
						System.out.println();
						System.out.println("T1990_Check if user is redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
						extent.HeaderChildNode("T1990_Check if user is redirected to the creator's profile post tapping on back button in the list of Suggested accounts");	
					}
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSuggestedAccountsDownArrowButtonInUserProfile,"Suggested Accounts Down Arrow Button");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSeeAllSuggestedAccountsInUserProfile, "See All");
						waitTime(2000);
						click(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "Back Button");
						waitTime(2000);
						if (verifyElementExist(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Chat Icon")) {
							extentLoggerPass("", "User redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
					    	logger.info("User redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
					    }else {
					    	extentLoggerFail("", "User not redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
					    	logger.info("User not redirected to the creator's profile post tapping on back button in the list of Suggested accounts");
					    }
						NavigateToHomPage();
					}
				
				
				
				
				
				public void FollowingTab_T1981(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1981_Check if user is able to Follow a suggested creator button, when I click on the Follow button for the creator account.");
						extent.HeaderChildNode("T1981_Check if user is able to Follow a suggested creator button, when I click on the Follow button for the creator account.");
						deleteFollowingInFollowingScreen();
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						String Username = getText(IOSHipiNeoHomePage.objiosProfilePictureUserNameInFollowingScreen);
						System.out.println(Username);
						click(IOSHipiNeoHomePage.objiosFollowSuggestionButtonInFollowingScreen, "Follow Suggestion Button");
						waitTime(5000);
						click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Btn");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
						waitTime(2000);
						String UsernameInFollowingScreen = getText(IOSHipiNeoProfilePage.objiosFirstFollowingUserNameInFollowersFollowingTab);
						System.out.println(UsernameInFollowingScreen);
						if (Username.equalsIgnoreCase(UsernameInFollowingScreen)) {
							extentLoggerPass("", "User able to Follow a suggested creator button, when user click on the Follow button in the creator account.");
					    	logger.info("User able to Follow a suggested creator button, when user click on the Follow button in the creator account.");
					    }else {
					    	extentLoggerFail("", "User not able to Follow a suggested creator button, when user click on the Follow button in the creator account.");
					    	logger.info("User not able to Follow a suggested creator button, when user click on the Follow button in the creator account.");
					    }
						NavigateToHomPage();
					}
				}
				
				public void FollowingTab_T1982(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1982_Check if user is able to see the network error message post tapping on following button in creator screen without internet connection");
						extent.HeaderChildNode("T1982_Check if user is able to see the network error message post tapping on following button in creator screen without internet connection");
						deleteFollowingInFollowingScreen();
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						wifi("OFF");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosFollowersFollowingLikes("Following"), "Following Button");
						waitTime(2000);
						if (verifyElementExist(IOSHipiNeoHomePage.objiosNoInternetConnectionTostMessage, "No Internet Connection Tost Message")) {
							extentLoggerPass("", "User able to see the network error message post tapping on following button in creator screen without internet connection");
					    	logger.info("User able to see the network error message post tapping on following button in creator screen without internet connection");
					    }else {
					    	extentLoggerFail("", "User not able to see the network error message post tapping on following button in creator screen without internet connection");
					    	logger.info("User not able to see the network error message post tapping on following button in creator screen without internet connection");
					    }
						wifi("ON");
						NavigateToHomPage();
					}
				}
				
				public void FollowingTab_T1985_T1991(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1985_Check if user is redirected to the creator's profile when I click on the suggested creator name or profile image thumbnail.");
						extent.HeaderChildNode("T1985_Check if user is redirected to the creator's profile when I click on the suggested creator name or profile image thumbnail.");
						deleteFollowingInFollowingScreen();
					}else {
						System.out.println();
						System.out.println("T1991_Check if user is redirected to the creator's profile when I click on the suggested creator name or profile image thumbnail.");
						extent.HeaderChildNode("T1991_Check if user is redirected to the creator's profile when I click on the suggested creator name or profile image thumbnail.");
					}
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						String Username = getText(IOSHipiNeoHomePage.objiosProfilePictureUserNameInFollowingScreen);
						System.out.println(Username);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						String UsernameInProfile = getText(IOSHipiNeoProfilePage.objiosUserNameInUserProfilePage);
						System.out.println(UsernameInProfile);
						if (Username.equalsIgnoreCase(UsernameInProfile)) {
							if(verifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
								extentLoggerPass("", "User able to redirected to the creator's profile when user click on the suggested creator name or profile image thumbnail.");
						    	logger.info("User able to redirected to the creator's profile when user click on the suggested creator name or profile image thumbnail.");
						    }else {
						    	extentLoggerFail("", "User not redirected to the creator's profile when user click on the suggested creator name or profile image thumbnail.");
						    	logger.info("User not redirected to the creator's profile when user click on the suggested creator name or profile image thumbnail.");
						    }
						}
						NavigateToHomPage();
					}
				
										
				
				public void FollowingTab_T1992(String userType) throws Exception {
					if (userType.equalsIgnoreCase("Guest")) {
						System.out.println();
						System.out.println("T1992_Check if user is able to see the Login/Signup pop-up when I click on the Follow button for a suggested creator account");
						extent.HeaderChildNode("T1992_Check if user is able to see the Login/Signup pop-up when I click on the Follow button for a suggested creator account");
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosFollowSuggestionButtonInFollowingScreen, "Follow Suggestion Button");
						waitTime(2000);
						if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
							extentLoggerPass("", "User able to see the Login/Signup pop-up when user click on the Follow button for a suggested creator account.");
					    	logger.info("User able to see the Login/Signup pop-up when user click on the Follow button for a suggested creator account.");
					    }else {
					    	extentLoggerFail("", "User not able to see the Login/Signup pop-up when user click on the Follow button for a suggested creator account.");
					    	logger.info("User not able to see the Login/Signup pop-up when user click on the Follow button for a suggested creator account.");
					    }
						click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
						waitTime(2000);
						}
				}
				
				
				public void FollowingTab_T1986(String userType) throws Exception {
					if (userType.equalsIgnoreCase("Guest")) {
						System.out.println();
						System.out.println("T1986_Check is user is not able to see suggested accounts when I click on Follow button on a creator profile.");
						extent.HeaderChildNode("T1986_Check is user is not able to see suggested accounts when I click on Follow button on a creator profile.");
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosFollowSuggestionButtonInFollowingScreen, "Follow Suggestion Button");
						waitTime(2000);
						if (verifyElementExist(IOSHipiNeoHomePage.objiosLoginPopUp, "Login PopUp")) {
							extentLoggerPass("", "User not able to see suggested accounts when user click on Follow button on a creator profile. and login pop-up is display");
					    	logger.info("User not able to see suggested accounts when user click on Follow button on a creator profile. and login pop-up is display");
					    }else {
					    	extentLoggerFail("", "User able to see suggested accounts when user click on Follow button on a creator profile. and login pop-up is not display");
					    	logger.info("User able to see suggested accounts when user click on Follow button on a creator profile. and login pop-up is not display");
					    }
						click(IOSHipiNeoHomePage.objiosCloseIconPoup, "Close Popup");
						waitTime(2000);
						}
				}
				
				public void FollowingTab_T1987(String userType) throws Exception {
					if (userType.equalsIgnoreCase("Guest")) {
						System.out.println();
						System.out.println("T1987_Check if user is able to see suggested accounts when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						extent.HeaderChildNode("T1987_Check if user is able to see suggested accounts when I click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosSuggestedAccountsDownArrowButtonInUserProfile,"Suggested Accounts Down Arrow Button");
						waitTime(2000);
						 if (verifyElementExist(IOSHipiNeoProfilePage.objiosSuggestedAccountsInUserProfile, "Suggested Accounts")) {
						    	extentLoggerPass("", "User able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						    	logger.info("User able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						    }else {
						    	extentLoggerFail("", "User not able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						    	logger.info("User not able to see suggested accounts when user click on the 'Suggested accounts' button next to the Follow button on a creator profile.");
						    }
							NavigateToHomPage();
						}
					}
				
				public void FollowingTab_T1975(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1975_Check if user is able to see suggested accounts when I follow a creator by clicking on Follow button on a creator profile.");
						extent.HeaderChildNode("T1975_Check if user is able to see suggested accounts when I follow a creator by clicking on Follow button on a creator profile.");
						deleteFollowingInFollowingScreen();
						click(IOSHipiNeoHomePage.objiosFollowingTabInFeedScreen, "Following Tab");
						waitTime(2000);
						click(IOSHipiNeoHomePage.objiosProfilePictureInFollowingScreen, "Profile Picture");
						waitTime(2000);
						click(IOSHipiNeoProfilePage.objiosFollowButtonInUserProfile, "Follow Button");
						waitTime(2000);
						 if (verifyElementExist(IOSHipiNeoProfilePage.objiosSuggestedAccountsInUserProfile, "Suggested Accounts")) {
						    	extentLoggerPass("", "User able to see suggested accounts when user follow a creator by clicking on Follow button on a creator profile.");
						    	logger.info("User able to see suggested accounts when user follow a creator by clicking on Follow button on a creator profile.");
						    }else {
						    	extentLoggerFail("", "User not able to see suggested accounts when user follow a creator by clicking on Follow button on a creator profile.");
						    	logger.info("User not able to see suggested accounts when user follow a creator by clicking on Follow button on a creator profile.");
						    }
							NavigateToHomPage();
						}
					}
				
				
						
			
				
				//FeedModule
				
				public void Feed_T1994(String userType) throws Exception {
					if (userType.equalsIgnoreCase("NonSubscribedUser")) {
						System.out.println();
						System.out.println("T1994_Logged in User - Check User able to see message button on creator profile when he taps on User handle name in Feed screen");
						extent.HeaderChildNode("T1994_Logged in User - Check User able to see message button on creator profile when he taps on User handle name in Feed screen");
						deleteFollowingInFollowingScreen();
						click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
						waitTime(2000);
						String FollowXValue = getAttributValue("x", IOSHipiNeoProfilePage.objiosFollowButtonInUserProfile);
						int value1 = Integer.parseInt(FollowXValue);
						String MessageXValue = getAttributValue("x", IOSHipiNeoProfilePage.objiosChatIconInUserProfile);
						int value2 = Integer.parseInt(MessageXValue);
						if (verifyElementExist(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon")) {
							if (value1<value2) {
								extentLoggerPass("", "User able to see message button next to Follow CTA in creator profile");
						    	logger.info("User able to see message button next to Follow CTA in creator profile");
						    }else {
						    	extentLoggerFail("", "User not able to see message button next to Follow CTA in creator profile");
						    	logger.info("User not able to see message button next to Follow CTA in creator profile");
						    }
						}
						NavigateToHomPage();
					}
				}


						public void Feed_T1995(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T1995_Logged in User - Check User able to see message button on creator profile when he taps on thumbnail in Feed screen");
								extent.HeaderChildNode("T1995_Logged in User - Check User able to see message button on creator profile when he taps on thumbnail in Feed screen");
								deleteFollowingInFollowingScreen();
								click(IOSHipiNeoHomePage.objiosprofilepicture, "Profile Picture");
								waitTime(2000);
								String FollowXValue = getAttributValue("x", IOSHipiNeoProfilePage.objiosFollowButtonInUserProfile);
								int value1 = Integer.parseInt(FollowXValue);
								String MessageXValue = getAttributValue("x", IOSHipiNeoProfilePage.objiosChatIconInUserProfile);
								int value2 = Integer.parseInt(MessageXValue);
								if (verifyElementExist(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon")) {
									if (value1<value2) {
										extentLoggerPass("", "User able to see message button next to Follow CTA in creator profile");
								    	logger.info("User able to see message button next to Follow CTA in creator profile");
								    }else {
								    	extentLoggerFail("", "User not able to see message button next to Follow CTA in creator profile");
								    	logger.info("User not able to see message button next to Follow CTA in creator profile");
								    }
								}
								NavigateToHomPage();
							}
						}
				
						public void Feed_T1997(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T1997_Logged in User - Check User able to see history of messages by clicking on button in creator profile");
								extent.HeaderChildNode("T1997_Logged in User - Check User able to see history of messages by clicking on button in creator profile");
								click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
								waitTime(2000);
								click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
								waitTime(2000);
								if(verifyElementExist(IOSHipiNeoProfilePage.objiosEmptyMessageInMessageScreen, "Empty Message")) {
									click(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, "Send A Message Field");
									waitTime(2000);
									type(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, "Hi", "Hi");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosPostButtonInMessageScreen, "Post Button");
									waitTime(2000);
								}
								if (!verifyElementExist(IOSHipiNeoProfilePage.objiosEmptyMessageInMessageScreen, "Empty Message")) {
									extentLoggerPass("", "User  able to see history of messages with other User which we have chatted");
							    	logger.info("User  able to see history of messages with other User which we have chatted");
							    }else {
							    	extentLoggerFail("", "User not able to see history of messages with other User which we have chatted");
							    	logger.info("User not able to see history of messages with other User which we have chatted");
							    }
							}
							NavigateToHomPage();
						}
					
						
						
						public void Feed_T1998(String userType) throws Exception {
						if (userType.equalsIgnoreCase("NonSubscribedUser")) {
							System.out.println();
							System.out.println("T1998_User should be able to send and receive messages with other Users");
							extent.HeaderChildNode("T1998_User should be able to send and receive messages with other Users");
							click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
							waitTime(2000);
							click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
							waitTime(2000);
							String Message = RandomStringGenerator(2);
							type(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, Message, Message);
							waitTime(5000);	
							click(IOSHipiNeoProfilePage.objiosPostButtonInMessageScreen, "Post Button");
							waitTime(2000);
							if (verifyElementExist(IOSHipiNeoProfilePage.RandomMessagesInMessageScreen(Message), Message )) {
								extentLoggerPass("", "User able to compose a new message and send");
						    	logger.info("User able to compose a new message and send");
						    }else {
						    	extentLoggerFail("", "User not able to compose a new message and send");
						    	logger.info("User not able to compose a new message and send");
						    }
						}
						NavigateToHomPage();
					}
							
//						public void Feed_T2010(String userType) throws Exception {
//							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
//								System.out.println();
//								System.out.println("T2010_Logged in User - Check User able to compose a new message and send to creator");
//								extent.HeaderChildNode("T2010_Logged in User - Check User able to compose a new message and send to creator");
//								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Btn");
//								waitTime(2000);
//								click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
//								waitTime(2000);
//								String Message = RandomStringGenerator(2);
//								type(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, Message, Message);
//								waitTime(5000);	
//								click(IOSHipiNeoProfilePage.objiosPostButtonInMessageScreen, "Post Button");
//								waitTime(2000);
//								if (verifyElementExist(IOSHipiNeoProfilePage.RandomMessagesInMessageScreen(Message), Message )) {
//									extentLoggerPass("", "User able to compose a new message and send");
//							    	logger.info("User able to compose a new message and send");
//							    }else {
//							    	extentLoggerFail("", "User not able to compose a new message and send");
//							    	logger.info("User not able to compose a new message and send");
//							    }
//							}
//							NavigateToHomPage();
//						}
								
						
				
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						//Profile
						public void Profile_T1996(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T1996_Logged in User - Check User able to see message button in Profile screen next to bookmark icon");
								extent.HeaderChildNode("T1996_Logged in User - Check User able to see message button in Profile screen next to bookmark icon");
								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								String bookmarkXValue = getAttributValue("x", IOSHipiNeoProfilePage.objiosEditProfileBookmarkchatIcon("ic bookmark"));
								int Value1 = Integer.parseInt(bookmarkXValue);
								String MessageXValue = getAttributValue("x", IOSHipiNeoProfilePage.objiosChatIconInUserProfile);
								int Value2 = Integer.parseInt(MessageXValue);
								if (verifyElementExist(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon")) {
									if(Value1<Value2) {
											extentLoggerPass("", "User able to see message button next to bookmark icon in profile");
									    	logger.info("User able to see message button next to bookmark icon in profile");
									    }else {
									    	extentLoggerFail("", "User not able to see message button next to bookmark icon in profile");
									    	logger.info("User not able to see message button next to bookmark icon in profile");
									    }
									}
									NavigateToHomPage();
								}
						}
						
						public void Profile_T2003(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T2003_Logged in User - Check history of message gets displayed in Profile screen");
								extent.HeaderChildNode("T2003_Logged in User - Check history of message gets displayed in Profile screen");
								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								if(!verifyElementExist(IOSHipiNeoProfilePage.objiosHistoryOfMessageInDirectMessageScreen, "History Of Message")) {
									NavigateToHomPage();
									click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, "Send A Message Field");
									waitTime(2000);
									type(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, "Hi", "Hi");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosPostButtonInMessageScreen, "Post Button");
									waitTime(2000);
									NavigateToHomPage();
									click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
									waitTime(2000);
									if (verifyElementExist(IOSHipiNeoProfilePage.objiosHistoryOfMessageInDirectMessageScreen, "History Of Message")) {
										extentLoggerPass("", "User able to see the history of messages in profile screen");
								    	logger.info("User able to see the history of messages in profile screen");
								    }else {
								    	extentLoggerFail("", "User not able to see the history of messages in profile screen");
								    	logger.info("User not able to see the history of messages in profile screen");
								    }
								}
								NavigateToHomPage();
							}
					}
								
						public void Profile_T2004(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T2004_Logged in User - Check User is able to see Direct Message page with Event name and User handle when he taps Message Button");
								extent.HeaderChildNode("T2004_Logged in User - Check User is able to see Direct Message page with Event name and User handle when he taps Message Button");
								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
								waitTime(2000);
								if (verifyElementExist(IOSHipiNeoProfilePage.objiosDirectMessagePageTextInMessageScreen, "Direct Message Page")) {
									extentLoggerPass("", "User able to see Direct Message page with all options");
							    	logger.info("User able to see Direct Message page with all options");
							    }else {
							    	extentLoggerFail("", "User not able to see Direct Message page with all options");
							    	logger.info("User not able to see Direct Message page with all options");
							    }
								NavigateToHomPage();
							}
						}
						
						
						public void Profile_T2008(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T2008_Logged in User - Check UI of message screen if user has not messaged anybody");
								extent.HeaderChildNode("T2008_Logged in User - Check UI of message screen if user has not messaged anybody");
								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
								waitTime(2000);
								verifyElementPresent(IOSHipiNeoProfilePage.objiosDirectMessagePageTextInMessageScreen, "Direct Message Page Text");
								waitTime(2000);
								verifyElementPresent(IOSHipiNeoProfilePage.objiosPlusIconInDirectMessageScreen, "Plus Icon");
								waitTime(2000);
								verifyElementPresent(IOSHipiNeoProfilePage.objiOSBackButtonFromProfileDetailsPage, "Back Button");
								waitTime(2000);
								if(!verifyElementExist(IOSHipiNeoProfilePage.objiosHistoryOfMessageInDirectMessageScreen, "History Of Message")) {
									NavigateToHomPage();
									click(IOSHipiNeoHomePage.objiOSUserNameInFeedScreen, "User Name");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, "Send A Message Field");
									waitTime(2000);
									type(IOSHipiNeoProfilePage.objiosSendAMessageTextFieldInMessageScreen, "Hi", "Hi");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosPostButtonInMessageScreen, "Post Button");
									waitTime(2000);
									NavigateToHomPage();
									click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
									waitTime(2000);
									click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
									waitTime(2000);
								}
								verifyElementPresent(IOSHipiNeoProfilePage.objiosHistoryOfMessageInDirectMessageScreen, "History Of Message");
								waitTime(2000);
								NavigateToHomPage();
								
							}
						}
						
						
						public void Profile_T2009(String userType) throws Exception {
							if (userType.equalsIgnoreCase("NonSubscribedUser")) {
								System.out.println();
								System.out.println("T2009_Logged in User - Check if Following list is displaying post tapping + icon");
								extent.HeaderChildNode("T2009_Logged in User - Check if Following list is displaying post tapping + icon");
								follow();
								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								click(IOSHipiNeoProfilePage.objiosChatIconInUserProfile, "Message Icon");
								waitTime(2000);
								click(IOSHipiNeoProfilePage.objiosPlusIconInDirectMessageScreen, "Plus Icon");
								waitTime(2000);
								List<WebElement> List = findElements(IOSHipiNeoProfilePage.objiosListOfFollowingBtnInNewChatScreen);
								int List1 = List.size();
								System.out.println(List1);
								if(0<List1) {
									extentLoggerPass("", "User able to see Following list post tapping + icon at top right");
							    	logger.info("User able to see Following list post tapping + icon at top right");
							    }else {
							    	extentLoggerFail("", "User not able to see Following list post tapping + icon at top right");
							    	logger.info("User not able to see Following list post tapping + icon at top right");
							    }
								NavigateToHomPage();
							}
						}
						
				
						public void FeedScreenArrivalTimeFromSplashScreen(String userType) throws InterruptedException, IOException{

							Time_ExcelUpdate.TestCaseIDNode("TC001");
							
							Time_ExcelUpdate.ModuleNode("FeedArrival");
							Time_ExcelUpdate.TestCaseSummaryNode1("Launch hipi app");
							extent.HeaderChildNode("Launch hipi app");
							getDriver().quit();
							waitTime(10000);
							new Zee5ApplicasteriOSHipiNeoSanityBusinessLogic("Hipi");
							
							Instant start = Instant.now();
						
							extent.extentLogger("", "clicked on hipi at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 50, "for you button in feed")) {	
							screencapture();
							Instant end = Instant.now();
							
							Duration timeElapsed = Duration.between(start, end);
							String Processingtimesec=Long.toString(timeElapsed.getSeconds());
							String Processingtimemilli=Long.toString(timeElapsed.toMillis());
							int l=Processingtimemilli.length();
							String mili=Processingtimemilli.substring(l-3, l);
							extent.HeaderChildNode("the arrival time of feed screen from splash screen " +"Time taken in Seconds : "+timeElapsed.getSeconds()+" Seconds");
							System.out.println("Time taken in Seconds : "+timeElapsed.getSeconds()+" Seconds" );
							extent.HeaderChildNode("the arrival time of feed screen from splash screen " +"Time taken in milliseconds : "+timeElapsed.toMillis()+" milliSeconds");
							//System.out.println("Time taken in milliseconds : "+timeElapsed.toMillis()+" milliSeconds" );
							
							Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
							extent.extentLogger("", "Feed screen seen  at Time----- " + end);
							
							}else {
								extent.extentLoggerFail("", "Feed screen is not visible");
							}
						}
								
						public void LikeVideo(String userType) throws Exception{
							
							extent.HeaderChildNode("Tapping on like button");
							Time_ExcelUpdate.TestCaseIDNode("TC002");
							
							Time_ExcelUpdate.ModuleNode("Like scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Tapping on like button");
							TimeStampScrollToElementiOS_Up(IOSHipiNeoHomePage.objiOSLikeBtn, "Like button");
							
							TimeStampclick(IOSHipiNeoHomePage.objiOSLikeBtn, "Like button");
							
							Instant start = Instant.now();
							
							//extent.extentLogger("", "clicked on like button at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiOSLikedBtnInFeedScreen,50,"Liked button")) {
							Instant end = Instant.now();
							//extent.extentLogger("", "Liked button seen  at Time----- " + end);
							Duration timeElapsed = Duration.between(start, end);
							screencapture();
							String Processingtimesec=Long.toString(timeElapsed.getSeconds());
							
							extent.HeaderChildNode("Time take to like a Video " +"  in Seconds : "+timeElapsed.getSeconds()+" Seconds");
							System.out.println("Time taken in Seconds : "+timeElapsed.getSeconds()+" Seconds" );
							String Processingtimemilli=Long.toString(timeElapsed.toMillis());
							int l=Processingtimemilli.length();
							String mili=Processingtimemilli.substring(l-3, l);
							
							Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
							waitTime(1000);
							extent.extentLogger("", "Total time to like----- " + Processingtimesec);
							
							}else {
								extent.extentLoggerFail("", "user not able to like video");
							}
							
						}
						
						public void commentOnvideo(String userType) throws Exception{
							extent.HeaderChildNode("Comment posting scenario");
							Time_ExcelUpdate.TestCaseIDNode("TC003");
							
							Time_ExcelUpdate.ModuleNode("Comment scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check user able to post the Comment ");
							String comment=RandomStringGenerator(5);
							TimeStampcommentcount(1);
							
							TimeStampclick(IOSHipiNeoHomePage.objiOSCommentBtn, "comment icon");
							waitTime(5000);
							if(!TimeStampverifyElementExist(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, "comment tab")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSCommentBtn, "comment icon");
							}
							if(TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen, 20, "comment screen")) {
								TimeStamptype(IOSHipiNeoHomePage.objiOSAddACommentTextFieldInFeedScreen,comment , "add comment");	
								waitTime(4000);
								TimeStampclick(IOSHipiNeoHomePage.objiOSPostButtonInCommentScreen, "Post button");
								Instant start = Instant.now();
								
								//extent.extentLogger("", "clicked on Post button at Time----- "+ start);
								//UserCommentDescInCommentSection
								if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.UserNameXpath(comment), 50, "comment added")){
									Instant end = Instant.now();
									
									Duration timeElapsed = Duration.between(start, end);
									screencapture();
									extent.HeaderChildNode("Time taken to post a comment " +"  in Seconds : "+timeElapsed.getSeconds()+" Seconds");
									System.out.println("Time taken in Seconds : "+timeElapsed.getSeconds()+" Seconds" );
//									extent.HeaderChildNode("Time taken to post a comment " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//									System.out.println("Time taken in milliseconds : "+timeElapsed.toMillis()+" milliSeconds" );
									String Processingtimesec=Long.toString(timeElapsed.getSeconds());
									String Processingtimemilli=Long.toString(timeElapsed.toMillis());
									int l=Processingtimemilli.length();
									String mili=Processingtimemilli.substring(l-3, l);
									
									Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
									waitTime(1000);
									extent.extentLogger("", "User able to comment on video at ----- " + Processingtimesec);
									
									}else {
										extent.extentLoggerFail("", "User not able to comment on video");
									}
								
								
								
							}
							
							if(TimeStampverifyElementExist(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "comment close icon")) {
								TimeStampclick(IOSHipiNeoHomePage.objiosCrossIconInPrivateCommentbutton, "comment close icon");
								waitTime(4000);
							}
							
						}
						
						
						public void create_Video_And_Post(int k,String userType,String TCID,String slno) throws Exception {
							extent.HeaderChildNode("Video posting scenario for time " +k + " seconds");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							
							Time_ExcelUpdate.ModuleNode("Create video scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check user able to Create video of " +k + " seconds");
							TimeStamp_create_Video_Of_Specific_Time(k);
							
							TimeStampclick(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, "Post");
							Instant start = Instant.now();
							
//							extent.extentLogger("", "clicked on Post button at Time----- "+ start);
							//objiosVideoPostedSucessfully
							
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiCreateVideoPage.objiosVideoPostedSucessfully, 200, "video upload successsfully")) {
								Instant end = Instant.now();
								//extent.extentLogger("", "video uploaded successfully seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Time taken to post a video 0f_" + k+"s is-- " +"  in Seconds : "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Time taken in Seconds : "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Time taken to post a video 0f_" + k+"s is-- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Time taken in milliseconds : "+timeElapsed.toMillis()+" milliSeconds" );
							
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Total time to Create video of_" + k+"s is ----- " + Processingtimesec);
								
							
							}else {
								extent.extentLoggerFail("", "posting video scenario failed");
							}
							
							
						}
						
						public void video_Start_Time_After_Swipe(String userType,String TCID) throws InterruptedException, IOException {
							extent.HeaderChildNode("Video Start up time after a swipe");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Video Start");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check starting time of video after swipe ");
							TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSForYouBtnInFeedScreen, 100,"Feed");
							TimeStampPartialSwipe("Up", 1);
							Instant start = Instant.now();
							
//							extent.extentLogger("", "Swiped at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiosProgressiveBarInFeedScreen,200,"video starting")) {
							
								Instant end = Instant.now();
								
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("video started is seen after a swipe  in Seconds : "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("video started is seen after a swipe "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("video started is seen after a swipe is-- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("video started is seen after a swipe "+timeElapsed.toMillis()+" milliSeconds" );	
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Video Start up time after a swipe is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "posting video scenario failed");
							}
							
							
						}
						
						public void discover_Screen_LoadTime(String userType,String TCID) throws Exception {
							
							extent.HeaderChildNode("discover screen");
							
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("discover screen");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time of navigation to discover screen ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
							Instant start = Instant.now();
							
							//extent.extentLogger("", "Clicked on discover at Time----- "+ start);	
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage,100,"Banner in discover")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "Discover screen is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Discover screen is seen at ----- : "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Discover screen is seen at ---- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Discover screen is seen at ---- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Discover screen is seen at ---- "+timeElapsed.toMillis()+" milliSeconds" );	
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to navigate to discover screen is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "navigation for discover screen failed");
							}
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							waitTime(4000);
						}
						
						
						
						public void searchResultScreen(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("Searching a keyword in Discover screen");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("discover screen search result");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time of Searching a keyword in Discover screen ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
							waitTime(5000);
							TimeStampclick(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "searchfield");
							waitTime(5000);
							TimeStamptype(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Mohit", "Mohit");
							waitTime(7000);
//							hideKeyboard();
//							waitTime(2500);
							TimeStampclick(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "search");
//							keyboardaction("Enter");
							Instant start = Instant.now();
							
							//extent.extentLogger("", "typed a keyword and clicked on search button at time----- "+ start);
							
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosTabnameInDiscoverSearchResultsPage("Top"),50,"Top tab of searched results in discover")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "Discover Searched result screen is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Discover Searched result screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Discover Searched result screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Discover Searched result screen is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Discover Searched result screen is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for search result screen is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "search result screen failed");
							}
							TimeStampclick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "back");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							
							
						}
						
						public void searchAutoSuggestionsResultScreen(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("Searching a keyword for Auto-suggestion in Discover screen");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Auto-suggestion in discover screen");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for  Auto-suggestion Searching a keyword in Discover screen ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
							waitTime(5000);
							TimeStampclick(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "searchfield");
							waitTime(5000);
							TimeStamptype(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Moh", "Moh");
							
							Instant start = Instant.now();
							
							//extent.extentLogger("", "typed a keyword in search field at time----- "+ start);
							
							if(	TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosAutoSuggestionsInSearchParentPage,50,"Auto suggestion when typed some keyword")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "Auto suggestion is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Auto suggestion is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Auto suggestion is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Auto suggestion is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Auto suggestion is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for  Auto-suggestion search result screen is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", " Auto-suggestion search result screen failed");
							}
							TimeStampclick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "back");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							
							
						}
						
						
				public void Carousel_or_Banner_LoadTime(String userType,String TCID) throws Exception {
							
							extent.HeaderChildNode("Banner loading in discover screen");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Banner loading ");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for Banner loading in discover screen ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
							Instant start = Instant.now();
							
//							extent.extentLogger("", "Clicked on discover at Time----- "+ start);	
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage,50,"Banner in discover")) {
								
								Instant end = Instant.now();
//								extent.extentLogger("", "Banner screen is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Banner screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Banner screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Banner screen is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Banner screen is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for Banner loading in discover screen is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", " Banner loading in discover screen failed");
							}
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							waitTime(4000);
						}
						
						
						public void Banner_clicked_landing_Screen(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("clicking Banner/Carousel in discover screen");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode(" Banner/Carousel navigation");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for clicking Banner/Carousel in discover screen ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
							waitTime(4000);
							TimeStampclick(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage, "Banner image");
							Instant start = Instant.now();
							
							//extent.extentLogger("", "Clicked on Bannner in discover page at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosHashtagTitle,100,"Hashtag title")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "Hashtag screen is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Hashtag screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Hashtag screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Hashtag screen is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Hashtag screen is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for Banner click navigation is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", " Banner click navigation failed");
							}
							
							TimeStampclick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "back");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							waitTime(4000);
						}
						
						
						public void Rails_Page_Loading(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("clicking on rails in discover screen");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode(" Rails navigation");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for clicking on rails in discover screen ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
							waitTime(4000);
							TimeStampScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
							waitTime(2000);
							TimeStampScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosRailsnameInDiscoverSearchResultsPage("Top Hipi Stars"),
									"Top Hipi Stars");
							waitTime(3000);
							TimeStampclick(IOSHiPiNeoDiscoverPage.objiosRightFacingArrowForTray("Top Hipi Stars"), "Top Hipi Stars Arrow");
							Instant start = Instant.now();
							
							//extent.extentLogger("", "Clicked on Rails in discover page at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosFollowInRails,100,"Follow buttons")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "Rail's page landing screen is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Rail's page landing screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Rail's page landing screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Rail's page landing screen is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Rail's page landing screen is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for Rail click navigation is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", " Rail click navigation failed");
							}
							TimeStampclick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "back");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							waitTime(4000);
							
						}
						
						
					public void Hashtag_details_page(String userType,String TCID) throws Exception {
						extent.HeaderChildNode("clicking on Hastag Rails in discover screen");
						Time_ExcelUpdate.TestCaseIDNode(TCID);
						Time_ExcelUpdate.ModuleNode(" Hastag Rails navigation");
						Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for clicking on Hastag rails in discover screen ");
						TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover button");
						waitTime(4000);
						TimeStampScrollToElementiOS_Down(IOSHiPiNeoDiscoverPage.objiosBannerInDiscoverpage, "Banner");
						waitTime(2000);
						TimeStampScrollToElementiOS_Up(IOSHiPiNeoDiscoverPage.objiosHastagTrayArrowButton,
								"hashtag rail");
						waitTime(4000);
						TimeStampclick(IOSHiPiNeoDiscoverPage.objiosHastagTrayArrowButton,"hashtag rail");
						Instant start = Instant.now();
						//extent.extentLogger("", "Clicked on Hastag Rails in discover page at Time----- "+ start);
						if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosHashtagTitle,100,"hashtag title on screen")) {
							
							Instant end = Instant.now();
							//extent.extentLogger("", "Hashtag Rail's page landing screen is seen  at Time----- " + end);
							Duration timeElapsed = Duration.between(start, end);
							screencapture();
							extent.HeaderChildNode("Hashtag Rail's page landing screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
							System.out.println("Hashtag Rail's page landing screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//							extent.HeaderChildNode("Hashtag Rail's page landing screen is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//							System.out.println("Hashtag Rail's page landing screen is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
							
							
							String Processingtimesec=Long.toString(timeElapsed.getSeconds());
							String Processingtimemilli=Long.toString(timeElapsed.toMillis());
							int l=Processingtimemilli.length();
							String mili=Processingtimemilli.substring(l-3, l);
							
							Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
							waitTime(1000);
							extent.extentLogger("", "Time taken to for Hastag Rail click navigation is ----- " + Processingtimesec);
							
						}else {
							extent.extentLoggerFail("", "Hastag Rail click navigation failed");
						}
						TimeStampclick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "back");
						waitTime(3000);
						TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
						
						waitTime(4000);
						
					}
					public void TimeStampScrollToElementiOS_Up(By Locator, String validationText) throws Exception {
						// Swipe("DOWN", 2);
						for (int i = 1; i <= 40; i++) {

							if (TimeStampverifyElementExist(Locator, validationText) == true) {

								String text = getText(Locator);

								logger.info("Scrolled till " + text);
								//extent.extentLogger("Scroll", "Scrolled till " + text);
								screencapture();
								break;
							}
							waitTime(2000);
							TimeStampPartialSwipe("UP", 1);
						}
					}

					public void CreatorSoundScreenLoadTime(String userType,String TCID) throws Exception {
						extent.HeaderChildNode("Creator sound screen");
						Time_ExcelUpdate.TestCaseIDNode(TCID);
						Time_ExcelUpdate.ModuleNode("Creator sound screen");
						Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for navigating to sound screen from creator screen ");
						TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");
						
						waitTime(3000);
						TimeStampPopupOfCameraAndMicrophone();
						if (!TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
							TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");	
							waitTime(3000);
						}
						if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
							TimeStampclick(IOSHipiCreateVideoPage.objiosSoundsInRecordScreen, "Sounds");
							
							Instant start = Instant.now();
							//extent.extentLogger("", "Clicked on Sounds in Creator Screen at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHiPiNeoDiscoverPage.objiosBannerImageInDiscoverpage,100,"Sounds screen")) {
								
								Instant end = Instant.now();
//								extent.extentLogger("", "Sounds screen screen is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Sounds screen screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Sounds screen screen is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Sounds screen screen is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Sounds screen screen is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Sound screen is visible at ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "Sound screen navigation failed");
							}
							TimeStampclick(IOSHiPiNeoDiscoverPage.objBackButtonInDiscoverPage, "back");
							waitTime(3000);
							TimeStampclick(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross icon");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
							
							
						}
						
					}
						
					public void logout_scenario(String userType,String TCID) throws InterruptedException, Exception {
						extent.HeaderChildNode("Logout steps");
						Time_ExcelUpdate.TestCaseIDNode(TCID);
						Time_ExcelUpdate.ModuleNode("Logout Scenario");
						Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for Logout ");

							if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 20, "Home Icon")) {
								waitTime(2000);
								TimeStampclick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
								waitTime(2000);
								TimeStampScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Version of the app");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
								waitTime(2000);

								TimeStampverifyElementExist(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Are u sure for logout");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoSettingsPage.objiOSLogOutConfirmBtn, "logout Confirm button");
								Instant start = Instant.now();
								//extent.extentLogger("", "Clicked on Logout  at Time----- "+ start);
								if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiiosLogOutToastMsg,100,"Logout toast msg")) {
									
									Instant end = Instant.now();
									//extent.extentLogger("", "Logout toast msg is seen  at Time----- " + end);
									Duration timeElapsed = Duration.between(start, end);
									screencapture();
									extent.HeaderChildNode("Logout toast msg is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
									System.out.println("Logout toast msg is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//									extent.HeaderChildNode("Logout toast msg is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//									System.out.println("Logout toast msg is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
									
									
									
									String Processingtimesec=Long.toString(timeElapsed.getSeconds());
									String Processingtimemilli=Long.toString(timeElapsed.toMillis());
									int l=Processingtimemilli.length();
									String mili=Processingtimemilli.substring(l-3, l);
									
									Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
									waitTime(1000);
									extent.extentLogger("", "Time taken to for logout is ----- " + Processingtimesec);
									
								}else {
									extent.extentLoggerFail("", "logout navigation failed");
								}
								
								waitTime(2000);

							}
						}
					
						
						public void login_scenario(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("Login steps");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Login Scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for Login ");
							
							if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 15, "Profile button")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
								waitTime(3000);
								if (TimeStampverifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
									TimeStampLogout();
									waitTime(3000);
									TimeStampclick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
								}

								TimeStampclick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");

								String Username = getParameterFromXML("NonsubscribedUserName");
								String Password = getParameterFromXML("NonsubscribedPassword");
								waitTime(2000);

								TimeStamphideKeyboard();
								TimeStampclick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoHomePage.objiOSEmailIdField, "Email field");
								waitTime(2000);
								TimeStamphideKeyboard();

								TimeStamptype(IOSHipiNeoHomePage.objiOSEmailIdField, Username, "Email Field");
								waitTime(2000);
								TimeStamphideKeyboard();

								TimeStampclick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
								waitTime(2000);
								TimeStamphideKeyboard();

								TimeStamptype(IOSHipiNeoHomePage.objiosPasswordField, Password, "Password field");
								waitTime(2000);
								TimeStamphideKeyboard();
								TimeStampclick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");
								Instant start = Instant.now();
								//extent.extentLogger("", "Clicked on Login  at Time----- "+ start);
								if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiiosLoginToastMsg,100,"Login succesfully toast msg")) {
									
									Instant end = Instant.now();
									//extent.extentLogger("", "Login succesfully toast msg is seen  at Time----- " + end);
									Duration timeElapsed = Duration.between(start, end);
									screencapture();
									extent.HeaderChildNode("Login succesfully toast msg is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
									System.out.println("Login succesfully toast msg is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//									extent.HeaderChildNode("Login succesfully toast msg is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//									System.out.println("Login succesfully toast msg is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
									
									
									
									String Processingtimesec=Long.toString(timeElapsed.getSeconds());
									String Processingtimemilli=Long.toString(timeElapsed.toMillis());
									int l=Processingtimemilli.length();
									String mili=Processingtimemilli.substring(l-3, l);
									
									Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
									waitTime(1000);
									extent.extentLogger("", "Time taken to for login is ----- " + Processingtimesec);
									
								}else {
									extent.extentLoggerFail("", "login navigation failed");
								}
								
							}
						}
							
						public void Effects_LoadTime(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("Effects  LoadTime steps");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Effects Load Time Scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for Effects downloading ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "create button");
							waitTime(3000);
							if (!TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");	
								waitTime(3000);
							}
							TimeStampclick(IOSHipiCreateVideoPage.objiosEffectCTAinRecordingScreen, "Effects in Recording screen");
							waitTime(3000);
							TimeStampclick(IOSHipiCreateVideoPage.objiosFiltersNotDownloadedUnderAcategory(1), "First effect");
							Instant start = Instant.now();
							//extent.extentLogger("", "Clicked on 1st effect  at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiCreateVideoPage.objiosDownloadedFilters(1),100,"First filter Downloaded")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "First Effect Downloaded is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("First Effect Downloaded is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("First Effect Downloaded is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("First Effect Downloaded is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("First Effect Downloaded is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for Effect Downloaded is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "Effect Downloaded is failed");
							}
							TimeStamptapiOSAtCenterOfScrreen(1);
							waitTime(2000);
							TimeStampclick(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross icon");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
						}
						
						
						
						public void Filters_LoadTime(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("Filter  LoadTime steps");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Filter Load Time Scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for Filter downloading ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "create button");
							waitTime(3000);
							if (!TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");	
								waitTime(3000);
							}
							TimeStampclick(IOSHipiCreateVideoPage.objiosFilterButtonInVideoPage, "Filters in Recording screen");
							waitTime(3000);
							TimeStampclick(IOSHipiCreateVideoPage.objiosFiltersNotDownloadedUnderAcategory(1), "First Filter");
							Instant start = Instant.now();
							//extent.extentLogger("", "Clicked on 1st Filter  at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiCreateVideoPage.objiosDownloadedFilters(1),100,"First filter Downloaded")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "First filter Downloaded is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("First filter Downloaded is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("First filter Downloaded is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("First filter Downloaded is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("First filter Downloaded is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
								
								
								
								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for Filter Downloaded is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "Filter Downloaded is failed");
							}
							TimeStamptapiOSAtCenterOfScrreen(1);
							waitTime(2000);
							TimeStampclick(IOSHipiCreateVideoPage.objCrossIconInRecordingScreen, "cross icon");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home ");
							
						}
						
						
						
						public void Next_CTA_from_video_detail_page(String userType,String TCID) throws Exception {
							extent.HeaderChildNode("Next CTA from video detail page steps");
							Time_ExcelUpdate.TestCaseIDNode(TCID);
							Time_ExcelUpdate.ModuleNode("Next CTA from video detail page  Scenario");
							Time_ExcelUpdate.TestCaseSummaryNode1("Check  time for Next CTA from video detail page ");
							TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");
							waitTime(3000);
							if (!TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");	
								waitTime(3000);
							}
							TimeStampclick(IOSHipiCreateVideoPage.iosRecordButon, "Record button");
							waitTime(3000);
							TimeStampwaitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 200, "Next");
							TimeStampclick(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next button");
							Instant start = Instant.now();
							//extent.extentLogger("", "Clicked on Next button  at Time----- "+ start);
							if(TimeStampwaitForElementDisplayedFastPolling(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng,200,"Post button")) {
								
								Instant end = Instant.now();
								//extent.extentLogger("", "Post button is seen  at Time----- " + end);
								Duration timeElapsed = Duration.between(start, end);
								screencapture();
								extent.HeaderChildNode("Post button is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds");
								System.out.println("Post button is seen  at Time----- "+timeElapsed.getSeconds()+" Seconds" );
//								extent.HeaderChildNode("Post button is seen  at Time----- " + " in milliseconds : " + timeElapsed.toMillis() + " milliSeconds");
//								System.out.println("Post button is seen  at Time----- "+timeElapsed.toMillis()+" milliSeconds" );	
//								
								
								

								String Processingtimesec=Long.toString(timeElapsed.getSeconds());
								String Processingtimemilli=Long.toString(timeElapsed.toMillis());
								int l=Processingtimemilli.length();
								String mili=Processingtimemilli.substring(l-3, l);
								
								Time_ExcelUpdate.timeStampNode(Processingtimesec+"."+mili + "  Sec");
								waitTime(1000);
								extent.extentLogger("", "Time taken to for Next CTA from video detail page is ----- " + Processingtimesec);
								
							}else {
								extent.extentLoggerFail("", "Navigation to Next CTA from video detail page is failed");
							}
							TimeStampBackToFeedScreenFromVideoPostScreen();
						}
						
						
						
						
						/**
						 * Function to Relaunch the driver
						 */
						public void TimeStamprelaunch(String method, String uninstall) throws Exception {
							HeaderChildNode("Relaunch the app");
							logger.info("Relaunching the application");
							//extent.extentLogger("Relaunch", "Relaunching the application");
							waitTime(4000);
							if (uninstall.equalsIgnoreCase("yes")) {
								try {
									getDriver().removeApp("com.zee5.hipi", null);
									System.out.println("App uninstalled");
								} catch (Exception e) {
									// System.out.println("Not uninstalled");
								}
							}

							getDriver().quit();

							new Zee5ApplicasteriOSHipiNeoSanityBusinessLogic("no");// testflight

							if (method.equalsIgnoreCase("appstore") || method.equalsIgnoreCase("testflight")) {
								TimeStampinstalliOSHipiApp(getParameterFromXML("InstallBuild"), uninstall, getParameterFromXML("RequiredBuild"),
										getParameterFromXML("BuildVersion"), getParameterFromXML("release"));
								if (uninstall.equalsIgnoreCase("Yes")) {
									logger.info("Successfull Installed");
								}

							}

						}
						
						public void TimeStampinstalliOSHipiApp(String installMethod, String uninstall, String Required, String Version,
								String release) {
							HeaderChildNode("Install HiPi iOS app from " + installMethod);
							if (installMethod.equalsIgnoreCase("testflight")) {

								try {

									Thread.sleep(10000);
									if (uninstall.equalsIgnoreCase("Yes")) {
										TimeStampbuildVersion(Required, Version, release);

									}

								} catch (Exception e) {

								}
							} else if (installMethod.equalsIgnoreCase("appstore")) {
								logger.info("Install app from appstore");
								try {

									Thread.sleep(5000);
									TimeStampclick(IOSHipiNeoHomePage.objiosSearchTabBtn, "Search Tab Button");
									waitTime(1500);
									TimeStampclick(IOSHipiNeoHomePage.objiosSearchBar, "Search TextField");
									waitTime(4500);
									TimeStamptype(IOSHipiNeoHomePage.objiosSearchBar, "Hipi" + "\n", "Search Text Field");
									Thread.sleep(10000);
									if (uninstall.equalsIgnoreCase("Yes")) {
										TimeStampclick(IOSHipiNeoHomePage.objiosAppStoreHipiReDownloadBtn, "hipi App Re-Download Button");
										
										waitTime(5000);
										if (TimeStampverifyElementExist(IOSHipiNeoHomePage.objiosAccPopUp, "Account Pop Up")) {
											waitTime(3000);
											TimeStampclick(IOSHipiNeoHomePage.objiosInstallBtnInAccPopUp, "Install in Account Pop Up");
											waitTime(3000);

										}

									}
									TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiosAppStoreOpenBtn, 1000, "Open App Button");
									TimeStampclick(IOSHipiNeoHomePage.objiosAppStoreOpenBtn, "Open App Button");
									waitTime(5500);
									TimeStampZee5AppDismissAppPermissionsPopups();

								} catch (Exception e) {

								}
							}

						}
						
						
						public void TimeStampbuildVersion(String Required, String Version, String release) throws Exception {
							if (Required.equalsIgnoreCase("Latest")) {
								if (checkElementDisplayed(IOSHipiNeoHomePage.objiosInstallButton, "Install app")) {
									TimeStampclick(IOSHipiNeoHomePage.objiosInstallButton, "Install app");
									Thread.sleep(15000);
									TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiosOpenButton, 1000, "Open Button");
									TimeStampclick(IOSHipiNeoHomePage.objiosOpenButton, "Open app");
									TimeStampZee5AppDismissAppPermissionsPopups();
								}
							} else {
								TimeStampclick(IOSHipiNeoHomePage.objiosHipiInTestFlight, "Hipi");
								waitTime(3000);
								TimeStampScrollToElementiOS_Up(IOSHipiNeoHomePage.objiosPreviousBuildsInTestFlight, "Previous builds");
								waitTime(1500);
								TimeStampclick(IOSHipiNeoHomePage.objiosPreviousBuildsInTestFlight, "Previous builds");
								waitTime(3000);
								TimeStampScrollToElementiOS_Up(IOSHipiNeoHomePage.objiosVersionIntestFlight(Version), Version);
								waitTime(1500);
								TimeStampclick(IOSHipiNeoHomePage.objiosVersionIntestFlight(Version), Version);
								waitTime(3000);
								TimeStampclick(IOSHipiNeoHomePage.objiosRealeseIntestFlight(release), release);
								waitTime(1500);
//								if(verifyElementExist(IOSHipiNeoHomePage.objiosOlderVersionPopUp, "Older Version")) {
//									
//									click(IOSHipiNeoHomePage.objiosInstallBtnOnOlderVersionPopUp, "Install");
//									waitTime(2000);
//									
//								}

								TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiosOpenBtnIntestFlight(release), 100, "Open Button");
								TimeStampclick(IOSHipiNeoHomePage.objiosOpenBtnIntestFlight(release), "Open Button");
								waitTime(3000);
								TimeStampZee5AppDismissAppPermissionsPopups();
							}

						}	
						
						public void TimeStampZee5AppDismissAppPermissionsPopups() throws Exception {
							extent.HeaderChildNode("Dismiss App Permissions Popups");
							waitTime(6000);
							TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiosTrackActivityPermissionPopup, 850, "Pop ups");
							waitTime(3000);
							if (TimeStampverifyElementExist(IOSHipiNeoHomePage.objiosTrackActivityPermissionPopup,
									"Track Activity Permission Popup")) {
								TimeStampclick(IOSHipiNeoHomePage.objiosAskAppNotToTrackButton,
										"Ask App Not To Track button");
								waitTime(3000);
							}

							waitTime(1000);
							if (TimeStampverifyElementExist(IOSHipiNeoHomePage.objiosNotificationsPopup,
									"'hipi' Would like to Send Notfication Pop Up")) {
								TimeStampclick(IOSHipiNeoHomePage.objiosDontAllowButton, "Dont Allow button");
								waitTime(3000);
							}
							waitTime(4000);
							//DeepLinkURLForShopButton("yes", "no", "no");
							
							if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiosSwipeForNxtVideo, 50, "Hand Gesture")) {
								TimeStampPartialSwipe("UP", 1);
							}
							if(TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSShoppingthelookLookBtn, 20,
									"Shopping the Look Pop up")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSAlrightGotitBtn, "Alright Got it Button");
							waitTime(3000);
							TimeStampclick(IOSHipiNeoHomePage.objiOSOkCoolBtn, "OK Cool");
							waitTime(4000);
							}

							//saveVideoPopup();

						}
						
						
						public void TimeStampLoginAndNivigateToHipi(String loginMethod) throws Exception {
							extent.HeaderChildNode("Login Functionality");
							String pUserType = getParameterFromXML("userType");

							//extent.extentLogger("Login Type", "Login Type : " + pUserType);

							switch (loginMethod) {
							case "Guest":
								extent.HeaderChildNode("Guest User");
								extent.extentLogger("Accessing the application as Guest user", "Accessing the application as Guest user");
								click(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Button");
								waitTime(8000);
								waitForElementDisplayediOS(IOSHipiNeoProfilePage.objiiosLoginPopUp, 10, "Login in to Hipi");
								if (verifyElementExist(IOSHipiNeoProfilePage.objiiosLoginPopUp, "Login in to Hipi")) {
									logger.info(" UserType: Guest user");
									extent.extentLogger("", " UserType: Guest user");
									waitTime(3000);
									click(IOSHipiNeoProfilePage.objiOSLoginPopUpCloseBtn, "Login pop up close");
									waitTime(2000);

								} else {
									Logout();
									logger.info(" Logged out Successfully now UserType: Guest user");
									extent.extentLogger("", " Logged out Successfully now UserType: Guest user");
								}

								break;

							case "NonSubscribedUser":
								// navigateToIntroScreen_DisplaylangScreen();
								extent.HeaderChildNode(" log in as NonSubscribed User using email");

								// click on Profile icon
								if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, 15, "Profile button")) {
									TimeStampclick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
									waitTime(3000);
									if (TimeStampverifyElementExist(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots menu")) {
										TimeStampLogout();
										waitTime(3000);
										TimeStampclick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile Icon");
									}

									TimeStampclick(IOSHipiNeoHomePage.objiOSUsePhoneOrEmail, "Use Phone Or Email");

									String Username = getParameterFromXML("NonsubscribedUserName");
									String Password = getParameterFromXML("NonsubscribedPassword");
									waitTime(2000);

									TimeStamphideKeyboard();
									TimeStampclick(IOSHipiNeoHomePage.objiOSEmailOption, "Email Option");
									waitTime(2000);
									TimeStampclick(IOSHipiNeoHomePage.objiOSEmailIdField, "Email field");
									waitTime(2000);
									TimeStamphideKeyboard();

									TimeStamptype(IOSHipiNeoHomePage.objiOSEmailIdField, Username, "Email Field");
									waitTime(2000);
									TimeStamphideKeyboard();

									TimeStampclick(IOSHipiNeoHomePage.objiosPasswordField, "Password Field");
									waitTime(2000);
									TimeStamphideKeyboard();

									TimeStamptype(IOSHipiNeoHomePage.objiosPasswordField, Password, "Password field");
									waitTime(2000);
									TimeStamphideKeyboard();
									TimeStampclick(IOSHipiNeoHomePage.objiiosLoginBtn, "Login Button");

									if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiiosLoginToastMsg, 15, "Loggeg-In Successfully")) {
										logger.info("Logged-In Successfully toast msg");
										//extent.extentLoggerPass("", "Logged-In Successfully toast msg");
									} else {
										logger.error("Logged-In Successfully toast msg is not displayed");
										//extent.extentLoggerFail("", "Loggeg-In Successfully toast msg is not displayed");
									}

									waitTime(5000);
									if (TimeStampverifyElementExist(IOSHipiNeoProfilePage.objiosSavePasswordPopUp, "Save password pop up")) {
										TimeStampclick(IOSHipiNeoProfilePage.objiosNotNowButtonInSavePasswordPopUp, "Not Now CTA");
										waitTime(2000);
									}
									TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 30, "Home Button");
									// click on feed button
									TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home Icon");

									break;
								} else {
									logger.info("Profile button is not displayed");
									//extent.extentLoggerFail("", "Profile button is not displayed");
								}
							}
						}
				
				
				
						public void TimeStampLogout() throws Exception {

							if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, 20, "Home Icon")) {
								waitTime(2000);
								TimeStampclick(IOSHipiNeoHomePage.objiOSProfileBtnInBelowTabBar, "Profile");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoProfilePage.objiOS3dotsmenu, "3 dots");
								waitTime(2000);
								TimeStampScrollToElementiOS_Up(IOSHipiNeoSettingsPage.objiOSversionInSettingsScreen, "Version of the app");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoSettingsPage.objiOSLogOutBtn, "logout");
								waitTime(2000);

								TimeStampverifyElementExist(IOSHipiNeoSettingsPage.objiosAreYouSureTextInLogoutPOpUp, "Are u sure for logout");
								waitTime(2000);
								TimeStampclick(IOSHipiNeoSettingsPage.objiOSLogOutConfirmBtn, "logout Confirm button");
								waitTime(800);
								if (TimeStampwaitForElementDisplayediOS(IOSHipiNeoHomePage.objiiosLogOutToastMsg, 15, "Logged-Out Successfully")) {
									logger.info("Logged-Out Successfully toast msg");
									//extent.extentLoggerPass("", "Logged-Out Successfully toast msg");
								} else {
									logger.error("Logged-Out Successfully toast msg is not displayed");
									//extent.extentLoggerFail("", "Logged-Out Successfully toast msg is not displayed");
								}
								waitTime(2000);

							}
						}
				
				
				
						public void TimeStampBackToFeedScreenFromVideoPostScreen() throws Exception {

							waitTime(2000);
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Post screen")) {
								TimeStampclick(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Post screen");
								waitTime(3000);
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Edit screen")) {
								TimeStampclick(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Edit screen");
								waitTime(4000);
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
									"Discard edits in discard pop up")) {
								TimeStampclick(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits in discard pop up");
								waitTime(3000);
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Record screen")) {
								TimeStampclick(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Back button in Record screen");
								waitTime(4000);
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
									"Discard edits in discard pop up")) {
								TimeStampclick(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits in discard pop up");
								waitTime(3000);
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Cross icon")) {
								TimeStampclick(IOSHipiCreateVideoPage.objiosbackbuttoninselectvideo, "Cross icon");
								waitTime(3000);
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp,
									"Discard edits in discard pop up")) {
								TimeStampclick(IOSHipiCreateVideoPage.objDiscardEditsButtonInDiscardEditsPopUp, "Discard edits in discard pop up");
								waitTime(3000);
							}

							if (TimeStampverifyElementExist(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home btn")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSHomeBtnInBelowTabBar, "Home btn");
								waitTime(3000);
							}

						}
				
				
						public void TimeStampPopupOfCameraAndMicrophone() throws Exception {
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objiosCameraPopup, "camera popup")) {
								TimeStampclick(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok button");
								waitTime(3000);

							} else {
								logger.info("Camera pop is not displayed");
							}
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.objiosMicrophone, "microphone")) {
								TimeStampclick(IOSHipiCreateVideoPage.objiosOkInAllowPopup, "ok button");
								waitTime(2000);
							} else {
								logger.info("Microphone pop is not displayed");

							}

						}
				
				
				
						/*
						 * To create video with required time
						 * 
						 */
						public void TimeStamp_create_Video_Of_Specific_Time( int k) throws Exception {
							TimeStampwaitForElementDisplayedFastPolling(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar,100, "Create button");
							TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");
							waitTime(3000);
							TimeStampPopupOfCameraAndMicrophone();
							if (!TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {
								TimeStampclick(IOSHipiNeoHomePage.objiOSCreateBtnInBelowTabBar, "Create button");	
								waitTime(3000);
							}
							
							
							if (TimeStampverifyElementExist(IOSHipiCreateVideoPage.iosRecordButon, "Record button")) {

								TimeStampclick(IOSHipiCreateVideoPage.objiosCreationTimesInBelowRecordingBtn(k+"s"), k+"s");
								waitTime(3000);
								TimeStampverifyElementPresent(IOSHipiCreateVideoPage.objiosTimerInBelowRecordingBtnSelectedTrue(k+"s"), k+"s  selected");
								TimeStampclick(IOSHipiCreateVideoPage.iosRecordButon, "Record button");

								TimeStampwaitForElementDisplayediOS(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, 250, "Next Button");
								TimeStampclick(IOSHipiCreateVideoPage.iosNextBtnAfterrecord, "Next Button");
								waitTime(2500);
								TimeStampwaitForElementDisplayediOS(IOSHipiCreateVideoPage.iosPostBtnAfterRec0rdng, 100, "Post button");
								waitTime(2500);
								
								

							}
						}
				
				
				
						// comment count needed 

						public void TimeStampcommentcount(int k) throws Exception {
							//extent.extentLogger("", "Selecting comment where comment count is more than :" + k);
							logger.info("Selecting comment where comment count is more than :" + k);
							for (int i = 1; i <= 20; i++) {

								String comment = getText(IOSHipiNeoHomePage.objiOSTotalCommentInFeedScreen);
								System.out.println(comment);
								String[] com = comment.split(" ");
								System.out.println(com[0]);
								int comment1 = Integer.parseInt(com[0]);
								if (k <= comment1) {
									TimeStampclick(IOSHipiNeoHomePage.objiOSCommentBtn, "Comment Icon");
									waitTime(2000);
									//extent.extentLogger("", "clicked on comment where comment count is more than :" + k);
									logger.info("clicked on comment where comment count is more than :" + k);
									break;
								} else {
									TimeStampPartialSwipe("Up", 1);
								}
							}
						}
				
				
				
	
		
		//P0 Search Scenarious 
		
		
		
//		public void DiscoverModuleSearchName(String Name) throws Exception {
//			
//			TimeStampclick(IOSHipiNeoHomePage.objiOSDiscoverBtnInBelowTabBar, "Discover");
//			waitTime(2000);
//			TimeStampclick(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage, "Search Field");
//			waitTime(2000);
//			//String Name="shivangi";
//			TimeStamptype(IOSHiPiNeoDiscoverPage.objiosSearchFieldInDiscoverPage,Name, Name);
//			waitTime(2000);
//			TimeStampclick(IOSHiPiNeoDiscoverPage.objiosSearchButtonInKeyboard, "SearchButton");
//			waitTime(2000);
//		}
//		
//		
//		public void DiscoverModule1() throws Exception {
//			DiscoverModuleSearchName("shivangi");
//			List<WebElement>  SuggestionName=findElements(IOSHiPiNeoDiscoverPage.objiosAutoSuggestionsInSearchParentPage);
//			
//			}
//			
//		}
		
		
		
		
		
		
		
		
		
		
		
		
		
}
